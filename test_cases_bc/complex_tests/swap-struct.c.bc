; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/complex_tests/swap-struct.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/swap-struct.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ptrstruct = type { ptr, ptr }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @swap(ptr noundef %a, ptr noundef %b) #0 {
entry:
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %c = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8
  store ptr %b, ptr %b.addr, align 8
  %0 = load ptr, ptr %a.addr, align 8
  %1 = load ptr, ptr %0, align 8
  store ptr %1, ptr %c, align 8
  %2 = load ptr, ptr %b.addr, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %a.addr, align 8
  store ptr %3, ptr %4, align 8
  %5 = load ptr, ptr %c, align 8
  %6 = load ptr, ptr %b.addr, align 8
  store ptr %5, ptr %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %PSt = alloca %struct.ptrstruct, align 8
  %pa = alloca ptr, align 8
  %pb = alloca ptr, align 8
  %b = alloca [20 x i8], align 16
  %a = alloca [20 x i8], align 16
  %arraydecay = getelementptr inbounds [20 x i8], ptr %a, i64 0, i64 0
  %p1 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 0
  store ptr %arraydecay, ptr %p1, align 8
  %arraydecay1 = getelementptr inbounds [20 x i8], ptr %b, i64 0, i64 0
  %p2 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 1
  store ptr %arraydecay1, ptr %p2, align 8
  %p12 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 1
  call void @swap(ptr noundef %p12, ptr noundef %p23)
  %p24 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 1
  %0 = load ptr, ptr %p24, align 8
  store ptr %0, ptr %pa, align 8
  %p15 = getelementptr inbounds %struct.ptrstruct, ptr %PSt, i32 0, i32 0
  %1 = load ptr, ptr %p15, align 8
  store ptr %1, ptr %pb, align 8
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
