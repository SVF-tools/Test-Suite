; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/complex_tests/test.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.extendstruct = type { ptr, ptr, i32 }
%struct.basestruct = type { ptr, ptr }

@i = dso_local global i32 0, align 4
@saveptr = dso_local global [5 x ptr] zeroinitializer, align 16
@gvar = dso_local global [10 x %struct.extendstruct] zeroinitializer, align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @save(ptr noundef %var) #0 {
entry:
  %var.addr = alloca ptr, align 8
  %idx = alloca i32, align 4
  %temp = alloca ptr, align 8
  store ptr %var, ptr %var.addr, align 8
  %0 = load i32, ptr @i, align 4
  store i32 %0, ptr %idx, align 4
  %1 = load ptr, ptr %var.addr, align 8
  store ptr %1, ptr %temp, align 8
  %2 = load ptr, ptr %var.addr, align 8
  %3 = load i32, ptr %idx, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds [5 x ptr], ptr @saveptr, i64 0, i64 %idxprom
  store ptr %2, ptr %arrayidx, align 8
  %4 = load ptr, ptr %var.addr, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load i32, ptr %idx, align 4
  %add = add i32 %6, 1
  %idxprom1 = zext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [5 x ptr], ptr @saveptr, i64 0, i64 %idxprom1
  store ptr %5, ptr %arrayidx2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @f() #0 {
entry:
  %temp = alloca ptr, align 8
  %t1 = alloca ptr, align 8
  %t2 = alloca ptr, align 8
  %call = call ptr @malloc(i32 noundef 16)
  store ptr %call, ptr getelementptr inbounds (%struct.extendstruct, ptr @gvar, i32 0, i32 1), align 8
  call void @save(ptr noundef @gvar)
  %0 = load i32, ptr @i, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [5 x ptr], ptr @saveptr, i64 0, i64 %idxprom
  %1 = load ptr, ptr %arrayidx, align 8
  store ptr %1, ptr %temp, align 8
  %2 = load ptr, ptr %temp, align 8
  store ptr %2, ptr %t1, align 8
  %3 = load ptr, ptr %t1, align 8
  %a = getelementptr inbounds %struct.extendstruct, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %a, align 8
  store ptr %4, ptr %t2, align 8
  %5 = load ptr, ptr %t2, align 8
  %a1 = getelementptr inbounds %struct.basestruct, ptr %5, i32 0, i32 1
  %6 = load ptr, ptr %a1, align 8
  store i32 0, ptr %6, align 4
  ret void
}

declare ptr @malloc(i32 noundef) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
