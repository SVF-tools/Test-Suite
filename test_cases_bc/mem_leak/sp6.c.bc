; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/sp6.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp6.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._list = type { ptr }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !17 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load i32, ptr %n.addr, align 4, !dbg !26
  %conv = sext i32 %0 to i64, !dbg !26
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !27
  ret ptr %call, !dbg !28
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !29 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !30, metadata !DIExpression()), !dbg !31
  %0 = load i32, ptr %n.addr, align 4, !dbg !32
  %conv = sext i32 %0 to i64, !dbg !32
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !33
  ret ptr %call, !dbg !34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !35 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !36, metadata !DIExpression()), !dbg !37
  %0 = load i32, ptr %n.addr, align 4, !dbg !38
  %conv = sext i32 %0 to i64, !dbg !38
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !39
  ret ptr %call, !dbg !40
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !41 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !42, metadata !DIExpression()), !dbg !43
  %0 = load i32, ptr %n.addr, align 4, !dbg !44
  %conv = sext i32 %0 to i64, !dbg !44
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !45
  ret ptr %call, !dbg !46
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !47 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !48, metadata !DIExpression()), !dbg !49
  %0 = load i32, ptr %n.addr, align 4, !dbg !50
  %conv = sext i32 %0 to i64, !dbg !50
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !51
  ret ptr %call, !dbg !52
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !53 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !54, metadata !DIExpression()), !dbg !55
  %0 = load i32, ptr %n.addr, align 4, !dbg !56
  %conv = sext i32 %0 to i64, !dbg !56
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !57
  ret ptr %call, !dbg !58
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !59 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !60, metadata !DIExpression()), !dbg !61
  %0 = load i32, ptr %n.addr, align 4, !dbg !62
  %conv = sext i32 %0 to i64, !dbg !62
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !63
  ret ptr %call, !dbg !64
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @make_list(i32 noundef %n) #0 !dbg !65 {
entry:
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %hd = alloca ptr, align 8
  %p = alloca ptr, align 8
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !68, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.declare(metadata ptr %i, metadata !70, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.declare(metadata ptr %hd, metadata !72, metadata !DIExpression()), !dbg !73
  %call = call ptr @SAFEMALLOC(i32 noundef 8), !dbg !74
  store ptr %call, ptr %hd, align 8, !dbg !73
  call void @llvm.dbg.declare(metadata ptr %p, metadata !75, metadata !DIExpression()), !dbg !76
  %0 = load ptr, ptr %hd, align 8, !dbg !77
  store ptr %0, ptr %p, align 8, !dbg !76
  %1 = load ptr, ptr %hd, align 8, !dbg !78
  ret ptr %1, !dbg !79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_list(ptr noundef %hd) #0 !dbg !80 {
entry:
  %hd.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %hd, ptr %hd.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %hd.addr, metadata !83, metadata !DIExpression()), !dbg !84
  call void @llvm.dbg.declare(metadata ptr %p, metadata !85, metadata !DIExpression()), !dbg !86
  br label %while.cond, !dbg !87

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %hd.addr, align 8, !dbg !88
  %cmp = icmp ne ptr %0, null, !dbg !89
  br i1 %cmp, label %while.body, label %while.end, !dbg !87

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %hd.addr, align 8, !dbg !90
  %next = getelementptr inbounds %struct._list, ptr %1, i32 0, i32 0, !dbg !92
  %2 = load ptr, ptr %next, align 8, !dbg !92
  store ptr %2, ptr %p, align 8, !dbg !93
  %3 = load ptr, ptr %hd.addr, align 8, !dbg !94
  call void @free(ptr noundef %3) #5, !dbg !95
  %4 = load ptr, ptr %p, align 8, !dbg !96
  store ptr %4, ptr %hd.addr, align 8, !dbg !97
  br label %while.cond, !dbg !87, !llvm.loop !98

while.end:                                        ; preds = %while.cond
  ret void, !dbg !101
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main() #0 !dbg !102 {
entry:
  %l = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %l, metadata !105, metadata !DIExpression()), !dbg !106
  %call = call ptr @make_list(i32 noundef 10), !dbg !107
  store ptr %call, ptr %l, align 8, !dbg !106
  %0 = load ptr, ptr %l, align 8, !dbg !108
  call void @free_list(ptr noundef %0), !dbg !109
  ret void, !dbg !110
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind allocsize(0) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!9, !10, !11, !12, !13, !14, !15}
!llvm.ident = !{!16}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp6.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "81f929b093558bbf1bdb845eb05dbb73")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !4, line: 13, baseType: !5)
!4 = !DIFile(filename: "src/mem_leak/sp6.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "81f929b093558bbf1bdb845eb05dbb73")
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!6 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_list", file: !4, line: 11, size: 64, elements: !7)
!7 = !{!8}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6, file: !4, line: 12, baseType: !5, size: 64)
!9 = !{i32 7, !"Dwarf Version", i32 5}
!10 = !{i32 2, !"Debug Info Version", i32 3}
!11 = !{i32 1, !"wchar_size", i32 4}
!12 = !{i32 8, !"PIC Level", i32 2}
!13 = !{i32 7, !"PIE Level", i32 2}
!14 = !{i32 7, !"uwtable", i32 2}
!15 = !{i32 7, !"frame-pointer", i32 2}
!16 = !{!"clang version 16.0.0"}
!17 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !18, file: !18, line: 5, type: !19, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!18 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!19 = !DISubroutineType(types: !20)
!20 = !{!21, !22}
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !{}
!24 = !DILocalVariable(name: "n", arg: 1, scope: !17, file: !18, line: 5, type: !22)
!25 = !DILocation(line: 5, column: 22, scope: !17)
!26 = !DILocation(line: 6, column: 17, scope: !17)
!27 = !DILocation(line: 6, column: 10, scope: !17)
!28 = !DILocation(line: 6, column: 3, scope: !17)
!29 = distinct !DISubprogram(name: "PLKMALLOC", scope: !18, file: !18, line: 9, type: !19, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!30 = !DILocalVariable(name: "n", arg: 1, scope: !29, file: !18, line: 9, type: !22)
!31 = !DILocation(line: 9, column: 21, scope: !29)
!32 = !DILocation(line: 10, column: 17, scope: !29)
!33 = !DILocation(line: 10, column: 10, scope: !29)
!34 = !DILocation(line: 10, column: 3, scope: !29)
!35 = distinct !DISubprogram(name: "NFRMALLOC", scope: !18, file: !18, line: 13, type: !19, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!36 = !DILocalVariable(name: "n", arg: 1, scope: !35, file: !18, line: 13, type: !22)
!37 = !DILocation(line: 13, column: 21, scope: !35)
!38 = !DILocation(line: 14, column: 17, scope: !35)
!39 = !DILocation(line: 14, column: 10, scope: !35)
!40 = !DILocation(line: 14, column: 3, scope: !35)
!41 = distinct !DISubprogram(name: "CLKMALLOC", scope: !18, file: !18, line: 17, type: !19, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!42 = !DILocalVariable(name: "n", arg: 1, scope: !41, file: !18, line: 17, type: !22)
!43 = !DILocation(line: 17, column: 21, scope: !41)
!44 = !DILocation(line: 18, column: 17, scope: !41)
!45 = !DILocation(line: 18, column: 10, scope: !41)
!46 = !DILocation(line: 18, column: 3, scope: !41)
!47 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !18, file: !18, line: 21, type: !19, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!48 = !DILocalVariable(name: "n", arg: 1, scope: !47, file: !18, line: 21, type: !22)
!49 = !DILocation(line: 21, column: 21, scope: !47)
!50 = !DILocation(line: 22, column: 17, scope: !47)
!51 = !DILocation(line: 22, column: 10, scope: !47)
!52 = !DILocation(line: 22, column: 3, scope: !47)
!53 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !18, file: !18, line: 25, type: !19, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!54 = !DILocalVariable(name: "n", arg: 1, scope: !53, file: !18, line: 25, type: !22)
!55 = !DILocation(line: 25, column: 21, scope: !53)
!56 = !DILocation(line: 26, column: 17, scope: !53)
!57 = !DILocation(line: 26, column: 10, scope: !53)
!58 = !DILocation(line: 26, column: 3, scope: !53)
!59 = distinct !DISubprogram(name: "LEAKFN", scope: !18, file: !18, line: 29, type: !19, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!60 = !DILocalVariable(name: "n", arg: 1, scope: !59, file: !18, line: 29, type: !22)
!61 = !DILocation(line: 29, column: 18, scope: !59)
!62 = !DILocation(line: 30, column: 17, scope: !59)
!63 = !DILocation(line: 30, column: 10, scope: !59)
!64 = !DILocation(line: 30, column: 3, scope: !59)
!65 = distinct !DISubprogram(name: "make_list", scope: !4, file: !4, line: 15, type: !66, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!66 = !DISubroutineType(types: !67)
!67 = !{!3, !22}
!68 = !DILocalVariable(name: "n", arg: 1, scope: !65, file: !4, line: 15, type: !22)
!69 = !DILocation(line: 15, column: 20, scope: !65)
!70 = !DILocalVariable(name: "i", scope: !65, file: !4, line: 16, type: !22)
!71 = !DILocation(line: 16, column: 8, scope: !65)
!72 = !DILocalVariable(name: "hd", scope: !65, file: !4, line: 17, type: !3)
!73 = !DILocation(line: 17, column: 9, scope: !65)
!74 = !DILocation(line: 17, column: 20, scope: !65)
!75 = !DILocalVariable(name: "p", scope: !65, file: !4, line: 18, type: !3)
!76 = !DILocation(line: 18, column: 9, scope: !65)
!77 = !DILocation(line: 18, column: 13, scope: !65)
!78 = !DILocation(line: 26, column: 15, scope: !65)
!79 = !DILocation(line: 26, column: 8, scope: !65)
!80 = distinct !DISubprogram(name: "free_list", scope: !4, file: !4, line: 29, type: !81, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!81 = !DISubroutineType(types: !82)
!82 = !{null, !3}
!83 = !DILocalVariable(name: "hd", arg: 1, scope: !80, file: !4, line: 29, type: !3)
!84 = !DILocation(line: 29, column: 21, scope: !80)
!85 = !DILocalVariable(name: "p", scope: !80, file: !4, line: 30, type: !3)
!86 = !DILocation(line: 30, column: 11, scope: !80)
!87 = !DILocation(line: 31, column: 7, scope: !80)
!88 = !DILocation(line: 31, column: 14, scope: !80)
!89 = !DILocation(line: 31, column: 17, scope: !80)
!90 = !DILocation(line: 32, column: 13, scope: !91)
!91 = distinct !DILexicalBlock(scope: !80, file: !4, line: 31, column: 23)
!92 = !DILocation(line: 32, column: 17, scope: !91)
!93 = !DILocation(line: 32, column: 11, scope: !91)
!94 = !DILocation(line: 33, column: 20, scope: !91)
!95 = !DILocation(line: 33, column: 15, scope: !91)
!96 = !DILocation(line: 34, column: 20, scope: !91)
!97 = !DILocation(line: 34, column: 18, scope: !91)
!98 = distinct !{!98, !87, !99, !100}
!99 = !DILocation(line: 35, column: 13, scope: !80)
!100 = !{!"llvm.loop.mustprogress"}
!101 = !DILocation(line: 36, column: 1, scope: !80)
!102 = distinct !DISubprogram(name: "main", scope: !4, file: !4, line: 38, type: !103, scopeLine: 38, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !23)
!103 = !DISubroutineType(types: !104)
!104 = !{null}
!105 = !DILocalVariable(name: "l", scope: !102, file: !4, line: 39, type: !3)
!106 = !DILocation(line: 39, column: 10, scope: !102)
!107 = !DILocation(line: 39, column: 14, scope: !102)
!108 = !DILocation(line: 40, column: 15, scope: !102)
!109 = !DILocation(line: 40, column: 5, scope: !102)
!110 = !DILocation(line: 41, column: 1, scope: !102)
