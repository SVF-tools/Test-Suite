; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/sp13.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp13.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.List = type { ptr, ptr }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !19 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !26, metadata !DIExpression()), !dbg !27
  %0 = load i32, ptr %n.addr, align 4, !dbg !28
  %conv = sext i32 %0 to i64, !dbg !28
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !29
  ret ptr %call, !dbg !30
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !31 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !32, metadata !DIExpression()), !dbg !33
  %0 = load i32, ptr %n.addr, align 4, !dbg !34
  %conv = sext i32 %0 to i64, !dbg !34
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !35
  ret ptr %call, !dbg !36
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !37 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !38, metadata !DIExpression()), !dbg !39
  %0 = load i32, ptr %n.addr, align 4, !dbg !40
  %conv = sext i32 %0 to i64, !dbg !40
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !41
  ret ptr %call, !dbg !42
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !43 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !44, metadata !DIExpression()), !dbg !45
  %0 = load i32, ptr %n.addr, align 4, !dbg !46
  %conv = sext i32 %0 to i64, !dbg !46
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !47
  ret ptr %call, !dbg !48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !49 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !50, metadata !DIExpression()), !dbg !51
  %0 = load i32, ptr %n.addr, align 4, !dbg !52
  %conv = sext i32 %0 to i64, !dbg !52
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !53
  ret ptr %call, !dbg !54
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !55 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !56, metadata !DIExpression()), !dbg !57
  %0 = load i32, ptr %n.addr, align 4, !dbg !58
  %conv = sext i32 %0 to i64, !dbg !58
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !59
  ret ptr %call, !dbg !60
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !61 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !62, metadata !DIExpression()), !dbg !63
  %0 = load i32, ptr %n.addr, align 4, !dbg !64
  %conv = sext i32 %0 to i64, !dbg !64
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !65
  ret ptr %call, !dbg !66
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @ra(ptr noundef %dst, ptr noundef %src) #0 !dbg !67 {
entry:
  %dst.addr = alloca ptr, align 8
  %src.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %dst, ptr %dst.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.addr, metadata !70, metadata !DIExpression()), !dbg !71
  store ptr %src, ptr %src.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %src.addr, metadata !72, metadata !DIExpression()), !dbg !73
  call void @llvm.dbg.declare(metadata ptr %p, metadata !74, metadata !DIExpression()), !dbg !75
  %call = call ptr @NFRMALLOC(i32 noundef 16), !dbg !76
  store ptr %call, ptr %p, align 8, !dbg !77
  %0 = load ptr, ptr %dst.addr, align 8, !dbg !78
  %1 = load ptr, ptr %p, align 8, !dbg !79
  %x = getelementptr inbounds %struct.List, ptr %1, i32 0, i32 0, !dbg !80
  store ptr %0, ptr %x, align 8, !dbg !81
  %2 = load ptr, ptr %src.addr, align 8, !dbg !82
  %3 = load ptr, ptr %p, align 8, !dbg !83
  %y = getelementptr inbounds %struct.List, ptr %3, i32 0, i32 1, !dbg !84
  store ptr %2, ptr %y, align 8, !dbg !85
  %4 = load ptr, ptr %p, align 8, !dbg !86
  ret ptr %4, !dbg !87
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !88 {
entry:
  %retval = alloca i32, align 4
  %p = alloca ptr, align 8
  %q = alloca ptr, align 8
  %pp = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %p, metadata !91, metadata !DIExpression()), !dbg !92
  %call = call ptr @NFRMALLOC(i32 noundef 10), !dbg !93
  store ptr %call, ptr %p, align 8, !dbg !92
  call void @llvm.dbg.declare(metadata ptr %q, metadata !94, metadata !DIExpression()), !dbg !95
  %call1 = call ptr @NFRMALLOC(i32 noundef 10), !dbg !96
  store ptr %call1, ptr %q, align 8, !dbg !95
  call void @llvm.dbg.declare(metadata ptr %pp, metadata !97, metadata !DIExpression()), !dbg !98
  %0 = load ptr, ptr %p, align 8, !dbg !99
  %1 = load ptr, ptr %q, align 8, !dbg !100
  %call2 = call ptr @ra(ptr noundef %0, ptr noundef %1), !dbg !101
  store ptr %call2, ptr %pp, align 8, !dbg !102
  %2 = load ptr, ptr %pp, align 8, !dbg !103
  %3 = ptrtoint ptr %2 to i32, !dbg !103
  ret i32 %3, !dbg !104
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!11, !12, !13, !14, !15, !16, !17}
!llvm.ident = !{!18}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/sp13.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "37fa4102dcf4fbc2603d67d81f563cd3")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "List", file: !5, line: 11, size: 128, elements: !6)
!5 = !DIFile(filename: "src/mem_leak/sp13.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "37fa4102dcf4fbc2603d67d81f563cd3")
!6 = !{!7, !10}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4, file: !5, line: 12, baseType: !8, size: 64)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4, file: !5, line: 13, baseType: !8, size: 64, offset: 64)
!11 = !{i32 7, !"Dwarf Version", i32 5}
!12 = !{i32 2, !"Debug Info Version", i32 3}
!13 = !{i32 1, !"wchar_size", i32 4}
!14 = !{i32 8, !"PIC Level", i32 2}
!15 = !{i32 7, !"PIE Level", i32 2}
!16 = !{i32 7, !"uwtable", i32 2}
!17 = !{i32 7, !"frame-pointer", i32 2}
!18 = !{!"clang version 16.0.0"}
!19 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !20, file: !20, line: 5, type: !21, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!20 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!21 = !DISubroutineType(types: !22)
!22 = !{!23, !24}
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!24 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!25 = !{}
!26 = !DILocalVariable(name: "n", arg: 1, scope: !19, file: !20, line: 5, type: !24)
!27 = !DILocation(line: 5, column: 22, scope: !19)
!28 = !DILocation(line: 6, column: 17, scope: !19)
!29 = !DILocation(line: 6, column: 10, scope: !19)
!30 = !DILocation(line: 6, column: 3, scope: !19)
!31 = distinct !DISubprogram(name: "PLKMALLOC", scope: !20, file: !20, line: 9, type: !21, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!32 = !DILocalVariable(name: "n", arg: 1, scope: !31, file: !20, line: 9, type: !24)
!33 = !DILocation(line: 9, column: 21, scope: !31)
!34 = !DILocation(line: 10, column: 17, scope: !31)
!35 = !DILocation(line: 10, column: 10, scope: !31)
!36 = !DILocation(line: 10, column: 3, scope: !31)
!37 = distinct !DISubprogram(name: "NFRMALLOC", scope: !20, file: !20, line: 13, type: !21, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!38 = !DILocalVariable(name: "n", arg: 1, scope: !37, file: !20, line: 13, type: !24)
!39 = !DILocation(line: 13, column: 21, scope: !37)
!40 = !DILocation(line: 14, column: 17, scope: !37)
!41 = !DILocation(line: 14, column: 10, scope: !37)
!42 = !DILocation(line: 14, column: 3, scope: !37)
!43 = distinct !DISubprogram(name: "CLKMALLOC", scope: !20, file: !20, line: 17, type: !21, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!44 = !DILocalVariable(name: "n", arg: 1, scope: !43, file: !20, line: 17, type: !24)
!45 = !DILocation(line: 17, column: 21, scope: !43)
!46 = !DILocation(line: 18, column: 17, scope: !43)
!47 = !DILocation(line: 18, column: 10, scope: !43)
!48 = !DILocation(line: 18, column: 3, scope: !43)
!49 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !20, file: !20, line: 21, type: !21, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!50 = !DILocalVariable(name: "n", arg: 1, scope: !49, file: !20, line: 21, type: !24)
!51 = !DILocation(line: 21, column: 21, scope: !49)
!52 = !DILocation(line: 22, column: 17, scope: !49)
!53 = !DILocation(line: 22, column: 10, scope: !49)
!54 = !DILocation(line: 22, column: 3, scope: !49)
!55 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !20, file: !20, line: 25, type: !21, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!56 = !DILocalVariable(name: "n", arg: 1, scope: !55, file: !20, line: 25, type: !24)
!57 = !DILocation(line: 25, column: 21, scope: !55)
!58 = !DILocation(line: 26, column: 17, scope: !55)
!59 = !DILocation(line: 26, column: 10, scope: !55)
!60 = !DILocation(line: 26, column: 3, scope: !55)
!61 = distinct !DISubprogram(name: "LEAKFN", scope: !20, file: !20, line: 29, type: !21, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!62 = !DILocalVariable(name: "n", arg: 1, scope: !61, file: !20, line: 29, type: !24)
!63 = !DILocation(line: 29, column: 18, scope: !61)
!64 = !DILocation(line: 30, column: 17, scope: !61)
!65 = !DILocation(line: 30, column: 10, scope: !61)
!66 = !DILocation(line: 30, column: 3, scope: !61)
!67 = distinct !DISubprogram(name: "ra", scope: !5, file: !5, line: 16, type: !68, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!68 = !DISubroutineType(types: !69)
!69 = !{!8, !8, !8}
!70 = !DILocalVariable(name: "dst", arg: 1, scope: !67, file: !5, line: 16, type: !8)
!71 = !DILocation(line: 16, column: 18, scope: !67)
!72 = !DILocalVariable(name: "src", arg: 2, scope: !67, file: !5, line: 16, type: !8)
!73 = !DILocation(line: 16, column: 29, scope: !67)
!74 = !DILocalVariable(name: "p", scope: !67, file: !5, line: 17, type: !3)
!75 = !DILocation(line: 17, column: 17, scope: !67)
!76 = !DILocation(line: 18, column: 25, scope: !67)
!77 = !DILocation(line: 18, column: 8, scope: !67)
!78 = !DILocation(line: 19, column: 12, scope: !67)
!79 = !DILocation(line: 19, column: 5, scope: !67)
!80 = !DILocation(line: 19, column: 8, scope: !67)
!81 = !DILocation(line: 19, column: 10, scope: !67)
!82 = !DILocation(line: 20, column: 14, scope: !67)
!83 = !DILocation(line: 20, column: 7, scope: !67)
!84 = !DILocation(line: 20, column: 10, scope: !67)
!85 = !DILocation(line: 20, column: 12, scope: !67)
!86 = !DILocation(line: 21, column: 13, scope: !67)
!87 = !DILocation(line: 21, column: 6, scope: !67)
!88 = distinct !DISubprogram(name: "main", scope: !5, file: !5, line: 24, type: !89, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !25)
!89 = !DISubroutineType(types: !90)
!90 = !{!24}
!91 = !DILocalVariable(name: "p", scope: !88, file: !5, line: 25, type: !8)
!92 = !DILocation(line: 25, column: 11, scope: !88)
!93 = !DILocation(line: 25, column: 15, scope: !88)
!94 = !DILocalVariable(name: "q", scope: !88, file: !5, line: 26, type: !8)
!95 = !DILocation(line: 26, column: 13, scope: !88)
!96 = !DILocation(line: 26, column: 17, scope: !88)
!97 = !DILocalVariable(name: "pp", scope: !88, file: !5, line: 27, type: !3)
!98 = !DILocation(line: 27, column: 19, scope: !88)
!99 = !DILocation(line: 28, column: 15, scope: !88)
!100 = !DILocation(line: 28, column: 17, scope: !88)
!101 = !DILocation(line: 28, column: 12, scope: !88)
!102 = !DILocation(line: 28, column: 10, scope: !88)
!103 = !DILocation(line: 29, column: 13, scope: !88)
!104 = !DILocation(line: 29, column: 6, scope: !88)
