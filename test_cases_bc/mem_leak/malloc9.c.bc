; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/malloc9.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc9.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.s_rr_node = type { i16, i16, i16, i16, i16, i16, ptr, ptr, float, float }

@rr_node = dso_local global ptr null, align 8, !dbg !0

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !32 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !38, metadata !DIExpression()), !dbg !39
  %0 = load i32, ptr %n.addr, align 4, !dbg !40
  %conv = sext i32 %0 to i64, !dbg !40
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !41
  ret ptr %call, !dbg !42
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !43 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !44, metadata !DIExpression()), !dbg !45
  %0 = load i32, ptr %n.addr, align 4, !dbg !46
  %conv = sext i32 %0 to i64, !dbg !46
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !47
  ret ptr %call, !dbg !48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !49 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !50, metadata !DIExpression()), !dbg !51
  %0 = load i32, ptr %n.addr, align 4, !dbg !52
  %conv = sext i32 %0 to i64, !dbg !52
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !53
  ret ptr %call, !dbg !54
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !55 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !56, metadata !DIExpression()), !dbg !57
  %0 = load i32, ptr %n.addr, align 4, !dbg !58
  %conv = sext i32 %0 to i64, !dbg !58
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !59
  ret ptr %call, !dbg !60
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !61 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !62, metadata !DIExpression()), !dbg !63
  %0 = load i32, ptr %n.addr, align 4, !dbg !64
  %conv = sext i32 %0 to i64, !dbg !64
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !65
  ret ptr %call, !dbg !66
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !67 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !68, metadata !DIExpression()), !dbg !69
  %0 = load i32, ptr %n.addr, align 4, !dbg !70
  %conv = sext i32 %0 to i64, !dbg !70
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !71
  ret ptr %call, !dbg !72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !73 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !74, metadata !DIExpression()), !dbg !75
  %0 = load i32, ptr %n.addr, align 4, !dbg !76
  %conv = sext i32 %0 to i64, !dbg !76
  %call = call noalias ptr @malloc(i64 noundef %conv) #3, !dbg !77
  ret ptr %call, !dbg !78
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @alloc() #0 !dbg !79 {
entry:
  %call = call ptr @NFRMALLOC(i32 noundef 10), !dbg !82
  ret ptr %call, !dbg !83
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !84 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %i, metadata !87, metadata !DIExpression()), !dbg !88
  %call = call ptr @alloc(), !dbg !89
  %0 = load ptr, ptr @rr_node, align 8, !dbg !90
  %1 = load i32, ptr %i, align 4, !dbg !91
  %idxprom = sext i32 %1 to i64, !dbg !90
  %arrayidx = getelementptr inbounds %struct.s_rr_node, ptr %0, i64 %idxprom, !dbg !90
  %edges = getelementptr inbounds %struct.s_rr_node, ptr %arrayidx, i32 0, i32 6, !dbg !92
  store ptr %call, ptr %edges, align 8, !dbg !93
  ret i32 0, !dbg !94
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!24, !25, !26, !27, !28, !29, !30}
!llvm.ident = !{!31}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "rr_node", scope: !2, file: !5, line: 17, type: !6, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc9.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "77ee16257947527d385aa7999c44a788")
!4 = !{!0}
!5 = !DIFile(filename: "src/mem_leak/malloc9.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "77ee16257947527d385aa7999c44a788")
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s_rr_node", file: !5, line: 10, size: 320, elements: !8)
!8 = !{!9, !11, !12, !13, !14, !15, !16, !19, !21, !23}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "xlow", scope: !7, file: !5, line: 11, baseType: !10, size: 16)
!10 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "xhigh", scope: !7, file: !5, line: 11, baseType: !10, size: 16, offset: 16)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "ylow", scope: !7, file: !5, line: 11, baseType: !10, size: 16, offset: 32)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "yhigh", scope: !7, file: !5, line: 11, baseType: !10, size: 16, offset: 48)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "ptc_num", scope: !7, file: !5, line: 12, baseType: !10, size: 16, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "num_edges", scope: !7, file: !5, line: 12, baseType: !10, size: 16, offset: 80)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !7, file: !5, line: 13, baseType: !17, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!18 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "switches", scope: !7, file: !5, line: 14, baseType: !20, size: 64, offset: 192)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "R", scope: !7, file: !5, line: 14, baseType: !22, size: 32, offset: 256)
!22 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !7, file: !5, line: 14, baseType: !22, size: 32, offset: 288)
!24 = !{i32 7, !"Dwarf Version", i32 5}
!25 = !{i32 2, !"Debug Info Version", i32 3}
!26 = !{i32 1, !"wchar_size", i32 4}
!27 = !{i32 8, !"PIC Level", i32 2}
!28 = !{i32 7, !"PIE Level", i32 2}
!29 = !{i32 7, !"uwtable", i32 2}
!30 = !{i32 7, !"frame-pointer", i32 2}
!31 = !{!"clang version 16.0.0"}
!32 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !33, file: !33, line: 5, type: !34, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!33 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!34 = !DISubroutineType(types: !35)
!35 = !{!36, !18}
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!37 = !{}
!38 = !DILocalVariable(name: "n", arg: 1, scope: !32, file: !33, line: 5, type: !18)
!39 = !DILocation(line: 5, column: 22, scope: !32)
!40 = !DILocation(line: 6, column: 17, scope: !32)
!41 = !DILocation(line: 6, column: 10, scope: !32)
!42 = !DILocation(line: 6, column: 3, scope: !32)
!43 = distinct !DISubprogram(name: "PLKMALLOC", scope: !33, file: !33, line: 9, type: !34, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!44 = !DILocalVariable(name: "n", arg: 1, scope: !43, file: !33, line: 9, type: !18)
!45 = !DILocation(line: 9, column: 21, scope: !43)
!46 = !DILocation(line: 10, column: 17, scope: !43)
!47 = !DILocation(line: 10, column: 10, scope: !43)
!48 = !DILocation(line: 10, column: 3, scope: !43)
!49 = distinct !DISubprogram(name: "NFRMALLOC", scope: !33, file: !33, line: 13, type: !34, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!50 = !DILocalVariable(name: "n", arg: 1, scope: !49, file: !33, line: 13, type: !18)
!51 = !DILocation(line: 13, column: 21, scope: !49)
!52 = !DILocation(line: 14, column: 17, scope: !49)
!53 = !DILocation(line: 14, column: 10, scope: !49)
!54 = !DILocation(line: 14, column: 3, scope: !49)
!55 = distinct !DISubprogram(name: "CLKMALLOC", scope: !33, file: !33, line: 17, type: !34, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!56 = !DILocalVariable(name: "n", arg: 1, scope: !55, file: !33, line: 17, type: !18)
!57 = !DILocation(line: 17, column: 21, scope: !55)
!58 = !DILocation(line: 18, column: 17, scope: !55)
!59 = !DILocation(line: 18, column: 10, scope: !55)
!60 = !DILocation(line: 18, column: 3, scope: !55)
!61 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !33, file: !33, line: 21, type: !34, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!62 = !DILocalVariable(name: "n", arg: 1, scope: !61, file: !33, line: 21, type: !18)
!63 = !DILocation(line: 21, column: 21, scope: !61)
!64 = !DILocation(line: 22, column: 17, scope: !61)
!65 = !DILocation(line: 22, column: 10, scope: !61)
!66 = !DILocation(line: 22, column: 3, scope: !61)
!67 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !33, file: !33, line: 25, type: !34, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!68 = !DILocalVariable(name: "n", arg: 1, scope: !67, file: !33, line: 25, type: !18)
!69 = !DILocation(line: 25, column: 21, scope: !67)
!70 = !DILocation(line: 26, column: 17, scope: !67)
!71 = !DILocation(line: 26, column: 10, scope: !67)
!72 = !DILocation(line: 26, column: 3, scope: !67)
!73 = distinct !DISubprogram(name: "LEAKFN", scope: !33, file: !33, line: 29, type: !34, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!74 = !DILocalVariable(name: "n", arg: 1, scope: !73, file: !33, line: 29, type: !18)
!75 = !DILocation(line: 29, column: 18, scope: !73)
!76 = !DILocation(line: 30, column: 17, scope: !73)
!77 = !DILocation(line: 30, column: 10, scope: !73)
!78 = !DILocation(line: 30, column: 3, scope: !73)
!79 = distinct !DISubprogram(name: "alloc", scope: !5, file: !5, line: 19, type: !80, scopeLine: 19, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!80 = !DISubroutineType(types: !81)
!81 = !{!17}
!82 = !DILocation(line: 21, column: 9, scope: !79)
!83 = !DILocation(line: 21, column: 2, scope: !79)
!84 = distinct !DISubprogram(name: "main", scope: !5, file: !5, line: 24, type: !85, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !37)
!85 = !DISubroutineType(types: !86)
!86 = !{!18}
!87 = !DILocalVariable(name: "i", scope: !84, file: !5, line: 26, type: !18)
!88 = !DILocation(line: 26, column: 6, scope: !84)
!89 = !DILocation(line: 27, column: 21, scope: !84)
!90 = !DILocation(line: 27, column: 2, scope: !84)
!91 = !DILocation(line: 27, column: 10, scope: !84)
!92 = !DILocation(line: 27, column: 13, scope: !84)
!93 = !DILocation(line: 27, column: 19, scope: !84)
!94 = !DILocation(line: 31, column: 1, scope: !84)
