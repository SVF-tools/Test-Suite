; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/mem_leak/malloc16.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc16.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FOO = type { ptr, ptr, ptr }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @SAFEMALLOC(i32 noundef %n) #0 !dbg !13 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !19, metadata !DIExpression()), !dbg !20
  %0 = load i32, ptr %n.addr, align 4, !dbg !21
  %conv = sext i32 %0 to i64, !dbg !21
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !22
  ret ptr %call, !dbg !23
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKMALLOC(i32 noundef %n) #0 !dbg !24 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !25, metadata !DIExpression()), !dbg !26
  %0 = load i32, ptr %n.addr, align 4, !dbg !27
  %conv = sext i32 %0 to i64, !dbg !27
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !28
  ret ptr %call, !dbg !29
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRMALLOC(i32 noundef %n) #0 !dbg !30 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load i32, ptr %n.addr, align 4, !dbg !33
  %conv = sext i32 %0 to i64, !dbg !33
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !34
  ret ptr %call, !dbg !35
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @CLKMALLOC(i32 noundef %n) #0 !dbg !36 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !37, metadata !DIExpression()), !dbg !38
  %0 = load i32, ptr %n.addr, align 4, !dbg !39
  %conv = sext i32 %0 to i64, !dbg !39
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !40
  ret ptr %call, !dbg !41
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @NFRLEAKFP(i32 noundef %n) #0 !dbg !42 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !43, metadata !DIExpression()), !dbg !44
  %0 = load i32, ptr %n.addr, align 4, !dbg !45
  %conv = sext i32 %0 to i64, !dbg !45
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !46
  ret ptr %call, !dbg !47
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @PLKLEAKFP(i32 noundef %n) #0 !dbg !48 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !49, metadata !DIExpression()), !dbg !50
  %0 = load i32, ptr %n.addr, align 4, !dbg !51
  %conv = sext i32 %0 to i64, !dbg !51
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !52
  ret ptr %call, !dbg !53
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local ptr @LEAKFN(i32 noundef %n) #0 !dbg !54 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, ptr %n.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !55, metadata !DIExpression()), !dbg !56
  %0 = load i32, ptr %n.addr, align 4, !dbg !57
  %conv = sext i32 %0 to i64, !dbg !57
  %call = call noalias ptr @malloc(i64 noundef %conv) #4, !dbg !58
  ret ptr %call, !dbg !59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @getfree(ptr noundef %net) #0 !dbg !60 {
entry:
  %net.addr = alloca ptr, align 8
  store ptr %net, ptr %net.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %net.addr, metadata !71, metadata !DIExpression()), !dbg !72
  %0 = load ptr, ptr %net.addr, align 8, !dbg !73
  %f1 = getelementptr inbounds %struct.FOO, ptr %0, i32 0, i32 0, !dbg !74
  %1 = load ptr, ptr %f1, align 8, !dbg !74
  call void @free(ptr noundef %1) #5, !dbg !75
  %2 = load ptr, ptr %net.addr, align 8, !dbg !76
  %f2 = getelementptr inbounds %struct.FOO, ptr %2, i32 0, i32 1, !dbg !77
  %3 = load ptr, ptr %f2, align 8, !dbg !77
  call void @free(ptr noundef %3) #5, !dbg !78
  %4 = load ptr, ptr %net.addr, align 8, !dbg !79
  %f3 = getelementptr inbounds %struct.FOO, ptr %4, i32 0, i32 2, !dbg !80
  %5 = load ptr, ptr %f3, align 8, !dbg !80
  call void @free(ptr noundef %5) #5, !dbg !81
  ret void, !dbg !82
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @readmin(ptr noundef %net1) #0 !dbg !83 {
entry:
  %net1.addr = alloca ptr, align 8
  store ptr %net1, ptr %net1.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %net1.addr, metadata !84, metadata !DIExpression()), !dbg !85
  %call = call ptr @SAFEMALLOC(i32 noundef 4), !dbg !86
  %0 = load ptr, ptr %net1.addr, align 8, !dbg !87
  %f1 = getelementptr inbounds %struct.FOO, ptr %0, i32 0, i32 0, !dbg !88
  store ptr %call, ptr %f1, align 8, !dbg !89
  %call1 = call ptr @SAFEMALLOC(i32 noundef 2), !dbg !90
  %1 = load ptr, ptr %net1.addr, align 8, !dbg !91
  %f2 = getelementptr inbounds %struct.FOO, ptr %1, i32 0, i32 1, !dbg !92
  store ptr %call1, ptr %f2, align 8, !dbg !93
  %call2 = call ptr @SAFEMALLOC(i32 noundef 3), !dbg !94
  %2 = load ptr, ptr %net1.addr, align 8, !dbg !95
  %f3 = getelementptr inbounds %struct.FOO, ptr %2, i32 0, i32 2, !dbg !96
  store ptr %call2, ptr %f3, align 8, !dbg !97
  ret void, !dbg !98
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !99 {
entry:
  %net = alloca %struct.FOO, align 8
  call void @llvm.dbg.declare(metadata ptr %net, metadata !102, metadata !DIExpression()), !dbg !103
  call void @readmin(ptr noundef %net), !dbg !104
  call void @getfree(ptr noundef %net), !dbg !105
  ret i32 0, !dbg !106
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind allocsize(0) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/mem_leak/malloc16.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "7413256decbfa61bd4e5c92078e69254")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!5 = !{i32 7, !"Dwarf Version", i32 5}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 8, !"PIC Level", i32 2}
!9 = !{i32 7, !"PIE Level", i32 2}
!10 = !{i32 7, !"uwtable", i32 2}
!11 = !{i32 7, !"frame-pointer", i32 2}
!12 = !{!"clang version 16.0.0"}
!13 = distinct !DISubprogram(name: "SAFEMALLOC", scope: !14, file: !14, line: 5, type: !15, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!14 = !DIFile(filename: "memleak_check.h", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "f78006bd129ed179fe44821c3aed9305")
!15 = !DISubroutineType(types: !16)
!16 = !{!17, !4}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!18 = !{}
!19 = !DILocalVariable(name: "n", arg: 1, scope: !13, file: !14, line: 5, type: !4)
!20 = !DILocation(line: 5, column: 22, scope: !13)
!21 = !DILocation(line: 6, column: 17, scope: !13)
!22 = !DILocation(line: 6, column: 10, scope: !13)
!23 = !DILocation(line: 6, column: 3, scope: !13)
!24 = distinct !DISubprogram(name: "PLKMALLOC", scope: !14, file: !14, line: 9, type: !15, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!25 = !DILocalVariable(name: "n", arg: 1, scope: !24, file: !14, line: 9, type: !4)
!26 = !DILocation(line: 9, column: 21, scope: !24)
!27 = !DILocation(line: 10, column: 17, scope: !24)
!28 = !DILocation(line: 10, column: 10, scope: !24)
!29 = !DILocation(line: 10, column: 3, scope: !24)
!30 = distinct !DISubprogram(name: "NFRMALLOC", scope: !14, file: !14, line: 13, type: !15, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!31 = !DILocalVariable(name: "n", arg: 1, scope: !30, file: !14, line: 13, type: !4)
!32 = !DILocation(line: 13, column: 21, scope: !30)
!33 = !DILocation(line: 14, column: 17, scope: !30)
!34 = !DILocation(line: 14, column: 10, scope: !30)
!35 = !DILocation(line: 14, column: 3, scope: !30)
!36 = distinct !DISubprogram(name: "CLKMALLOC", scope: !14, file: !14, line: 17, type: !15, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!37 = !DILocalVariable(name: "n", arg: 1, scope: !36, file: !14, line: 17, type: !4)
!38 = !DILocation(line: 17, column: 21, scope: !36)
!39 = !DILocation(line: 18, column: 17, scope: !36)
!40 = !DILocation(line: 18, column: 10, scope: !36)
!41 = !DILocation(line: 18, column: 3, scope: !36)
!42 = distinct !DISubprogram(name: "NFRLEAKFP", scope: !14, file: !14, line: 21, type: !15, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!43 = !DILocalVariable(name: "n", arg: 1, scope: !42, file: !14, line: 21, type: !4)
!44 = !DILocation(line: 21, column: 21, scope: !42)
!45 = !DILocation(line: 22, column: 17, scope: !42)
!46 = !DILocation(line: 22, column: 10, scope: !42)
!47 = !DILocation(line: 22, column: 3, scope: !42)
!48 = distinct !DISubprogram(name: "PLKLEAKFP", scope: !14, file: !14, line: 25, type: !15, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!49 = !DILocalVariable(name: "n", arg: 1, scope: !48, file: !14, line: 25, type: !4)
!50 = !DILocation(line: 25, column: 21, scope: !48)
!51 = !DILocation(line: 26, column: 17, scope: !48)
!52 = !DILocation(line: 26, column: 10, scope: !48)
!53 = !DILocation(line: 26, column: 3, scope: !48)
!54 = distinct !DISubprogram(name: "LEAKFN", scope: !14, file: !14, line: 29, type: !15, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!55 = !DILocalVariable(name: "n", arg: 1, scope: !54, file: !14, line: 29, type: !4)
!56 = !DILocation(line: 29, column: 18, scope: !54)
!57 = !DILocation(line: 30, column: 17, scope: !54)
!58 = !DILocation(line: 30, column: 10, scope: !54)
!59 = !DILocation(line: 30, column: 3, scope: !54)
!60 = distinct !DISubprogram(name: "getfree", scope: !61, file: !61, line: 19, type: !62, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!61 = !DIFile(filename: "src/mem_leak/malloc16.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "7413256decbfa61bd4e5c92078e69254")
!62 = !DISubroutineType(types: !63)
!63 = !{null, !64}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "FOO", file: !61, line: 14, baseType: !66)
!66 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !61, line: 10, size: 192, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !66, file: !61, line: 11, baseType: !3, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !66, file: !61, line: 12, baseType: !3, size: 64, offset: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !66, file: !61, line: 13, baseType: !3, size: 64, offset: 128)
!71 = !DILocalVariable(name: "net", arg: 1, scope: !60, file: !61, line: 19, type: !64)
!72 = !DILocation(line: 19, column: 19, scope: !60)
!73 = !DILocation(line: 21, column: 7, scope: !60)
!74 = !DILocation(line: 21, column: 12, scope: !60)
!75 = !DILocation(line: 21, column: 2, scope: !60)
!76 = !DILocation(line: 22, column: 7, scope: !60)
!77 = !DILocation(line: 22, column: 12, scope: !60)
!78 = !DILocation(line: 22, column: 2, scope: !60)
!79 = !DILocation(line: 23, column: 7, scope: !60)
!80 = !DILocation(line: 23, column: 12, scope: !60)
!81 = !DILocation(line: 23, column: 2, scope: !60)
!82 = !DILocation(line: 24, column: 1, scope: !60)
!83 = distinct !DISubprogram(name: "readmin", scope: !61, file: !61, line: 26, type: !62, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!84 = !DILocalVariable(name: "net1", arg: 1, scope: !83, file: !61, line: 26, type: !64)
!85 = !DILocation(line: 26, column: 19, scope: !83)
!86 = !DILocation(line: 27, column: 19, scope: !83)
!87 = !DILocation(line: 27, column: 2, scope: !83)
!88 = !DILocation(line: 27, column: 8, scope: !83)
!89 = !DILocation(line: 27, column: 11, scope: !83)
!90 = !DILocation(line: 28, column: 19, scope: !83)
!91 = !DILocation(line: 28, column: 2, scope: !83)
!92 = !DILocation(line: 28, column: 8, scope: !83)
!93 = !DILocation(line: 28, column: 11, scope: !83)
!94 = !DILocation(line: 29, column: 19, scope: !83)
!95 = !DILocation(line: 29, column: 2, scope: !83)
!96 = !DILocation(line: 29, column: 8, scope: !83)
!97 = !DILocation(line: 29, column: 11, scope: !83)
!98 = !DILocation(line: 30, column: 1, scope: !83)
!99 = distinct !DISubprogram(name: "main", scope: !61, file: !61, line: 32, type: !100, scopeLine: 32, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!100 = !DISubroutineType(types: !101)
!101 = !{!4}
!102 = !DILocalVariable(name: "net", scope: !99, file: !61, line: 33, type: !65)
!103 = !DILocation(line: 33, column: 6, scope: !99)
!104 = !DILocation(line: 34, column: 2, scope: !99)
!105 = !DILocation(line: 35, column: 2, scope: !99)
!106 = !DILocation(line: 36, column: 1, scope: !99)
