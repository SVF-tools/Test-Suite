; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/basic_c_tests/funptr-nested-struct-simple.c.bc'
source_filename = "/root/testsss/Test-Suite/src/basic_c_tests/funptr-nested-struct-simple.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.interesting = type { i32, ptr, ptr }
%struct.nested_ptr = type { i32, ptr }

@g = dso_local global i32 0, align 4
@i1 = dso_local global { i32, [4 x i8], ptr, ptr } { i32 0, [4 x i8] zeroinitializer, ptr @f1, ptr @f2 }, align 8
@n1 = dso_local global { i32, [4 x i8], ptr } { i32 0, [4 x i8] zeroinitializer, ptr @i1 }, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @f1(ptr noundef %a) #0 {
entry:
  %a.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8
  %0 = load ptr, ptr %a.addr, align 8
  call void @MAYALIAS(ptr noundef %0, ptr noundef @g)
  ret void
}

declare void @MAYALIAS(ptr noundef, ptr noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @f2(ptr noundef %a) #0 {
entry:
  %a.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8
  %0 = load ptr, ptr %a.addr, align 8
  call void @MAYALIAS(ptr noundef %0, ptr noundef @g)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @test_ptr() #0 {
entry:
  %interesting_stub = alloca %struct.interesting, align 8
  %0 = load ptr, ptr getelementptr inbounds nuw (%struct.nested_ptr, ptr @n1, i32 0, i32 1), align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %interesting_stub, ptr align 8 %0, i64 24, i1 false)
  %f1 = getelementptr inbounds nuw %struct.interesting, ptr %interesting_stub, i32 0, i32 1
  %1 = load ptr, ptr %f1, align 8
  call void %1(ptr noundef @g)
  %f2 = getelementptr inbounds nuw %struct.interesting, ptr %interesting_stub, i32 0, i32 2
  %2 = load ptr, ptr %f2, align 8
  call void %2(ptr noundef @g)
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
