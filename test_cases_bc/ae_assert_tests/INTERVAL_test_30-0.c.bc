; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_30-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/INTERVAL_test_30-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [9 x i8] c"Value:%d\00", align 1, !dbg !0

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !18 {
entry:
  %retval = alloca i32, align 4
  %randomNumber = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  %call = call i32 (i32, ...) @time(i32 noundef 0), !dbg !23
  call void @srand(i32 noundef %call) #4, !dbg !24
  call void @llvm.dbg.declare(metadata ptr %randomNumber, metadata !25, metadata !DIExpression()), !dbg !26
  %call1 = call i32 @rand() #4, !dbg !27
  %rem = srem i32 %call1, 999, !dbg !28
  store i32 %rem, ptr %randomNumber, align 4, !dbg !26
  call void @llvm.dbg.declare(metadata ptr %i, metadata !29, metadata !DIExpression()), !dbg !30
  %0 = load i32, ptr %randomNumber, align 4, !dbg !31
  %call2 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %0), !dbg !32
  store i32 %call2, ptr %i, align 4, !dbg !30
  %1 = load i32, ptr %i, align 4, !dbg !33
  %cmp = icmp sge i32 %1, 7, !dbg !34
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !35

land.rhs:                                         ; preds = %entry
  %2 = load i32, ptr %i, align 4, !dbg !36
  %cmp3 = icmp sle i32 %2, 9, !dbg !37
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !38
  call void @svf_assert(i1 noundef zeroext %3), !dbg !39
  %4 = load i32, ptr %retval, align 4, !dbg !40
  ret i32 %4, !dbg !40
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #1

declare i32 @time(...) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nounwind
declare i32 @rand() #1

declare i32 @printf(ptr noundef, ...) #2

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!7}
!llvm.module.flags = !{!10, !11, !12, !13, !14, !15, !16}
!llvm.ident = !{!17}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 10, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/INTERVAL_test_30-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "d11ac7b5f7720321357f77e13061dcc3")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 9)
!7 = distinct !DICompileUnit(language: DW_LANG_C11, file: !8, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !9, splitDebugInlining: false, nameTableKind: None)
!8 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/INTERVAL_test_30-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "d11ac7b5f7720321357f77e13061dcc3")
!9 = !{!0}
!10 = !{i32 7, !"Dwarf Version", i32 5}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{i32 1, !"wchar_size", i32 4}
!13 = !{i32 8, !"PIC Level", i32 2}
!14 = !{i32 7, !"PIE Level", i32 2}
!15 = !{i32 7, !"uwtable", i32 2}
!16 = !{i32 7, !"frame-pointer", i32 2}
!17 = !{!"clang version 16.0.0"}
!18 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 7, type: !19, scopeLine: 7, spFlags: DISPFlagDefinition, unit: !7, retainedNodes: !22)
!19 = !DISubroutineType(types: !20)
!20 = !{!21}
!21 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!22 = !{}
!23 = !DILocation(line: 8, column: 11, scope: !18)
!24 = !DILocation(line: 8, column: 5, scope: !18)
!25 = !DILocalVariable(name: "randomNumber", scope: !18, file: !2, line: 9, type: !21)
!26 = !DILocation(line: 9, column: 6, scope: !18)
!27 = !DILocation(line: 9, column: 21, scope: !18)
!28 = !DILocation(line: 9, column: 28, scope: !18)
!29 = !DILocalVariable(name: "i", scope: !18, file: !2, line: 10, type: !21)
!30 = !DILocation(line: 10, column: 6, scope: !18)
!31 = !DILocation(line: 10, column: 29, scope: !18)
!32 = !DILocation(line: 10, column: 10, scope: !18)
!33 = !DILocation(line: 11, column: 13, scope: !18)
!34 = !DILocation(line: 11, column: 15, scope: !18)
!35 = !DILocation(line: 11, column: 20, scope: !18)
!36 = !DILocation(line: 11, column: 23, scope: !18)
!37 = !DILocation(line: 11, column: 25, scope: !18)
!38 = !DILocation(line: 0, scope: !18)
!39 = !DILocation(line: 11, column: 2, scope: !18)
!40 = !DILocation(line: 12, column: 1, scope: !18)
