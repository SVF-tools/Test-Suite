; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_array_func_1-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/BASIC_array_func_1-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getValue(ptr noundef %arr, i32 noundef %x, i32 noundef %y) #0 !dbg !10 {
entry:
  %arr.addr = alloca ptr, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store ptr %arr, ptr %arr.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %arr.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store i32 %y, ptr %y.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %y.addr, metadata !22, metadata !DIExpression()), !dbg !23
  %0 = load ptr, ptr %arr.addr, align 8, !dbg !24
  %1 = load i32, ptr %x.addr, align 4, !dbg !25
  %idxprom = sext i32 %1 to i64, !dbg !24
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %idxprom, !dbg !24
  %2 = load ptr, ptr %arrayidx, align 8, !dbg !24
  %3 = load i32, ptr %y.addr, align 4, !dbg !26
  %idxprom1 = sext i32 %3 to i64, !dbg !24
  %arrayidx2 = getelementptr inbounds i32, ptr %2, i64 %idxprom1, !dbg !24
  %4 = load i32, ptr %arrayidx2, align 4, !dbg !24
  ret i32 %4, !dbg !27
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !28 {
entry:
  %retval = alloca i32, align 4
  %arr = alloca [2 x [2 x i32]], align 16
  %v = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %arr, metadata !31, metadata !DIExpression()), !dbg !35
  %arrayidx = getelementptr inbounds [2 x [2 x i32]], ptr %arr, i64 0, i64 0, !dbg !36
  %arrayidx1 = getelementptr inbounds [2 x i32], ptr %arrayidx, i64 0, i64 0, !dbg !36
  store i32 10, ptr %arrayidx1, align 16, !dbg !37
  call void @llvm.dbg.declare(metadata ptr %v, metadata !38, metadata !DIExpression()), !dbg !39
  %arraydecay = getelementptr inbounds [2 x [2 x i32]], ptr %arr, i64 0, i64 0, !dbg !40
  %call = call i32 @getValue(ptr noundef %arraydecay, i32 noundef 0, i32 noundef 0), !dbg !41
  store i32 %call, ptr %v, align 4, !dbg !39
  %0 = load i32, ptr %v, align 4, !dbg !42
  %cmp = icmp eq i32 %0, 10, !dbg !43
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !44
  ret i32 0, !dbg !45
}

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/BASIC_array_func_1-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "99c8c82f59339ff114e3cb9eaa56d36b")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"clang version 16.0.0"}
!10 = distinct !DISubprogram(name: "getValue", scope: !11, file: !11, line: 8, type: !12, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!11 = !DIFile(filename: "src/ae_assert_tests/BASIC_array_func_1-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "99c8c82f59339ff114e3cb9eaa56d36b")
!12 = !DISubroutineType(types: !13)
!13 = !{!14, !15, !14, !14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!17 = !{}
!18 = !DILocalVariable(name: "arr", arg: 1, scope: !10, file: !11, line: 8, type: !15)
!19 = !DILocation(line: 8, column: 20, scope: !10)
!20 = !DILocalVariable(name: "x", arg: 2, scope: !10, file: !11, line: 8, type: !14)
!21 = !DILocation(line: 8, column: 29, scope: !10)
!22 = !DILocalVariable(name: "y", arg: 3, scope: !10, file: !11, line: 8, type: !14)
!23 = !DILocation(line: 8, column: 36, scope: !10)
!24 = !DILocation(line: 9, column: 12, scope: !10)
!25 = !DILocation(line: 9, column: 16, scope: !10)
!26 = !DILocation(line: 9, column: 19, scope: !10)
!27 = !DILocation(line: 9, column: 5, scope: !10)
!28 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 12, type: !29, scopeLine: 12, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!29 = !DISubroutineType(types: !30)
!30 = !{!14}
!31 = !DILocalVariable(name: "arr", scope: !28, file: !11, line: 13, type: !32)
!32 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !33)
!33 = !{!34, !34}
!34 = !DISubrange(count: 2)
!35 = !DILocation(line: 13, column: 9, scope: !28)
!36 = !DILocation(line: 14, column: 5, scope: !28)
!37 = !DILocation(line: 14, column: 15, scope: !28)
!38 = !DILocalVariable(name: "v", scope: !28, file: !11, line: 15, type: !14)
!39 = !DILocation(line: 15, column: 9, scope: !28)
!40 = !DILocation(line: 15, column: 22, scope: !28)
!41 = !DILocation(line: 15, column: 13, scope: !28)
!42 = !DILocation(line: 16, column: 16, scope: !28)
!43 = !DILocation(line: 16, column: 18, scope: !28)
!44 = !DILocation(line: 16, column: 5, scope: !28)
!45 = !DILocation(line: 17, column: 5, scope: !28)
