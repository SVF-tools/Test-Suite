; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/cwe121_int_alloc-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/cwe121_int_alloc-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %data = alloca ptr, align 8
  %dataBadBuffer = alloca ptr, align 8
  %0 = alloca i8, i64 16, align 16
  store ptr %0, ptr %dataBadBuffer, align 8
  %1 = load ptr, ptr %dataBadBuffer, align 8
  store ptr %1, ptr %data, align 8
  %2 = load ptr, ptr %data, align 8
  %arrayidx = getelementptr inbounds i32, ptr %2, i64 0
  store i32 10, ptr %arrayidx, align 4
  %3 = load ptr, ptr %data, align 8
  %arrayidx1 = getelementptr inbounds i32, ptr %3, i64 1
  store i32 11, ptr %arrayidx1, align 4
  %4 = load ptr, ptr %data, align 8
  %arrayidx2 = getelementptr inbounds i32, ptr %4, i64 2
  store i32 12, ptr %arrayidx2, align 4
  %5 = load ptr, ptr %data, align 8
  %arrayidx3 = getelementptr inbounds i32, ptr %5, i64 1
  %6 = load i32, ptr %arrayidx3, align 4
  %cmp = icmp eq i32 %6, 11
  call void @svf_assert(i1 noundef zeroext %cmp)
  ret i32 0
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
