; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_19-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_19-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @foo(ptr noundef %i) #0 !dbg !10 {
entry:
  %i.addr = alloca ptr, align 8
  %a = alloca i32, align 4
  store ptr %i, ptr %i.addr, align 8
    #dbg_declare(ptr %i.addr, !17, !DIExpression(), !18)
    #dbg_declare(ptr %a, !19, !DIExpression(), !20)
  %0 = load ptr, ptr %i.addr, align 8, !dbg !21
  %1 = load i32, ptr %0, align 4, !dbg !22
  %rem = srem i32 %1, 2, !dbg !23
  store i32 %rem, ptr %a, align 4, !dbg !20
  %2 = load i32, ptr %a, align 4, !dbg !24
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !25

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !26

sw.bb1:                                           ; preds = %entry
  %3 = load ptr, ptr %i.addr, align 8, !dbg !28
  %4 = load i32, ptr %3, align 4, !dbg !29
  %add = add nsw i32 %4, 1, !dbg !30
  %5 = load ptr, ptr %i.addr, align 8, !dbg !31
  store i32 %add, ptr %5, align 4, !dbg !32
  br label %sw.epilog, !dbg !33

sw.default:                                       ; preds = %entry
  %6 = load ptr, ptr %i.addr, align 8, !dbg !34
  %7 = load i32, ptr %6, align 4, !dbg !35
  %add2 = add nsw i32 %7, 3, !dbg !36
  %8 = load ptr, ptr %i.addr, align 8, !dbg !37
  store i32 %add2, ptr %8, align 4, !dbg !38
  br label %sw.epilog, !dbg !39

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !40
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !41 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %i, !44, !DIExpression(), !45)
  %0 = load i32, ptr %i, align 4, !dbg !46
  call void @set_value(i32 noundef %0, i32 noundef 1, i32 noundef 1), !dbg !47
  %1 = load i32, ptr %i, align 4, !dbg !48
  %cmp = icmp sge i32 %1, 0, !dbg !50
  br i1 %cmp, label %if.then, label %if.end, !dbg !50

if.then:                                          ; preds = %entry
  call void @foo(ptr noundef %i), !dbg !51
  %2 = load i32, ptr %i, align 4, !dbg !53
  %rem = srem i32 %2, 2, !dbg !54
  %cmp1 = icmp eq i32 %rem, 0, !dbg !55
  call void @svf_assert(i1 noundef zeroext %cmp1), !dbg !56
  br label %if.end, !dbg !57

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, ptr %retval, align 4, !dbg !58
  ret i32 %3, !dbg !58
}

declare void @set_value(i32 noundef, i32 noundef, i32 noundef) #1

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_19-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "eef7b67c0b1589636664d75c4dc1f3fc")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!10 = distinct !DISubprogram(name: "foo", scope: !11, file: !11, line: 6, type: !12, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!11 = !DIFile(filename: "src/ae_assert_tests/INTERVAL_test_19-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "eef7b67c0b1589636664d75c4dc1f3fc")
!12 = !DISubroutineType(types: !13)
!13 = !{null, !14}
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!16 = !{}
!17 = !DILocalVariable(name: "i", arg: 1, scope: !10, file: !11, line: 6, type: !14)
!18 = !DILocation(line: 6, column: 15, scope: !10)
!19 = !DILocalVariable(name: "a", scope: !10, file: !11, line: 7, type: !15)
!20 = !DILocation(line: 7, column: 9, scope: !10)
!21 = !DILocation(line: 7, column: 14, scope: !10)
!22 = !DILocation(line: 7, column: 13, scope: !10)
!23 = !DILocation(line: 7, column: 16, scope: !10)
!24 = !DILocation(line: 8, column: 13, scope: !10)
!25 = !DILocation(line: 8, column: 5, scope: !10)
!26 = !DILocation(line: 11, column: 13, scope: !27)
!27 = distinct !DILexicalBlock(scope: !10, file: !11, line: 9, column: 5)
!28 = !DILocation(line: 13, column: 19, scope: !27)
!29 = !DILocation(line: 13, column: 18, scope: !27)
!30 = !DILocation(line: 13, column: 21, scope: !27)
!31 = !DILocation(line: 13, column: 14, scope: !27)
!32 = !DILocation(line: 13, column: 16, scope: !27)
!33 = !DILocation(line: 14, column: 13, scope: !27)
!34 = !DILocation(line: 16, column: 19, scope: !27)
!35 = !DILocation(line: 16, column: 18, scope: !27)
!36 = !DILocation(line: 16, column: 21, scope: !27)
!37 = !DILocation(line: 16, column: 14, scope: !27)
!38 = !DILocation(line: 16, column: 16, scope: !27)
!39 = !DILocation(line: 17, column: 13, scope: !27)
!40 = !DILocation(line: 19, column: 1, scope: !10)
!41 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 21, type: !42, scopeLine: 21, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !16)
!42 = !DISubroutineType(types: !43)
!43 = !{!15}
!44 = !DILocalVariable(name: "i", scope: !41, file: !11, line: 22, type: !15)
!45 = !DILocation(line: 22, column: 9, scope: !41)
!46 = !DILocation(line: 23, column: 15, scope: !41)
!47 = !DILocation(line: 23, column: 5, scope: !41)
!48 = !DILocation(line: 24, column: 9, scope: !49)
!49 = distinct !DILexicalBlock(scope: !41, file: !11, line: 24, column: 9)
!50 = !DILocation(line: 24, column: 11, scope: !49)
!51 = !DILocation(line: 25, column: 9, scope: !52)
!52 = distinct !DILexicalBlock(scope: !49, file: !11, line: 24, column: 17)
!53 = !DILocation(line: 26, column: 20, scope: !52)
!54 = !DILocation(line: 26, column: 22, scope: !52)
!55 = !DILocation(line: 26, column: 26, scope: !52)
!56 = !DILocation(line: 26, column: 9, scope: !52)
!57 = !DILocation(line: 27, column: 5, scope: !52)
!58 = !DILocation(line: 28, column: 1, scope: !41)
