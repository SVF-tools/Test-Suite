; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/cwe121_char_alloc-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/cwe121_char_alloc-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !13 {
entry:
  %data = alloca ptr, align 8
  %dataBadBuffer = alloca ptr, align 8
  call void @llvm.dbg.declare(metadata ptr %data, metadata !19, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.declare(metadata ptr %dataBadBuffer, metadata !21, metadata !DIExpression()), !dbg !22
  %0 = alloca i8, i64 4, align 16, !dbg !23
  store ptr %0, ptr %dataBadBuffer, align 8, !dbg !22
  %1 = load ptr, ptr %dataBadBuffer, align 8, !dbg !24
  store ptr %1, ptr %data, align 8, !dbg !25
  %2 = load ptr, ptr %data, align 8, !dbg !26
  %arrayidx = getelementptr inbounds i8, ptr %2, i64 0, !dbg !26
  store i8 65, ptr %arrayidx, align 1, !dbg !27
  %3 = load ptr, ptr %data, align 8, !dbg !28
  %arrayidx1 = getelementptr inbounds i8, ptr %3, i64 1, !dbg !28
  store i8 65, ptr %arrayidx1, align 1, !dbg !29
  %4 = load ptr, ptr %data, align 8, !dbg !30
  %arrayidx2 = getelementptr inbounds i8, ptr %4, i64 2, !dbg !30
  store i8 65, ptr %arrayidx2, align 1, !dbg !31
  %5 = load ptr, ptr %data, align 8, !dbg !32
  %arrayidx3 = getelementptr inbounds i8, ptr %5, i64 1, !dbg !32
  %6 = load i8, ptr %arrayidx3, align 1, !dbg !32
  %conv = sext i8 %6 to i32, !dbg !32
  %cmp = icmp eq i32 %conv, 65, !dbg !33
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !34
  ret i32 0, !dbg !35
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7, !8, !9, !10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/cwe121_char_alloc-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "cd229c218c71222c80297417ec53073b")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{i32 7, !"Dwarf Version", i32 5}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 8, !"PIC Level", i32 2}
!9 = !{i32 7, !"PIE Level", i32 2}
!10 = !{i32 7, !"uwtable", i32 2}
!11 = !{i32 7, !"frame-pointer", i32 2}
!12 = !{!"clang version 16.0.0"}
!13 = distinct !DISubprogram(name: "main", scope: !14, file: !14, line: 8, type: !15, scopeLine: 8, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !18)
!14 = !DIFile(filename: "src/ae_assert_tests/cwe121_char_alloc-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "cd229c218c71222c80297417ec53073b")
!15 = !DISubroutineType(types: !16)
!16 = !{!17}
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !{}
!19 = !DILocalVariable(name: "data", scope: !13, file: !14, line: 9, type: !3)
!20 = !DILocation(line: 9, column: 12, scope: !13)
!21 = !DILocalVariable(name: "dataBadBuffer", scope: !13, file: !14, line: 10, type: !3)
!22 = !DILocation(line: 10, column: 12, scope: !13)
!23 = !DILocation(line: 10, column: 36, scope: !13)
!24 = !DILocation(line: 13, column: 12, scope: !13)
!25 = !DILocation(line: 13, column: 10, scope: !13)
!26 = !DILocation(line: 14, column: 5, scope: !13)
!27 = !DILocation(line: 14, column: 13, scope: !13)
!28 = !DILocation(line: 15, column: 5, scope: !13)
!29 = !DILocation(line: 15, column: 13, scope: !13)
!30 = !DILocation(line: 16, column: 5, scope: !13)
!31 = !DILocation(line: 16, column: 13, scope: !13)
!32 = !DILocation(line: 17, column: 16, scope: !13)
!33 = !DILocation(line: 17, column: 24, scope: !13)
!34 = !DILocation(line: 17, column: 5, scope: !13)
!35 = !DILocation(line: 18, column: 1, scope: !13)
