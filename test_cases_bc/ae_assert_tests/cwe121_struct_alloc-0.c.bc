; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_assert_tests/cwe121_struct_alloc-0.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/cwe121_struct_alloc-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._twoIntsStruct = type { i32, i32 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !19 {
entry:
  %data = alloca ptr, align 8
  %dataBadBuffer = alloca ptr, align 8
    #dbg_declare(ptr %data, !23, !DIExpression(), !24)
    #dbg_declare(ptr %dataBadBuffer, !25, !DIExpression(), !26)
  %0 = alloca i8, i64 32, align 16, !dbg !27
  store ptr %0, ptr %dataBadBuffer, align 8, !dbg !26
  %1 = load ptr, ptr %dataBadBuffer, align 8, !dbg !28
  store ptr %1, ptr %data, align 8, !dbg !29
  %2 = load ptr, ptr %data, align 8, !dbg !30
  %arrayidx = getelementptr inbounds %struct._twoIntsStruct, ptr %2, i64 0, !dbg !30
  %intOne = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %arrayidx, i32 0, i32 0, !dbg !31
  store i32 10, ptr %intOne, align 4, !dbg !32
  %3 = load ptr, ptr %data, align 8, !dbg !33
  %arrayidx1 = getelementptr inbounds %struct._twoIntsStruct, ptr %3, i64 1, !dbg !33
  %intOne2 = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %arrayidx1, i32 0, i32 0, !dbg !34
  store i32 11, ptr %intOne2, align 4, !dbg !35
  %4 = load ptr, ptr %data, align 8, !dbg !36
  %arrayidx3 = getelementptr inbounds %struct._twoIntsStruct, ptr %4, i64 2, !dbg !36
  %intOne4 = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %arrayidx3, i32 0, i32 0, !dbg !37
  store i32 12, ptr %intOne4, align 4, !dbg !38
  %5 = load ptr, ptr %data, align 8, !dbg !39
  %arrayidx5 = getelementptr inbounds %struct._twoIntsStruct, ptr %5, i64 1, !dbg !39
  %intOne6 = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %arrayidx5, i32 0, i32 0, !dbg !40
  %6 = load i32, ptr %intOne6, align 4, !dbg !40
  %cmp = icmp eq i32 %6, 11, !dbg !41
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !42
  ret i32 0, !dbg !43
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!11, !12, !13, !14, !15, !16, !17}
!llvm.ident = !{!18}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/cwe121_struct_alloc-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "d9df059d0a61489766172a4b65abe3fe")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "twoIntsStruct", file: !5, line: 11, baseType: !6)
!5 = !DIFile(filename: "src/ae_assert_tests/cwe121_struct_alloc-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "d9df059d0a61489766172a4b65abe3fe")
!6 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_twoIntsStruct", file: !5, line: 7, size: 64, elements: !7)
!7 = !{!8, !10}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "intOne", scope: !6, file: !5, line: 9, baseType: !9, size: 32)
!9 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "intTwo", scope: !6, file: !5, line: 10, baseType: !9, size: 32, offset: 32)
!11 = !{i32 7, !"Dwarf Version", i32 5}
!12 = !{i32 2, !"Debug Info Version", i32 3}
!13 = !{i32 1, !"wchar_size", i32 4}
!14 = !{i32 8, !"PIC Level", i32 2}
!15 = !{i32 7, !"PIE Level", i32 2}
!16 = !{i32 7, !"uwtable", i32 2}
!17 = !{i32 7, !"frame-pointer", i32 2}
!18 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!19 = distinct !DISubprogram(name: "main", scope: !5, file: !5, line: 13, type: !20, scopeLine: 13, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !22)
!20 = !DISubroutineType(types: !21)
!21 = !{!9}
!22 = !{}
!23 = !DILocalVariable(name: "data", scope: !19, file: !5, line: 14, type: !3)
!24 = !DILocation(line: 14, column: 21, scope: !19)
!25 = !DILocalVariable(name: "dataBadBuffer", scope: !19, file: !5, line: 15, type: !3)
!26 = !DILocation(line: 15, column: 21, scope: !19)
!27 = !DILocation(line: 15, column: 54, scope: !19)
!28 = !DILocation(line: 18, column: 12, scope: !19)
!29 = !DILocation(line: 18, column: 10, scope: !19)
!30 = !DILocation(line: 19, column: 5, scope: !19)
!31 = !DILocation(line: 19, column: 13, scope: !19)
!32 = !DILocation(line: 19, column: 20, scope: !19)
!33 = !DILocation(line: 20, column: 5, scope: !19)
!34 = !DILocation(line: 20, column: 13, scope: !19)
!35 = !DILocation(line: 20, column: 20, scope: !19)
!36 = !DILocation(line: 21, column: 5, scope: !19)
!37 = !DILocation(line: 21, column: 13, scope: !19)
!38 = !DILocation(line: 21, column: 20, scope: !19)
!39 = !DILocation(line: 22, column: 16, scope: !19)
!40 = !DILocation(line: 22, column: 24, scope: !19)
!41 = !DILocation(line: 22, column: 31, scope: !19)
!42 = !DILocation(line: 22, column: 5, scope: !19)
!43 = !DILocation(line: 23, column: 1, scope: !19)
