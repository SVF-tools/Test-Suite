; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/CVE-2021-39602-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/CVE-2021-39602-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.session = type { [1024 x i8] }

@.str = private unnamed_addr constant [256 x i8] c"dQTzRwmNuJFoD9pFIwx97jfTRv1rAbvZ0Wcz6FdQU6uBcM6TreKoHvS0418qcGBLSqRCK4o7K0VxcfZ8btrUiIGMYbvdFdXueAvE3DrvmwaoFb06t3ZkpNw9HrSB7xCsJmdo86ZhrrCMlIx0m7im6zwBM3qnjds3OW6seTegTihzANyeZQmH1ojYIb7nZJEBJkFu7Ov8IBifYUFjoZNVdaTEmD8CnXnthnDYB45ssxTkcsPMbF2oLycwepI0jmd\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [35 x i8] c"Create directory operation failed.\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [19 x i8] c"Permission denied.\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [16 x i8] c"\22%s\\%s\22 created\00", align 1, !dbg !22

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !40 {
entry:
  %sess = alloca %struct.session, align 1
    #dbg_declare(ptr %sess, !45, !DIExpression(), !53)
  %arg = getelementptr inbounds nuw %struct.session, ptr %sess, i32 0, i32 0, !dbg !54
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %arg, i64 0, i64 0, !dbg !55
  %call = call ptr @strcpy(ptr noundef %arraydecay, ptr noundef @.str) #5, !dbg !56
  call void @do_mkd(ptr noundef %sess), !dbg !57
  ret i32 0, !dbg !58
}

; Function Attrs: nounwind
declare ptr @strcpy(ptr noundef, ptr noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @do_mkd(ptr noundef %sess) #0 !dbg !59 {
entry:
  %sess.addr = alloca ptr, align 8
  %buf = alloca [1024 x i8], align 16
  store ptr %sess, ptr %sess.addr, align 8
    #dbg_declare(ptr %sess.addr, !63, !DIExpression(), !64)
  %0 = load ptr, ptr %sess.addr, align 8, !dbg !65
  %arg = getelementptr inbounds nuw %struct.session, ptr %0, i32 0, i32 0, !dbg !67
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %arg, i64 0, i64 0, !dbg !65
  %call = call i32 @mkdir(ptr noundef %arraydecay, i32 noundef 493) #5, !dbg !68
  %cmp = icmp slt i32 %call, 0, !dbg !69
  br i1 %cmp, label %if.then, label %if.end6, !dbg !69

if.then:                                          ; preds = %entry
  %call1 = call ptr @__errno_location() #6, !dbg !70
  %1 = load i32, ptr %call1, align 4, !dbg !70
  %cmp2 = icmp eq i32 %1, 17, !dbg !73
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !73

if.then3:                                         ; preds = %if.then
  %call4 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef @.str.2), !dbg !74
  br label %if.end, !dbg !76

if.else:                                          ; preds = %if.then
  %call5 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef @.str.3), !dbg !77
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end16, !dbg !79

if.end6:                                          ; preds = %entry
    #dbg_declare(ptr %buf, !80, !DIExpression(), !81)
  call void @llvm.memset.p0.i64(ptr align 16 %buf, i8 0, i64 1024, i1 false), !dbg !81
  %arraydecay7 = getelementptr inbounds [1024 x i8], ptr %buf, i64 0, i64 0, !dbg !82
  %call8 = call ptr @getcwd(ptr noundef %arraydecay7, i64 noundef 1024) #5, !dbg !84
  %cmp9 = icmp ne ptr %call8, null, !dbg !85
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !85

if.then10:                                        ; preds = %if.end6
  %arraydecay11 = getelementptr inbounds [1024 x i8], ptr %buf, i64 0, i64 0, !dbg !86
  %arraydecay12 = getelementptr inbounds [1024 x i8], ptr %buf, i64 0, i64 0, !dbg !88
  %2 = load ptr, ptr %sess.addr, align 8, !dbg !89
  %arg13 = getelementptr inbounds nuw %struct.session, ptr %2, i32 0, i32 0, !dbg !90
  %arraydecay14 = getelementptr inbounds [1024 x i8], ptr %arg13, i64 0, i64 0, !dbg !89
  %call15 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %arraydecay11, ptr noundef @.str.4, ptr noundef %arraydecay12, ptr noundef %arraydecay14) #5, !dbg !91
  br label %if.end16, !dbg !92

if.end16:                                         ; preds = %if.then10, %if.end6, %if.end
  ret void, !dbg !93
}

; Function Attrs: nounwind
declare i32 @mkdir(ptr noundef, i32 noundef) #1

; Function Attrs: nounwind willreturn memory(none)
declare ptr @__errno_location() #2

declare i32 @printf(ptr noundef, ...) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare ptr @getcwd(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind
declare i32 @sprintf(ptr noundef, ptr noundef, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind willreturn memory(none) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { nounwind }
attributes #6 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!27}
!llvm.module.flags = !{!32, !33, !34, !35, !36, !37, !38}
!llvm.ident = !{!39}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 45, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/CVE-2021-39602-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "b9457f41daad9da681df7d5cb9dd3f0d")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2048, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 256)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 28, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 4)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 28, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 280, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 35)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 31, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 19)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(scope: null, file: !2, line: 38, type: !24, isLocal: true, isDefinition: true)
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !25)
!25 = !{!26}
!26 = !DISubrange(count: 16)
!27 = distinct !DICompileUnit(language: DW_LANG_C11, file: !28, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !29, globals: !31, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/CVE-2021-39602-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "b9457f41daad9da681df7d5cb9dd3f0d")
!29 = !{!30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!31 = !{!0, !7, !12, !17, !22}
!32 = !{i32 7, !"Dwarf Version", i32 5}
!33 = !{i32 2, !"Debug Info Version", i32 3}
!34 = !{i32 1, !"wchar_size", i32 4}
!35 = !{i32 8, !"PIC Level", i32 2}
!36 = !{i32 7, !"PIE Level", i32 2}
!37 = !{i32 7, !"uwtable", i32 2}
!38 = !{i32 7, !"frame-pointer", i32 2}
!39 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!40 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 43, type: !41, scopeLine: 43, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !44)
!41 = !DISubroutineType(types: !42)
!42 = !{!43}
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !{}
!45 = !DILocalVariable(name: "sess", scope: !40, file: !2, line: 44, type: !46)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "session_t", file: !2, line: 23, baseType: !47)
!47 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "session", file: !2, line: 21, size: 8192, elements: !48)
!48 = !{!49}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !47, file: !2, line: 22, baseType: !50, size: 8192)
!50 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8192, elements: !51)
!51 = !{!52}
!52 = !DISubrange(count: 1024)
!53 = !DILocation(line: 44, column: 12, scope: !40)
!54 = !DILocation(line: 45, column: 17, scope: !40)
!55 = !DILocation(line: 45, column: 12, scope: !40)
!56 = !DILocation(line: 45, column: 5, scope: !40)
!57 = !DILocation(line: 47, column: 5, scope: !40)
!58 = !DILocation(line: 48, column: 1, scope: !40)
!59 = distinct !DISubprogram(name: "do_mkd", scope: !2, file: !2, line: 25, type: !60, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !44)
!60 = !DISubroutineType(types: !61)
!61 = !{null, !62}
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!63 = !DILocalVariable(name: "sess", arg: 1, scope: !59, file: !2, line: 25, type: !62)
!64 = !DILocation(line: 25, column: 31, scope: !59)
!65 = !DILocation(line: 26, column: 11, scope: !66)
!66 = distinct !DILexicalBlock(scope: !59, file: !2, line: 26, column: 5)
!67 = !DILocation(line: 26, column: 17, scope: !66)
!68 = !DILocation(line: 26, column: 5, scope: !66)
!69 = !DILocation(line: 26, column: 28, scope: !66)
!70 = !DILocation(line: 27, column: 6, scope: !71)
!71 = distinct !DILexicalBlock(scope: !72, file: !2, line: 27, column: 6)
!72 = distinct !DILexicalBlock(scope: !66, file: !2, line: 26, column: 33)
!73 = !DILocation(line: 27, column: 12, scope: !71)
!74 = !DILocation(line: 28, column: 4, scope: !75)
!75 = distinct !DILexicalBlock(scope: !71, file: !2, line: 27, column: 23)
!76 = !DILocation(line: 29, column: 3, scope: !75)
!77 = !DILocation(line: 31, column: 4, scope: !78)
!78 = distinct !DILexicalBlock(scope: !71, file: !2, line: 30, column: 8)
!79 = !DILocation(line: 33, column: 3, scope: !72)
!80 = !DILocalVariable(name: "buf", scope: !59, file: !2, line: 35, type: !50)
!81 = !DILocation(line: 35, column: 7, scope: !59)
!82 = !DILocation(line: 36, column: 12, scope: !83)
!83 = distinct !DILexicalBlock(scope: !59, file: !2, line: 36, column: 5)
!84 = !DILocation(line: 36, column: 5, scope: !83)
!85 = !DILocation(line: 36, column: 34, scope: !83)
!86 = !DILocation(line: 38, column: 11, scope: !87)
!87 = distinct !DILexicalBlock(scope: !83, file: !2, line: 36, column: 43)
!88 = !DILocation(line: 38, column: 37, scope: !87)
!89 = !DILocation(line: 38, column: 41, scope: !87)
!90 = !DILocation(line: 38, column: 47, scope: !87)
!91 = !DILocation(line: 38, column: 3, scope: !87)
!92 = !DILocation(line: 40, column: 2, scope: !87)
!93 = !DILocation(line: 41, column: 1, scope: !59)
