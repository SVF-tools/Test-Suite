; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/CAST_fptoui.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/CAST_fptoui.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"UI\00", align 1, !dbg !0

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !20 {
entry:
  %retval = alloca i32, align 4
  %f = alloca float, align 4
  %ui = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %f, metadata !25, metadata !DIExpression()), !dbg !27
  store float 0x40091EB860000000, ptr %f, align 4, !dbg !27
  call void @llvm.dbg.declare(metadata ptr %ui, metadata !28, metadata !DIExpression()), !dbg !29
  %0 = load float, ptr %f, align 4, !dbg !30
  %conv = fptoui float %0 to i32, !dbg !31
  store i32 %conv, ptr %ui, align 4, !dbg !29
  %1 = load i32, ptr %ui, align 4, !dbg !32
  call void @svf_print(i32 noundef %1, ptr noundef @.str), !dbg !33
  %2 = load i32, ptr %ui, align 4, !dbg !34
  %cmp = icmp eq i32 %2, 3, !dbg !35
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !36
  ret i32 0, !dbg !37
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @svf_print(i32 noundef, ptr noundef) #2

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!7}
!llvm.module.flags = !{!12, !13, !14, !15, !16, !17, !18}
!llvm.ident = !{!19}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 7, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/CAST_fptoui.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "4c5eb2118728d711f6befe00e91db836")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 3)
!7 = distinct !DICompileUnit(language: DW_LANG_C11, file: !8, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !9, globals: !11, splitDebugInlining: false, nameTableKind: None)
!8 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/CAST_fptoui.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "4c5eb2118728d711f6befe00e91db836")
!9 = !{!10}
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!0}
!12 = !{i32 7, !"Dwarf Version", i32 5}
!13 = !{i32 2, !"Debug Info Version", i32 3}
!14 = !{i32 1, !"wchar_size", i32 4}
!15 = !{i32 8, !"PIC Level", i32 2}
!16 = !{i32 7, !"PIE Level", i32 2}
!17 = !{i32 7, !"uwtable", i32 2}
!18 = !{i32 7, !"frame-pointer", i32 2}
!19 = !{!"clang version 16.0.0"}
!20 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 4, type: !21, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !7, retainedNodes: !24)
!21 = !DISubroutineType(types: !22)
!22 = !{!23}
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !{}
!25 = !DILocalVariable(name: "f", scope: !20, file: !2, line: 5, type: !26)
!26 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!27 = !DILocation(line: 5, column: 11, scope: !20)
!28 = !DILocalVariable(name: "ui", scope: !20, file: !2, line: 6, type: !10)
!29 = !DILocation(line: 6, column: 18, scope: !20)
!30 = !DILocation(line: 6, column: 37, scope: !20)
!31 = !DILocation(line: 6, column: 23, scope: !20)
!32 = !DILocation(line: 7, column: 15, scope: !20)
!33 = !DILocation(line: 7, column: 5, scope: !20)
!34 = !DILocation(line: 8, column: 16, scope: !20)
!35 = !DILocation(line: 8, column: 19, scope: !20)
!36 = !DILocation(line: 8, column: 5, scope: !20)
!37 = !DILocation(line: 9, column: 5, scope: !20)
