; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_array_func_3-0.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_array_func_3-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.A = type { i32, [2 x i32] }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getValue(ptr noundef %arr, i32 noundef %x) #0 !dbg !10 {
entry:
  %arr.addr = alloca ptr, align 8
  %x.addr = alloca i32, align 4
  store ptr %arr, ptr %arr.addr, align 8
    #dbg_declare(ptr %arr.addr, !25, !DIExpression(), !26)
  store i32 %x, ptr %x.addr, align 4
    #dbg_declare(ptr %x.addr, !27, !DIExpression(), !28)
  %0 = load ptr, ptr %arr.addr, align 8, !dbg !29
  %b = getelementptr inbounds nuw %struct.A, ptr %0, i32 0, i32 1, !dbg !30
  %1 = load i32, ptr %x.addr, align 4, !dbg !31
  %idxprom = sext i32 %1 to i64, !dbg !29
  %arrayidx = getelementptr inbounds [2 x i32], ptr %b, i64 0, i64 %idxprom, !dbg !29
  %2 = load i32, ptr %arrayidx, align 4, !dbg !29
  ret i32 %2, !dbg !32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !33 {
entry:
  %retval = alloca i32, align 4
  %a = alloca %struct.A, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %a, !36, !DIExpression(), !37)
  %a1 = getelementptr inbounds nuw %struct.A, ptr %a, i32 0, i32 0, !dbg !38
  store i32 0, ptr %a1, align 4, !dbg !39
  %b = getelementptr inbounds nuw %struct.A, ptr %a, i32 0, i32 1, !dbg !40
  %arrayidx = getelementptr inbounds [2 x i32], ptr %b, i64 0, i64 0, !dbg !41
  store i32 1, ptr %arrayidx, align 4, !dbg !42
  %b2 = getelementptr inbounds nuw %struct.A, ptr %a, i32 0, i32 1, !dbg !43
  %arrayidx3 = getelementptr inbounds [2 x i32], ptr %b2, i64 0, i64 1, !dbg !44
  store i32 2, ptr %arrayidx3, align 4, !dbg !45
  %call = call i32 @getValue(ptr noundef %a, i32 noundef 1), !dbg !46
  %cmp = icmp eq i32 %call, 2, !dbg !47
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !48
  ret i32 0, !dbg !49
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_array_func_3-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "7e88dc7fc363863357b6ffe230ee5709")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!10 = distinct !DISubprogram(name: "getValue", scope: !11, file: !11, line: 13, type: !12, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !24)
!11 = !DIFile(filename: "src/ae_assert_tests/BASIC_array_func_3-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "7e88dc7fc363863357b6ffe230ee5709")
!12 = !DISubroutineType(types: !13)
!13 = !{!14, !15, !14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "A", file: !11, line: 11, baseType: !17)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11, line: 8, size: 96, elements: !18)
!18 = !{!19, !20}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !17, file: !11, line: 9, baseType: !14, size: 32)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !17, file: !11, line: 10, baseType: !21, size: 64, offset: 32)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !22)
!22 = !{!23}
!23 = !DISubrange(count: 2)
!24 = !{}
!25 = !DILocalVariable(name: "arr", arg: 1, scope: !10, file: !11, line: 13, type: !15)
!26 = !DILocation(line: 13, column: 17, scope: !10)
!27 = !DILocalVariable(name: "x", arg: 2, scope: !10, file: !11, line: 13, type: !14)
!28 = !DILocation(line: 13, column: 26, scope: !10)
!29 = !DILocation(line: 14, column: 12, scope: !10)
!30 = !DILocation(line: 14, column: 17, scope: !10)
!31 = !DILocation(line: 14, column: 19, scope: !10)
!32 = !DILocation(line: 14, column: 5, scope: !10)
!33 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 17, type: !34, scopeLine: 17, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !24)
!34 = !DISubroutineType(types: !35)
!35 = !{!14}
!36 = !DILocalVariable(name: "a", scope: !33, file: !11, line: 18, type: !16)
!37 = !DILocation(line: 18, column: 7, scope: !33)
!38 = !DILocation(line: 19, column: 7, scope: !33)
!39 = !DILocation(line: 19, column: 9, scope: !33)
!40 = !DILocation(line: 20, column: 7, scope: !33)
!41 = !DILocation(line: 20, column: 5, scope: !33)
!42 = !DILocation(line: 20, column: 12, scope: !33)
!43 = !DILocation(line: 21, column: 7, scope: !33)
!44 = !DILocation(line: 21, column: 5, scope: !33)
!45 = !DILocation(line: 21, column: 12, scope: !33)
!46 = !DILocation(line: 22, column: 16, scope: !33)
!47 = !DILocation(line: 22, column: 32, scope: !33)
!48 = !DILocation(line: 22, column: 5, scope: !33)
!49 = !DILocation(line: 23, column: 5, scope: !33)
