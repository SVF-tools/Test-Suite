; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_57-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/INTERVAL_test_57-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @a(i32 noundef %x) #0 !dbg !10 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = load i32, ptr %x.addr, align 4, !dbg !18
  %call = call i32 @b(i32 noundef %0), !dbg !19
  %mul = mul nsw i32 %call, 2, !dbg !20
  ret i32 %mul, !dbg !21
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @b(i32 noundef %x) #0 !dbg !22 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, ptr %x.addr, align 4, !dbg !25
  %call = call i32 @c(i32 noundef %0), !dbg !26
  %mul = mul nsw i32 %call, 2, !dbg !27
  ret i32 %mul, !dbg !28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c(i32 noundef %x) #0 !dbg !29 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !30, metadata !DIExpression()), !dbg !31
  %0 = load i32, ptr %x.addr, align 4, !dbg !32
  %call = call i32 @d(i32 noundef %0), !dbg !33
  %mul = mul nsw i32 %call, 2, !dbg !34
  ret i32 %mul, !dbg !35
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @d(i32 noundef %x) #0 !dbg !36 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !37, metadata !DIExpression()), !dbg !38
  %0 = load i32, ptr %x.addr, align 4, !dbg !39
  %call = call i32 @e(i32 noundef %0), !dbg !40
  %mul = mul nsw i32 %call, 2, !dbg !41
  ret i32 %mul, !dbg !42
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @e(i32 noundef %x) #0 !dbg !43 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !44, metadata !DIExpression()), !dbg !45
  %0 = load i32, ptr %x.addr, align 4, !dbg !46
  %call = call i32 @f(i32 noundef %0), !dbg !47
  %mul = mul nsw i32 %call, 2, !dbg !48
  ret i32 %mul, !dbg !49
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @f(i32 noundef %x) #0 !dbg !50 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !51, metadata !DIExpression()), !dbg !52
  %0 = load i32, ptr %x.addr, align 4, !dbg !53
  %call = call i32 @g(i32 noundef %0), !dbg !54
  %mul = mul nsw i32 %call, 2, !dbg !55
  ret i32 %mul, !dbg !56
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @g(i32 noundef %x) #0 !dbg !57 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !58, metadata !DIExpression()), !dbg !59
  %0 = load i32, ptr %x.addr, align 4, !dbg !60
  %call = call i32 @h(i32 noundef %0), !dbg !61
  %mul = mul nsw i32 %call, 2, !dbg !62
  ret i32 %mul, !dbg !63
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @h(i32 noundef %x) #0 !dbg !64 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !65, metadata !DIExpression()), !dbg !66
  %0 = load i32, ptr %x.addr, align 4, !dbg !67
  %call = call i32 @z(i32 noundef %0), !dbg !68
  %mul = mul nsw i32 %call, 2, !dbg !69
  ret i32 %mul, !dbg !70
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @z(i32 noundef %x) #0 !dbg !71 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, ptr %x.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !72, metadata !DIExpression()), !dbg !73
  %0 = load i32, ptr %x.addr, align 4, !dbg !74
  %mul = mul nsw i32 %0, 2, !dbg !75
  ret i32 %mul, !dbg !76
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !77 {
entry:
  %input = alloca i32, align 4
  %result = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %input, metadata !80, metadata !DIExpression()), !dbg !81
  call void @llvm.dbg.declare(metadata ptr %result, metadata !82, metadata !DIExpression()), !dbg !83
  %0 = load i32, ptr %input, align 4, !dbg !84
  %call = call i32 @a(i32 noundef %0), !dbg !85
  store i32 %call, ptr %result, align 4, !dbg !83
  %1 = load i32, ptr %result, align 4, !dbg !86
  %2 = load i32, ptr %input, align 4, !dbg !87
  %mul = mul nsw i32 %2, 512, !dbg !88
  %cmp = icmp eq i32 %1, %mul, !dbg !89
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !90
  ret i32 0, !dbg !91
}

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/INTERVAL_test_57-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "d1785b8b94f2e2804f5ecf33aea5a54c")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"clang version 16.0.0"}
!10 = distinct !DISubprogram(name: "a", scope: !11, file: !11, line: 18, type: !12, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!11 = !DIFile(filename: "src/ae_assert_tests/INTERVAL_test_57-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "d1785b8b94f2e2804f5ecf33aea5a54c")
!12 = !DISubroutineType(types: !13)
!13 = !{!14, !14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{}
!16 = !DILocalVariable(name: "x", arg: 1, scope: !10, file: !11, line: 18, type: !14)
!17 = !DILocation(line: 18, column: 11, scope: !10)
!18 = !DILocation(line: 19, column: 11, scope: !10)
!19 = !DILocation(line: 19, column: 9, scope: !10)
!20 = !DILocation(line: 19, column: 14, scope: !10)
!21 = !DILocation(line: 19, column: 2, scope: !10)
!22 = distinct !DISubprogram(name: "b", scope: !11, file: !11, line: 22, type: !12, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!23 = !DILocalVariable(name: "x", arg: 1, scope: !22, file: !11, line: 22, type: !14)
!24 = !DILocation(line: 22, column: 11, scope: !22)
!25 = !DILocation(line: 23, column: 11, scope: !22)
!26 = !DILocation(line: 23, column: 9, scope: !22)
!27 = !DILocation(line: 23, column: 14, scope: !22)
!28 = !DILocation(line: 23, column: 2, scope: !22)
!29 = distinct !DISubprogram(name: "c", scope: !11, file: !11, line: 26, type: !12, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!30 = !DILocalVariable(name: "x", arg: 1, scope: !29, file: !11, line: 26, type: !14)
!31 = !DILocation(line: 26, column: 11, scope: !29)
!32 = !DILocation(line: 27, column: 11, scope: !29)
!33 = !DILocation(line: 27, column: 9, scope: !29)
!34 = !DILocation(line: 27, column: 14, scope: !29)
!35 = !DILocation(line: 27, column: 2, scope: !29)
!36 = distinct !DISubprogram(name: "d", scope: !11, file: !11, line: 30, type: !12, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!37 = !DILocalVariable(name: "x", arg: 1, scope: !36, file: !11, line: 30, type: !14)
!38 = !DILocation(line: 30, column: 11, scope: !36)
!39 = !DILocation(line: 31, column: 11, scope: !36)
!40 = !DILocation(line: 31, column: 9, scope: !36)
!41 = !DILocation(line: 31, column: 14, scope: !36)
!42 = !DILocation(line: 31, column: 2, scope: !36)
!43 = distinct !DISubprogram(name: "e", scope: !11, file: !11, line: 34, type: !12, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!44 = !DILocalVariable(name: "x", arg: 1, scope: !43, file: !11, line: 34, type: !14)
!45 = !DILocation(line: 34, column: 11, scope: !43)
!46 = !DILocation(line: 35, column: 11, scope: !43)
!47 = !DILocation(line: 35, column: 9, scope: !43)
!48 = !DILocation(line: 35, column: 14, scope: !43)
!49 = !DILocation(line: 35, column: 2, scope: !43)
!50 = distinct !DISubprogram(name: "f", scope: !11, file: !11, line: 38, type: !12, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!51 = !DILocalVariable(name: "x", arg: 1, scope: !50, file: !11, line: 38, type: !14)
!52 = !DILocation(line: 38, column: 11, scope: !50)
!53 = !DILocation(line: 39, column: 11, scope: !50)
!54 = !DILocation(line: 39, column: 9, scope: !50)
!55 = !DILocation(line: 39, column: 14, scope: !50)
!56 = !DILocation(line: 39, column: 2, scope: !50)
!57 = distinct !DISubprogram(name: "g", scope: !11, file: !11, line: 42, type: !12, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!58 = !DILocalVariable(name: "x", arg: 1, scope: !57, file: !11, line: 42, type: !14)
!59 = !DILocation(line: 42, column: 11, scope: !57)
!60 = !DILocation(line: 43, column: 11, scope: !57)
!61 = !DILocation(line: 43, column: 9, scope: !57)
!62 = !DILocation(line: 43, column: 14, scope: !57)
!63 = !DILocation(line: 43, column: 2, scope: !57)
!64 = distinct !DISubprogram(name: "h", scope: !11, file: !11, line: 46, type: !12, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!65 = !DILocalVariable(name: "x", arg: 1, scope: !64, file: !11, line: 46, type: !14)
!66 = !DILocation(line: 46, column: 11, scope: !64)
!67 = !DILocation(line: 47, column: 11, scope: !64)
!68 = !DILocation(line: 47, column: 9, scope: !64)
!69 = !DILocation(line: 47, column: 14, scope: !64)
!70 = !DILocation(line: 47, column: 2, scope: !64)
!71 = distinct !DISubprogram(name: "z", scope: !11, file: !11, line: 50, type: !12, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!72 = !DILocalVariable(name: "x", arg: 1, scope: !71, file: !11, line: 50, type: !14)
!73 = !DILocation(line: 50, column: 11, scope: !71)
!74 = !DILocation(line: 51, column: 9, scope: !71)
!75 = !DILocation(line: 51, column: 11, scope: !71)
!76 = !DILocation(line: 51, column: 2, scope: !71)
!77 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 54, type: !78, scopeLine: 54, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!78 = !DISubroutineType(types: !79)
!79 = !{!14}
!80 = !DILocalVariable(name: "input", scope: !77, file: !11, line: 55, type: !14)
!81 = !DILocation(line: 55, column: 6, scope: !77)
!82 = !DILocalVariable(name: "result", scope: !77, file: !11, line: 56, type: !14)
!83 = !DILocation(line: 56, column: 6, scope: !77)
!84 = !DILocation(line: 56, column: 17, scope: !77)
!85 = !DILocation(line: 56, column: 15, scope: !77)
!86 = !DILocation(line: 57, column: 13, scope: !77)
!87 = !DILocation(line: 57, column: 23, scope: !77)
!88 = !DILocation(line: 57, column: 29, scope: !77)
!89 = !DILocation(line: 57, column: 20, scope: !77)
!90 = !DILocation(line: 57, column: 2, scope: !77)
!91 = !DILocation(line: 58, column: 1, scope: !77)
