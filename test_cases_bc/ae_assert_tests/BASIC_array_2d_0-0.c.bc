; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_array_2d_0-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/BASIC_array_2d_0-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %a = alloca [3 x [3 x i32]], align 16
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  %arrayidx = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x i32], ptr %arrayidx, i64 0, i64 0
  store i32 0, ptr %arrayidx1, align 16
  %arrayidx2 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 0
  %arrayidx3 = getelementptr inbounds [3 x i32], ptr %arrayidx2, i64 0, i64 1
  store i32 1, ptr %arrayidx3, align 4
  %arrayidx4 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 0
  %arrayidx5 = getelementptr inbounds [3 x i32], ptr %arrayidx4, i64 0, i64 2
  store i32 2, ptr %arrayidx5, align 8
  %arrayidx6 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 1
  %arrayidx7 = getelementptr inbounds [3 x i32], ptr %arrayidx6, i64 0, i64 0
  store i32 3, ptr %arrayidx7, align 4
  %arrayidx8 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 1
  %arrayidx9 = getelementptr inbounds [3 x i32], ptr %arrayidx8, i64 0, i64 1
  store i32 4, ptr %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 1
  %arrayidx11 = getelementptr inbounds [3 x i32], ptr %arrayidx10, i64 0, i64 2
  store i32 5, ptr %arrayidx11, align 4
  %arrayidx12 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 2
  %arrayidx13 = getelementptr inbounds [3 x i32], ptr %arrayidx12, i64 0, i64 0
  store i32 6, ptr %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 2
  %arrayidx15 = getelementptr inbounds [3 x i32], ptr %arrayidx14, i64 0, i64 1
  store i32 7, ptr %arrayidx15, align 4
  %arrayidx16 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 2
  %arrayidx17 = getelementptr inbounds [3 x i32], ptr %arrayidx16, i64 0, i64 2
  store i32 8, ptr %arrayidx17, align 8
  store i32 2, ptr %b, align 4
  store i32 2, ptr %c, align 4
  %0 = load i32, ptr %b, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx18 = getelementptr inbounds [3 x [3 x i32]], ptr %a, i64 0, i64 %idxprom
  %1 = load i32, ptr %c, align 4
  %idxprom19 = sext i32 %1 to i64
  %arrayidx20 = getelementptr inbounds [3 x i32], ptr %arrayidx18, i64 0, i64 %idxprom19
  %2 = load i32, ptr %arrayidx20, align 4
  %cmp = icmp eq i32 %2, 8
  call void @svf_assert(i1 noundef zeroext %cmp)
  ret i32 0
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
