; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_2-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_2-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [3 x i8] c"b1\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [3 x i8] c"b2\00", align 1, !dbg !9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !22 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %a, !27, !DIExpression(), !28)
    #dbg_declare(ptr %b, !29, !DIExpression(), !30)
  store i32 1, ptr %b, align 4, !dbg !30
  %call = call i32 (ptr, ...) @scanf(ptr noundef @.str, ptr noundef %a), !dbg !31
  %0 = load i32, ptr %a, align 4, !dbg !32
  %cmp = icmp sgt i32 %0, 5, !dbg !34
  br i1 %cmp, label %if.then, label %if.else, !dbg !34

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %a, align 4, !dbg !35
  %2 = load i32, ptr %b, align 4, !dbg !37
  %add = add nsw i32 %1, %2, !dbg !38
  store i32 %add, ptr %b, align 4, !dbg !39
  %3 = load i32, ptr %b, align 4, !dbg !40
  call void @svf_print(i32 noundef %3, ptr noundef @.str.1), !dbg !41
  %4 = load i32, ptr %b, align 4, !dbg !42
  %cmp1 = icmp sgt i32 %4, 6, !dbg !43
  call void @svf_assert(i1 noundef zeroext %cmp1), !dbg !44
  br label %if.end, !dbg !45

if.else:                                          ; preds = %entry
  %5 = load i32, ptr %a, align 4, !dbg !46
  %6 = load i32, ptr %b, align 4, !dbg !48
  %add2 = add nsw i32 %5, %6, !dbg !49
  store i32 %add2, ptr %b, align 4, !dbg !50
  %7 = load i32, ptr %b, align 4, !dbg !51
  call void @svf_print(i32 noundef %7, ptr noundef @.str.2), !dbg !52
  %8 = load i32, ptr %b, align 4, !dbg !53
  %cmp3 = icmp sle i32 %8, 6, !dbg !54
  call void @svf_assert(i1 noundef zeroext %cmp3), !dbg !55
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, ptr %retval, align 4, !dbg !56
  ret i32 %9, !dbg !56
}

declare i32 @scanf(ptr noundef, ...) #1

declare void @svf_print(i32 noundef, ptr noundef) #1

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!11}
!llvm.module.flags = !{!14, !15, !16, !17, !18, !19, !20}
!llvm.ident = !{!21}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 9, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/INTERVAL_test_2-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "fb4ded21f5bf3cb3e533415eaf559a1b")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 3)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 12, type: !3, isLocal: true, isDefinition: true)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(scope: null, file: !2, line: 17, type: !3, isLocal: true, isDefinition: true)
!11 = distinct !DICompileUnit(language: DW_LANG_C11, file: !12, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !13, splitDebugInlining: false, nameTableKind: None)
!12 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_2-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "fb4ded21f5bf3cb3e533415eaf559a1b")
!13 = !{!0, !7, !9}
!14 = !{i32 7, !"Dwarf Version", i32 5}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{i32 1, !"wchar_size", i32 4}
!17 = !{i32 8, !"PIC Level", i32 2}
!18 = !{i32 7, !"PIE Level", i32 2}
!19 = !{i32 7, !"uwtable", i32 2}
!20 = !{i32 7, !"frame-pointer", i32 2}
!21 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!22 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 5, type: !23, scopeLine: 5, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !26)
!23 = !DISubroutineType(types: !24)
!24 = !{!25}
!25 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!26 = !{}
!27 = !DILocalVariable(name: "a", scope: !22, file: !2, line: 7, type: !25)
!28 = !DILocation(line: 7, column: 9, scope: !22)
!29 = !DILocalVariable(name: "b", scope: !22, file: !2, line: 8, type: !25)
!30 = !DILocation(line: 8, column: 9, scope: !22)
!31 = !DILocation(line: 9, column: 5, scope: !22)
!32 = !DILocation(line: 10, column: 9, scope: !33)
!33 = distinct !DILexicalBlock(scope: !22, file: !2, line: 10, column: 9)
!34 = !DILocation(line: 10, column: 11, scope: !33)
!35 = !DILocation(line: 11, column: 13, scope: !36)
!36 = distinct !DILexicalBlock(scope: !33, file: !2, line: 10, column: 16)
!37 = !DILocation(line: 11, column: 17, scope: !36)
!38 = !DILocation(line: 11, column: 15, scope: !36)
!39 = !DILocation(line: 11, column: 11, scope: !36)
!40 = !DILocation(line: 12, column: 19, scope: !36)
!41 = !DILocation(line: 12, column: 9, scope: !36)
!42 = !DILocation(line: 13, column: 20, scope: !36)
!43 = !DILocation(line: 13, column: 22, scope: !36)
!44 = !DILocation(line: 13, column: 9, scope: !36)
!45 = !DILocation(line: 14, column: 5, scope: !36)
!46 = !DILocation(line: 16, column: 13, scope: !47)
!47 = distinct !DILexicalBlock(scope: !33, file: !2, line: 15, column: 10)
!48 = !DILocation(line: 16, column: 17, scope: !47)
!49 = !DILocation(line: 16, column: 15, scope: !47)
!50 = !DILocation(line: 16, column: 11, scope: !47)
!51 = !DILocation(line: 17, column: 19, scope: !47)
!52 = !DILocation(line: 17, column: 9, scope: !47)
!53 = !DILocation(line: 18, column: 20, scope: !47)
!54 = !DILocation(line: 18, column: 22, scope: !47)
!55 = !DILocation(line: 18, column: 9, scope: !47)
!56 = !DILocation(line: 20, column: 1, scope: !22)
