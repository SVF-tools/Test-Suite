; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_switch06-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/BASIC_switch06-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !10 {
entry:
  %retval = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %cond = alloca i8, align 1
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %x, metadata !16, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.declare(metadata ptr %y, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 1, ptr %x, align 4, !dbg !20
  store i32 0, ptr %y, align 4, !dbg !21
  call void @llvm.dbg.declare(metadata ptr %cond, metadata !22, metadata !DIExpression()), !dbg !24
  store i8 97, ptr %cond, align 1, !dbg !24
  %0 = load i8, ptr %cond, align 1, !dbg !25
  %conv = sext i8 %0 to i32, !dbg !25
  switch i32 %conv, label %sw.default [
    i32 97, label %sw.bb
    i32 25186, label %sw.bb1
    i32 99, label %sw.bb3
  ], !dbg !26

sw.bb:                                            ; preds = %entry
  %1 = load i32, ptr %x, align 4, !dbg !27
  %add = add nsw i32 %1, 1, !dbg !27
  store i32 %add, ptr %x, align 4, !dbg !27
  br label %sw.epilog, !dbg !29

sw.bb1:                                           ; preds = %entry
  %2 = load i32, ptr %y, align 4, !dbg !30
  %3 = load i32, ptr %x, align 4, !dbg !31
  %add2 = add nsw i32 %3, %2, !dbg !31
  store i32 %add2, ptr %x, align 4, !dbg !31
  br label %sw.bb3, !dbg !32

sw.bb3:                                           ; preds = %sw.bb1, %entry
  %4 = load i32, ptr %y, align 4, !dbg !33
  %5 = load i32, ptr %x, align 4, !dbg !34
  %sub = sub nsw i32 %5, %4, !dbg !34
  store i32 %sub, ptr %x, align 4, !dbg !34
  br label %sw.default, !dbg !35

sw.default:                                       ; preds = %sw.bb3, %entry
  %6 = load i32, ptr %x, align 4, !dbg !36
  %inc = add nsw i32 %6, 1, !dbg !36
  store i32 %inc, ptr %x, align 4, !dbg !36
  %7 = load i32, ptr %y, align 4, !dbg !37
  %inc4 = add nsw i32 %7, 1, !dbg !37
  store i32 %inc4, ptr %y, align 4, !dbg !37
  br label %sw.epilog, !dbg !38

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %8 = load i32, ptr %x, align 4, !dbg !39
  %9 = load i32, ptr %y, align 4, !dbg !40
  %cmp = icmp sge i32 %8, %9, !dbg !41
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !42
  ret i32 0, !dbg !43
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/BASIC_switch06-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "8d4277357c2e2c8f9405a7b4426d4bc3")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"clang version 16.0.0"}
!10 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 6, type: !12, scopeLine: 6, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!11 = !DIFile(filename: "src/ae_assert_tests/BASIC_switch06-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "8d4277357c2e2c8f9405a7b4426d4bc3")
!12 = !DISubroutineType(types: !13)
!13 = !{!14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{}
!16 = !DILocalVariable(name: "x", scope: !10, file: !11, line: 7, type: !14)
!17 = !DILocation(line: 7, column: 9, scope: !10)
!18 = !DILocalVariable(name: "y", scope: !10, file: !11, line: 7, type: !14)
!19 = !DILocation(line: 7, column: 12, scope: !10)
!20 = !DILocation(line: 8, column: 7, scope: !10)
!21 = !DILocation(line: 9, column: 7, scope: !10)
!22 = !DILocalVariable(name: "cond", scope: !10, file: !11, line: 10, type: !23)
!23 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!24 = !DILocation(line: 10, column: 10, scope: !10)
!25 = !DILocation(line: 11, column: 13, scope: !10)
!26 = !DILocation(line: 11, column: 5, scope: !10)
!27 = !DILocation(line: 14, column: 15, scope: !28)
!28 = distinct !DILexicalBlock(scope: !10, file: !11, line: 12, column: 5)
!29 = !DILocation(line: 15, column: 13, scope: !28)
!30 = !DILocation(line: 17, column: 18, scope: !28)
!31 = !DILocation(line: 17, column: 15, scope: !28)
!32 = !DILocation(line: 17, column: 13, scope: !28)
!33 = !DILocation(line: 19, column: 18, scope: !28)
!34 = !DILocation(line: 19, column: 15, scope: !28)
!35 = !DILocation(line: 19, column: 13, scope: !28)
!36 = !DILocation(line: 21, column: 14, scope: !28)
!37 = !DILocation(line: 22, column: 14, scope: !28)
!38 = !DILocation(line: 23, column: 13, scope: !28)
!39 = !DILocation(line: 25, column: 16, scope: !10)
!40 = !DILocation(line: 25, column: 21, scope: !10)
!41 = !DILocation(line: 25, column: 18, scope: !10)
!42 = !DILocation(line: 25, column: 5, scope: !10)
!43 = !DILocation(line: 26, column: 5, scope: !10)
