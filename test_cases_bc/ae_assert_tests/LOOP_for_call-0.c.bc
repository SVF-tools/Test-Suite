; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/LOOP_for_call-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/LOOP_for_call-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @add(i32 noundef %a) #0 !dbg !10 {
entry:
  %a.addr = alloca i32, align 4
  store i32 %a, ptr %a.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !16, metadata !DIExpression()), !dbg !17
  %0 = load i32, ptr %a.addr, align 4, !dbg !18
  %add = add nsw i32 %0, 1, !dbg !19
  ret i32 %add, !dbg !20
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !21 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %i, metadata !24, metadata !DIExpression()), !dbg !25
  store i32 0, ptr %i, align 4, !dbg !25
  call void @llvm.dbg.declare(metadata ptr %j, metadata !26, metadata !DIExpression()), !dbg !27
  store i32 0, ptr %j, align 4, !dbg !27
  store i32 0, ptr %i, align 4, !dbg !28
  br label %for.cond, !dbg !30

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, ptr %i, align 4, !dbg !31
  %cmp = icmp slt i32 %0, 5, !dbg !33
  br i1 %cmp, label %for.body, label %for.end, !dbg !34

for.body:                                         ; preds = %for.cond
  %1 = load i32, ptr %j, align 4, !dbg !35
  %call = call i32 @add(i32 noundef %1), !dbg !37
  store i32 %call, ptr %j, align 4, !dbg !38
  br label %for.inc, !dbg !39

for.inc:                                          ; preds = %for.body
  %2 = load i32, ptr %i, align 4, !dbg !40
  %inc = add nsw i32 %2, 1, !dbg !40
  store i32 %inc, ptr %i, align 4, !dbg !40
  br label %for.cond, !dbg !41, !llvm.loop !42

for.end:                                          ; preds = %for.cond
  %3 = load i32, ptr %i, align 4, !dbg !45
  %cmp1 = icmp eq i32 %3, 5, !dbg !46
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !47

land.rhs:                                         ; preds = %for.end
  %4 = load i32, ptr %j, align 4, !dbg !48
  %cmp2 = icmp sge i32 %4, 0, !dbg !49
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %5 = phi i1 [ false, %for.end ], [ %cmp2, %land.rhs ], !dbg !50
  call void @svf_assert(i1 noundef zeroext %5), !dbg !51
  %6 = load i32, ptr %retval, align 4, !dbg !52
  ret i32 %6, !dbg !52
}

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/LOOP_for_call-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "fcdb3794ef8dc3bd9a7d1b1f9298760e")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"clang version 16.0.0"}
!10 = distinct !DISubprogram(name: "add", scope: !11, file: !11, line: 8, type: !12, scopeLine: 8, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!11 = !DIFile(filename: "src/ae_assert_tests/LOOP_for_call-0.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "fcdb3794ef8dc3bd9a7d1b1f9298760e")
!12 = !DISubroutineType(types: !13)
!13 = !{!14, !14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{}
!16 = !DILocalVariable(name: "a", arg: 1, scope: !10, file: !11, line: 8, type: !14)
!17 = !DILocation(line: 8, column: 13, scope: !10)
!18 = !DILocation(line: 9, column: 12, scope: !10)
!19 = !DILocation(line: 9, column: 14, scope: !10)
!20 = !DILocation(line: 9, column: 5, scope: !10)
!21 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 11, type: !22, scopeLine: 11, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!22 = !DISubroutineType(types: !23)
!23 = !{!14}
!24 = !DILocalVariable(name: "i", scope: !21, file: !11, line: 12, type: !14)
!25 = !DILocation(line: 12, column: 9, scope: !21)
!26 = !DILocalVariable(name: "j", scope: !21, file: !11, line: 13, type: !14)
!27 = !DILocation(line: 13, column: 9, scope: !21)
!28 = !DILocation(line: 14, column: 12, scope: !29)
!29 = distinct !DILexicalBlock(scope: !21, file: !11, line: 14, column: 5)
!30 = !DILocation(line: 14, column: 10, scope: !29)
!31 = !DILocation(line: 14, column: 17, scope: !32)
!32 = distinct !DILexicalBlock(scope: !29, file: !11, line: 14, column: 5)
!33 = !DILocation(line: 14, column: 19, scope: !32)
!34 = !DILocation(line: 14, column: 5, scope: !29)
!35 = !DILocation(line: 15, column: 17, scope: !36)
!36 = distinct !DILexicalBlock(scope: !32, file: !11, line: 14, column: 29)
!37 = !DILocation(line: 15, column: 13, scope: !36)
!38 = !DILocation(line: 15, column: 11, scope: !36)
!39 = !DILocation(line: 16, column: 5, scope: !36)
!40 = !DILocation(line: 14, column: 25, scope: !32)
!41 = !DILocation(line: 14, column: 5, scope: !32)
!42 = distinct !{!42, !34, !43, !44}
!43 = !DILocation(line: 16, column: 5, scope: !29)
!44 = !{!"llvm.loop.mustprogress"}
!45 = !DILocation(line: 17, column: 16, scope: !21)
!46 = !DILocation(line: 17, column: 18, scope: !21)
!47 = !DILocation(line: 17, column: 23, scope: !21)
!48 = !DILocation(line: 17, column: 26, scope: !21)
!49 = !DILocation(line: 17, column: 28, scope: !21)
!50 = !DILocation(line: 0, scope: !21)
!51 = !DILocation(line: 17, column: 5, scope: !21)
!52 = !DILocation(line: 18, column: 1, scope: !21)
