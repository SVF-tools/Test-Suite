; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/CVE-2021-44975-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/CVE-2021-44975-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.r_io_t = type { i8 }
%struct.RCoreObjc = type { ptr, i64, ptr, ptr }
%struct.r_bin_section_t = type { i64 }
%struct.r_core_t = type { ptr }

@.str = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [46 x i8] c"aao: Cannot read the whole const section %zu\0A\00", align 1, !dbg !7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @r_io_pread_at(ptr noundef %io, ptr noundef %buf, i32 noundef %len) #0 !dbg !23 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca ptr, align 8
  %buf.addr = alloca ptr, align 8
  %len.addr = alloca i32, align 4
  store ptr %io, ptr %io.addr, align 8
    #dbg_declare(ptr %io.addr, !35, !DIExpression(), !36)
  store ptr %buf, ptr %buf.addr, align 8
    #dbg_declare(ptr %buf.addr, !37, !DIExpression(), !38)
  store i32 %len, ptr %len.addr, align 4
    #dbg_declare(ptr %len.addr, !39, !DIExpression(), !40)
  %0 = load ptr, ptr %io.addr, align 8, !dbg !41
  %tobool = icmp ne ptr %0, null, !dbg !41
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !43

land.lhs.true:                                    ; preds = %entry
  %1 = load ptr, ptr %buf.addr, align 8, !dbg !44
  %tobool1 = icmp ne ptr %1, null, !dbg !44
  br i1 %tobool1, label %land.lhs.true2, label %if.then, !dbg !45

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, ptr %len.addr, align 4, !dbg !46
  %cmp = icmp sge i32 %2, 0, !dbg !47
  br i1 %cmp, label %if.end, label %if.then, !dbg !48

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i32 -1, ptr %retval, align 4, !dbg !49
  br label %return, !dbg !49

if.end:                                           ; preds = %land.lhs.true2
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !51
  %4 = load ptr, ptr %io.addr, align 8, !dbg !54
  %Oxff = getelementptr inbounds nuw %struct.r_io_t, ptr %4, i32 0, i32 0, !dbg !55
  %5 = load i8, ptr %Oxff, align 1, !dbg !55
  %conv = zext i8 %5 to i32, !dbg !54
  %6 = trunc i32 %conv to i8, !dbg !56
  %7 = load i32, ptr %len.addr, align 4, !dbg !57
  %conv3 = sext i32 %7 to i64, !dbg !57
  call void @llvm.memset.p0.i64(ptr align 1 %3, i8 %6, i64 %conv3, i1 false), !dbg !56
  %8 = load ptr, ptr %buf.addr, align 8, !dbg !58
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str, ptr noundef %8), !dbg !59
  store i32 1, ptr %retval, align 4, !dbg !60
  br label %return, !dbg !60

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, ptr %retval, align 4, !dbg !61
  ret i32 %9, !dbg !61
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @printf(ptr noundef, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @internal_r_io_read_at(ptr noundef %io, ptr noundef %buf, i32 noundef %len) #0 !dbg !62 {
entry:
  %retval = alloca i1, align 1
  %io.addr = alloca ptr, align 8
  %buf.addr = alloca ptr, align 8
  %len.addr = alloca i32, align 4
  %ret = alloca i8, align 1
  store ptr %io, ptr %io.addr, align 8
    #dbg_declare(ptr %io.addr, !66, !DIExpression(), !67)
  store ptr %buf, ptr %buf.addr, align 8
    #dbg_declare(ptr %buf.addr, !68, !DIExpression(), !69)
  store i32 %len, ptr %len.addr, align 4
    #dbg_declare(ptr %len.addr, !70, !DIExpression(), !71)
  %0 = load i32, ptr %len.addr, align 4, !dbg !72
  %cmp = icmp slt i32 %0, 1, !dbg !74
  br i1 %cmp, label %if.then, label %if.end, !dbg !74

if.then:                                          ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !75
  br label %return, !dbg !75

if.end:                                           ; preds = %entry
    #dbg_declare(ptr %ret, !77, !DIExpression(), !78)
  %1 = load ptr, ptr %io.addr, align 8, !dbg !79
  %2 = load ptr, ptr %buf.addr, align 8, !dbg !80
  %3 = load i32, ptr %len.addr, align 4, !dbg !81
  %call = call i32 @r_io_pread_at(ptr noundef %1, ptr noundef %2, i32 noundef %3), !dbg !82
  %cmp1 = icmp sgt i32 %call, 0, !dbg !83
  %storedv = zext i1 %cmp1 to i8, !dbg !78
  store i8 %storedv, ptr %ret, align 1, !dbg !78
  %4 = load i8, ptr %ret, align 1, !dbg !84
  %loadedv = trunc i8 %4 to i1, !dbg !84
  store i1 %loadedv, ptr %retval, align 1, !dbg !85
  br label %return, !dbg !85

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, ptr %retval, align 1, !dbg !86
  ret i1 %5, !dbg !86
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @r_io_read_at(ptr noundef %io, ptr noundef %buf, i32 noundef %len) #0 !dbg !87 {
entry:
  %retval = alloca i1, align 1
  %io.addr = alloca ptr, align 8
  %buf.addr = alloca ptr, align 8
  %len.addr = alloca i32, align 4
  store ptr %io, ptr %io.addr, align 8
    #dbg_declare(ptr %io.addr, !88, !DIExpression(), !89)
  store ptr %buf, ptr %buf.addr, align 8
    #dbg_declare(ptr %buf.addr, !90, !DIExpression(), !91)
  store i32 %len, ptr %len.addr, align 4
    #dbg_declare(ptr %len.addr, !92, !DIExpression(), !93)
  %0 = load ptr, ptr %io.addr, align 8, !dbg !94
  %tobool = icmp ne ptr %0, null, !dbg !94
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !96

land.lhs.true:                                    ; preds = %entry
  %1 = load ptr, ptr %buf.addr, align 8, !dbg !97
  %tobool1 = icmp ne ptr %1, null, !dbg !97
  br i1 %tobool1, label %land.lhs.true2, label %if.then, !dbg !98

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, ptr %len.addr, align 4, !dbg !99
  %cmp = icmp sge i32 %2, 0, !dbg !100
  br i1 %cmp, label %if.end, label %if.then, !dbg !101

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i1 false, ptr %retval, align 1, !dbg !102
  br label %return, !dbg !102

if.end:                                           ; preds = %land.lhs.true2
  %3 = load i32, ptr %len.addr, align 4, !dbg !104
  %cmp3 = icmp eq i32 %3, 0, !dbg !106
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !106

if.then4:                                         ; preds = %if.end
  store i1 false, ptr %retval, align 1, !dbg !107
  br label %return, !dbg !107

if.end5:                                          ; preds = %if.end
  %4 = load ptr, ptr %io.addr, align 8, !dbg !109
  %5 = load ptr, ptr %buf.addr, align 8, !dbg !110
  %6 = load i32, ptr %len.addr, align 4, !dbg !111
  %call = call zeroext i1 @internal_r_io_read_at(ptr noundef %4, ptr noundef %5, i32 noundef %6), !dbg !112
  store i1 %call, ptr %retval, align 1, !dbg !113
  br label %return, !dbg !113

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i1, ptr %retval, align 1, !dbg !114
  ret i1 %7, !dbg !114
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @objc_build_refs(ptr noundef %objc) #0 !dbg !115 {
entry:
  %retval = alloca i1, align 1
  %objc.addr = alloca ptr, align 8
  %ss_const = alloca i64, align 8
  %ss_selrefs = alloca i64, align 8
  %maxsize = alloca i64, align 8
  %buf = alloca ptr, align 8
  store ptr %objc, ptr %objc.addr, align 8
    #dbg_declare(ptr %objc.addr, !140, !DIExpression(), !141)
    #dbg_declare(ptr %ss_const, !142, !DIExpression(), !143)
  %0 = load ptr, ptr %objc.addr, align 8, !dbg !144
  %_const = getelementptr inbounds nuw %struct.RCoreObjc, ptr %0, i32 0, i32 3, !dbg !145
  %1 = load ptr, ptr %_const, align 8, !dbg !145
  %vsize = getelementptr inbounds nuw %struct.r_bin_section_t, ptr %1, i32 0, i32 0, !dbg !146
  %2 = load i64, ptr %vsize, align 8, !dbg !146
  store i64 %2, ptr %ss_const, align 8, !dbg !143
    #dbg_declare(ptr %ss_selrefs, !147, !DIExpression(), !148)
  %3 = load ptr, ptr %objc.addr, align 8, !dbg !149
  %_selrefs = getelementptr inbounds nuw %struct.RCoreObjc, ptr %3, i32 0, i32 2, !dbg !150
  %4 = load ptr, ptr %_selrefs, align 8, !dbg !150
  %vsize1 = getelementptr inbounds nuw %struct.r_bin_section_t, ptr %4, i32 0, i32 0, !dbg !151
  %5 = load i64, ptr %vsize1, align 8, !dbg !151
  store i64 %5, ptr %ss_selrefs, align 8, !dbg !148
    #dbg_declare(ptr %maxsize, !152, !DIExpression(), !153)
  %6 = load i64, ptr %ss_const, align 8, !dbg !154
  %7 = load i64, ptr %ss_selrefs, align 8, !dbg !154
  %cmp = icmp ugt i64 %6, %7, !dbg !154
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !154

cond.true:                                        ; preds = %entry
  %8 = load i64, ptr %ss_const, align 8, !dbg !154
  br label %cond.end, !dbg !154

cond.false:                                       ; preds = %entry
  %9 = load i64, ptr %ss_selrefs, align 8, !dbg !154
  br label %cond.end, !dbg !154

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ %9, %cond.false ], !dbg !154
  store i64 %cond, ptr %maxsize, align 8, !dbg !153
  %10 = load i64, ptr %maxsize, align 8, !dbg !155
  %11 = load ptr, ptr %objc.addr, align 8, !dbg !155
  %file_size = getelementptr inbounds nuw %struct.RCoreObjc, ptr %11, i32 0, i32 1, !dbg !155
  %12 = load i64, ptr %file_size, align 8, !dbg !155
  %cmp2 = icmp ugt i64 %10, %12, !dbg !155
  br i1 %cmp2, label %cond.true3, label %cond.false5, !dbg !155

cond.true3:                                       ; preds = %cond.end
  %13 = load ptr, ptr %objc.addr, align 8, !dbg !155
  %file_size4 = getelementptr inbounds nuw %struct.RCoreObjc, ptr %13, i32 0, i32 1, !dbg !155
  %14 = load i64, ptr %file_size4, align 8, !dbg !155
  br label %cond.end6, !dbg !155

cond.false5:                                      ; preds = %cond.end
  %15 = load i64, ptr %maxsize, align 8, !dbg !155
  br label %cond.end6, !dbg !155

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi i64 [ %14, %cond.true3 ], [ %15, %cond.false5 ], !dbg !155
  store i64 %cond7, ptr %maxsize, align 8, !dbg !156
    #dbg_declare(ptr %buf, !157, !DIExpression(), !158)
  %16 = load i64, ptr %maxsize, align 8, !dbg !159
  %call = call noalias ptr @calloc(i64 noundef 1, i64 noundef %16) #4, !dbg !160
  store ptr %call, ptr %buf, align 8, !dbg !158
  %17 = load ptr, ptr %buf, align 8, !dbg !161
  %tobool = icmp ne ptr %17, null, !dbg !161
  br i1 %tobool, label %if.end, label %if.then, !dbg !163

if.then:                                          ; preds = %cond.end6
  store i1 false, ptr %retval, align 1, !dbg !164
  br label %return, !dbg !164

if.end:                                           ; preds = %cond.end6
  %18 = load ptr, ptr %objc.addr, align 8, !dbg !166
  %core = getelementptr inbounds nuw %struct.RCoreObjc, ptr %18, i32 0, i32 0, !dbg !168
  %19 = load ptr, ptr %core, align 8, !dbg !168
  %io = getelementptr inbounds nuw %struct.r_core_t, ptr %19, i32 0, i32 0, !dbg !169
  %20 = load ptr, ptr %io, align 8, !dbg !169
  %21 = load ptr, ptr %buf, align 8, !dbg !170
  %22 = load i64, ptr %ss_const, align 8, !dbg !171
  %conv = trunc i64 %22 to i32, !dbg !171
  %call8 = call zeroext i1 @r_io_read_at(ptr noundef %20, ptr noundef %21, i32 noundef %conv), !dbg !172
  br i1 %call8, label %if.end11, label %if.then9, !dbg !173

if.then9:                                         ; preds = %if.end
  %23 = load i64, ptr %ss_const, align 8, !dbg !174
  %call10 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i64 noundef %23), !dbg !176
  store i1 false, ptr %retval, align 1, !dbg !177
  br label %return, !dbg !177

if.end11:                                         ; preds = %if.end
  store i1 true, ptr %retval, align 1, !dbg !178
  br label %return, !dbg !178

return:                                           ; preds = %if.end11, %if.then9, %if.then
  %24 = load i1, ptr %retval, align 1, !dbg !179
  ret i1 %24, !dbg !179
}

; Function Attrs: nounwind allocsize(0,1)
declare noalias ptr @calloc(i64 noundef, i64 noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !180 {
entry:
  %io = alloca %struct.r_io_t, align 1
  %core = alloca %struct.r_core_t, align 8
  %selrefs = alloca %struct.r_bin_section_t, align 8
  %rconst = alloca %struct.r_bin_section_t, align 8
  %objc = alloca %struct.RCoreObjc, align 8
    #dbg_declare(ptr %io, !183, !DIExpression(), !184)
  %Oxff = getelementptr inbounds nuw %struct.r_io_t, ptr %io, i32 0, i32 0, !dbg !185
  store i8 97, ptr %Oxff, align 1, !dbg !186
    #dbg_declare(ptr %core, !187, !DIExpression(), !188)
  %io1 = getelementptr inbounds nuw %struct.r_core_t, ptr %core, i32 0, i32 0, !dbg !189
  store ptr %io, ptr %io1, align 8, !dbg !190
    #dbg_declare(ptr %selrefs, !191, !DIExpression(), !192)
    #dbg_declare(ptr %rconst, !193, !DIExpression(), !194)
  %vsize = getelementptr inbounds nuw %struct.r_bin_section_t, ptr %selrefs, i32 0, i32 0, !dbg !195
  store i64 3, ptr %vsize, align 8, !dbg !196
  %vsize2 = getelementptr inbounds nuw %struct.r_bin_section_t, ptr %rconst, i32 0, i32 0, !dbg !197
  store i64 10, ptr %vsize2, align 8, !dbg !198
    #dbg_declare(ptr %objc, !199, !DIExpression(), !200)
  %core3 = getelementptr inbounds nuw %struct.RCoreObjc, ptr %objc, i32 0, i32 0, !dbg !201
  store ptr %core, ptr %core3, align 8, !dbg !202
  %file_size = getelementptr inbounds nuw %struct.RCoreObjc, ptr %objc, i32 0, i32 1, !dbg !203
  store i64 5, ptr %file_size, align 8, !dbg !204
  %_selrefs = getelementptr inbounds nuw %struct.RCoreObjc, ptr %objc, i32 0, i32 2, !dbg !205
  store ptr %selrefs, ptr %_selrefs, align 8, !dbg !206
  %_const = getelementptr inbounds nuw %struct.RCoreObjc, ptr %objc, i32 0, i32 3, !dbg !207
  store ptr %rconst, ptr %_const, align 8, !dbg !208
  %call = call zeroext i1 @objc_build_refs(ptr noundef %objc), !dbg !209
  ret i32 0, !dbg !210
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0,1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind allocsize(0,1) }

!llvm.dbg.cu = !{!12}
!llvm.module.flags = !{!15, !16, !17, !18, !19, !20, !21}
!llvm.ident = !{!22}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 44, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/CVE-2021-44975-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "cd260ac6c139d337e7016f4869ac17ff")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 4)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 81, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 368, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 46)
!12 = distinct !DICompileUnit(language: DW_LANG_C11, file: !13, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !14, splitDebugInlining: false, nameTableKind: None)
!13 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/CVE-2021-44975-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "cd260ac6c139d337e7016f4869ac17ff")
!14 = !{!0, !7}
!15 = !{i32 7, !"Dwarf Version", i32 5}
!16 = !{i32 2, !"Debug Info Version", i32 3}
!17 = !{i32 1, !"wchar_size", i32 4}
!18 = !{i32 8, !"PIC Level", i32 2}
!19 = !{i32 7, !"PIE Level", i32 2}
!20 = !{i32 7, !"uwtable", i32 2}
!21 = !{i32 7, !"frame-pointer", i32 2}
!22 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!23 = distinct !DISubprogram(name: "r_io_pread_at", scope: !2, file: !2, line: 37, type: !24, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !34)
!24 = !DISubroutineType(types: !25)
!25 = !{!26, !27, !33, !26}
!26 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "RIO", file: !2, line: 19, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "r_io_t", file: !2, line: 17, size: 8, elements: !30)
!30 = !{!31}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "Oxff", scope: !29, file: !2, line: 18, baseType: !32, size: 8)
!32 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!34 = !{}
!35 = !DILocalVariable(name: "io", arg: 1, scope: !23, file: !2, line: 37, type: !27)
!36 = !DILocation(line: 37, column: 24, scope: !23)
!37 = !DILocalVariable(name: "buf", arg: 2, scope: !23, file: !2, line: 37, type: !33)
!38 = !DILocation(line: 37, column: 33, scope: !23)
!39 = !DILocalVariable(name: "len", arg: 3, scope: !23, file: !2, line: 37, type: !26)
!40 = !DILocation(line: 37, column: 42, scope: !23)
!41 = !DILocation(line: 38, column: 7, scope: !42)
!42 = distinct !DILexicalBlock(scope: !23, file: !2, line: 38, column: 5)
!43 = !DILocation(line: 38, column: 10, scope: !42)
!44 = !DILocation(line: 38, column: 13, scope: !42)
!45 = !DILocation(line: 38, column: 17, scope: !42)
!46 = !DILocation(line: 38, column: 20, scope: !42)
!47 = !DILocation(line: 38, column: 24, scope: !42)
!48 = !DILocation(line: 38, column: 5, scope: !42)
!49 = !DILocation(line: 39, column: 3, scope: !50)
!50 = distinct !DILexicalBlock(scope: !42, file: !2, line: 38, column: 31)
!51 = !DILocation(line: 43, column: 10, scope: !52)
!52 = distinct !DILexicalBlock(scope: !53, file: !2, line: 41, column: 12)
!53 = distinct !DILexicalBlock(scope: !23, file: !2, line: 41, column: 6)
!54 = !DILocation(line: 43, column: 15, scope: !52)
!55 = !DILocation(line: 43, column: 19, scope: !52)
!56 = !DILocation(line: 43, column: 3, scope: !52)
!57 = !DILocation(line: 43, column: 25, scope: !52)
!58 = !DILocation(line: 44, column: 18, scope: !52)
!59 = !DILocation(line: 44, column: 3, scope: !52)
!60 = !DILocation(line: 46, column: 2, scope: !23)
!61 = !DILocation(line: 47, column: 1, scope: !23)
!62 = distinct !DISubprogram(name: "internal_r_io_read_at", scope: !2, file: !2, line: 49, type: !63, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !34)
!63 = !DISubroutineType(types: !64)
!64 = !{!65, !27, !33, !26}
!65 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!66 = !DILocalVariable(name: "io", arg: 1, scope: !62, file: !2, line: 49, type: !27)
!67 = !DILocation(line: 49, column: 33, scope: !62)
!68 = !DILocalVariable(name: "buf", arg: 2, scope: !62, file: !2, line: 49, type: !33)
!69 = !DILocation(line: 49, column: 42, scope: !62)
!70 = !DILocalVariable(name: "len", arg: 3, scope: !62, file: !2, line: 49, type: !26)
!71 = !DILocation(line: 49, column: 51, scope: !62)
!72 = !DILocation(line: 50, column: 6, scope: !73)
!73 = distinct !DILexicalBlock(scope: !62, file: !2, line: 50, column: 6)
!74 = !DILocation(line: 50, column: 10, scope: !73)
!75 = !DILocation(line: 51, column: 3, scope: !76)
!76 = distinct !DILexicalBlock(scope: !73, file: !2, line: 50, column: 15)
!77 = !DILocalVariable(name: "ret", scope: !62, file: !2, line: 53, type: !65)
!78 = !DILocation(line: 53, column: 7, scope: !62)
!79 = !DILocation(line: 53, column: 28, scope: !62)
!80 = !DILocation(line: 53, column: 32, scope: !62)
!81 = !DILocation(line: 53, column: 37, scope: !62)
!82 = !DILocation(line: 53, column: 13, scope: !62)
!83 = !DILocation(line: 53, column: 42, scope: !62)
!84 = !DILocation(line: 54, column: 9, scope: !62)
!85 = !DILocation(line: 54, column: 2, scope: !62)
!86 = !DILocation(line: 55, column: 1, scope: !62)
!87 = distinct !DISubprogram(name: "r_io_read_at", scope: !2, file: !2, line: 58, type: !63, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !34)
!88 = !DILocalVariable(name: "io", arg: 1, scope: !87, file: !2, line: 58, type: !27)
!89 = !DILocation(line: 58, column: 24, scope: !87)
!90 = !DILocalVariable(name: "buf", arg: 2, scope: !87, file: !2, line: 58, type: !33)
!91 = !DILocation(line: 58, column: 33, scope: !87)
!92 = !DILocalVariable(name: "len", arg: 3, scope: !87, file: !2, line: 58, type: !26)
!93 = !DILocation(line: 58, column: 42, scope: !87)
!94 = !DILocation(line: 59, column: 7, scope: !95)
!95 = distinct !DILexicalBlock(scope: !87, file: !2, line: 59, column: 5)
!96 = !DILocation(line: 59, column: 10, scope: !95)
!97 = !DILocation(line: 59, column: 13, scope: !95)
!98 = !DILocation(line: 59, column: 17, scope: !95)
!99 = !DILocation(line: 59, column: 20, scope: !95)
!100 = !DILocation(line: 59, column: 24, scope: !95)
!101 = !DILocation(line: 59, column: 5, scope: !95)
!102 = !DILocation(line: 60, column: 3, scope: !103)
!103 = distinct !DILexicalBlock(scope: !95, file: !2, line: 59, column: 31)
!104 = !DILocation(line: 62, column: 6, scope: !105)
!105 = distinct !DILexicalBlock(scope: !87, file: !2, line: 62, column: 6)
!106 = !DILocation(line: 62, column: 10, scope: !105)
!107 = !DILocation(line: 63, column: 3, scope: !108)
!108 = distinct !DILexicalBlock(scope: !105, file: !2, line: 62, column: 16)
!109 = !DILocation(line: 65, column: 32, scope: !87)
!110 = !DILocation(line: 65, column: 36, scope: !87)
!111 = !DILocation(line: 65, column: 41, scope: !87)
!112 = !DILocation(line: 65, column: 9, scope: !87)
!113 = !DILocation(line: 65, column: 2, scope: !87)
!114 = !DILocation(line: 66, column: 1, scope: !87)
!115 = distinct !DISubprogram(name: "objc_build_refs", scope: !2, file: !2, line: 68, type: !116, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !34)
!116 = !DISubroutineType(types: !117)
!117 = !{!65, !118}
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCoreObjc", file: !2, line: 35, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2, line: 30, size: 256, elements: !121)
!121 = !{!122, !128, !132, !139}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !120, file: !2, line: 31, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCore", file: !2, line: 28, baseType: !125)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "r_core_t", file: !2, line: 25, size: 64, elements: !126)
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !125, file: !2, line: 26, baseType: !27, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !120, file: !2, line: 32, baseType: !129, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !130, line: 18, baseType: !131)
!130 = !DIFile(filename: "/usr/lib/llvm-20/lib/clang/20/include/__stddef_size_t.h", directory: "", checksumkind: CSK_MD5, checksum: "2c44e821a2b1951cde2eb0fb2e656867")
!131 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "_selrefs", scope: !120, file: !2, line: 33, baseType: !133, size: 64, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "RBinSection", file: !2, line: 23, baseType: !135)
!135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "r_bin_section_t", file: !2, line: 21, size: 64, elements: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "vsize", scope: !135, file: !2, line: 22, baseType: !138, size: 64)
!138 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_const", scope: !120, file: !2, line: 34, baseType: !133, size: 64, offset: 192)
!140 = !DILocalVariable(name: "objc", arg: 1, scope: !115, file: !2, line: 68, type: !118)
!141 = !DILocation(line: 68, column: 33, scope: !115)
!142 = !DILocalVariable(name: "ss_const", scope: !115, file: !2, line: 69, type: !129)
!143 = !DILocation(line: 69, column: 9, scope: !115)
!144 = !DILocation(line: 69, column: 20, scope: !115)
!145 = !DILocation(line: 69, column: 26, scope: !115)
!146 = !DILocation(line: 69, column: 34, scope: !115)
!147 = !DILocalVariable(name: "ss_selrefs", scope: !115, file: !2, line: 70, type: !129)
!148 = !DILocation(line: 70, column: 9, scope: !115)
!149 = !DILocation(line: 70, column: 22, scope: !115)
!150 = !DILocation(line: 70, column: 28, scope: !115)
!151 = !DILocation(line: 70, column: 38, scope: !115)
!152 = !DILocalVariable(name: "maxsize", scope: !115, file: !2, line: 73, type: !129)
!153 = !DILocation(line: 73, column: 9, scope: !115)
!154 = !DILocation(line: 73, column: 19, scope: !115)
!155 = !DILocation(line: 74, column: 12, scope: !115)
!156 = !DILocation(line: 74, column: 10, scope: !115)
!157 = !DILocalVariable(name: "buf", scope: !115, file: !2, line: 76, type: !33)
!158 = !DILocation(line: 76, column: 7, scope: !115)
!159 = !DILocation(line: 76, column: 24, scope: !115)
!160 = !DILocation(line: 76, column: 13, scope: !115)
!161 = !DILocation(line: 77, column: 7, scope: !162)
!162 = distinct !DILexicalBlock(scope: !115, file: !2, line: 77, column: 6)
!163 = !DILocation(line: 77, column: 6, scope: !162)
!164 = !DILocation(line: 78, column: 3, scope: !165)
!165 = distinct !DILexicalBlock(scope: !162, file: !2, line: 77, column: 12)
!166 = !DILocation(line: 80, column: 21, scope: !167)
!167 = distinct !DILexicalBlock(scope: !115, file: !2, line: 80, column: 6)
!168 = !DILocation(line: 80, column: 27, scope: !167)
!169 = !DILocation(line: 80, column: 33, scope: !167)
!170 = !DILocation(line: 80, column: 37, scope: !167)
!171 = !DILocation(line: 80, column: 42, scope: !167)
!172 = !DILocation(line: 80, column: 7, scope: !167)
!173 = !DILocation(line: 80, column: 6, scope: !167)
!174 = !DILocation(line: 81, column: 61, scope: !175)
!175 = distinct !DILexicalBlock(scope: !167, file: !2, line: 80, column: 53)
!176 = !DILocation(line: 81, column: 3, scope: !175)
!177 = !DILocation(line: 82, column: 3, scope: !175)
!178 = !DILocation(line: 84, column: 2, scope: !115)
!179 = !DILocation(line: 85, column: 1, scope: !115)
!180 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 87, type: !181, scopeLine: 87, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !34)
!181 = !DISubroutineType(types: !182)
!182 = !{!26}
!183 = !DILocalVariable(name: "io", scope: !180, file: !2, line: 88, type: !28)
!184 = !DILocation(line: 88, column: 6, scope: !180)
!185 = !DILocation(line: 89, column: 5, scope: !180)
!186 = !DILocation(line: 89, column: 10, scope: !180)
!187 = !DILocalVariable(name: "core", scope: !180, file: !2, line: 91, type: !124)
!188 = !DILocation(line: 91, column: 8, scope: !180)
!189 = !DILocation(line: 92, column: 7, scope: !180)
!190 = !DILocation(line: 92, column: 10, scope: !180)
!191 = !DILocalVariable(name: "selrefs", scope: !180, file: !2, line: 94, type: !134)
!192 = !DILocation(line: 94, column: 14, scope: !180)
!193 = !DILocalVariable(name: "rconst", scope: !180, file: !2, line: 95, type: !134)
!194 = !DILocation(line: 95, column: 14, scope: !180)
!195 = !DILocation(line: 96, column: 10, scope: !180)
!196 = !DILocation(line: 96, column: 16, scope: !180)
!197 = !DILocation(line: 97, column: 9, scope: !180)
!198 = !DILocation(line: 97, column: 15, scope: !180)
!199 = !DILocalVariable(name: "objc", scope: !180, file: !2, line: 99, type: !119)
!200 = !DILocation(line: 99, column: 12, scope: !180)
!201 = !DILocation(line: 100, column: 7, scope: !180)
!202 = !DILocation(line: 100, column: 12, scope: !180)
!203 = !DILocation(line: 101, column: 7, scope: !180)
!204 = !DILocation(line: 101, column: 17, scope: !180)
!205 = !DILocation(line: 102, column: 7, scope: !180)
!206 = !DILocation(line: 102, column: 16, scope: !180)
!207 = !DILocation(line: 103, column: 7, scope: !180)
!208 = !DILocation(line: 103, column: 14, scope: !180)
!209 = !DILocation(line: 105, column: 2, scope: !180)
!210 = !DILocation(line: 106, column: 1, scope: !180)
