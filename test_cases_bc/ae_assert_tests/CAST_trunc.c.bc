; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/CAST_trunc.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/CAST_trunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !16 {
entry:
  %retval = alloca i32, align 4
  %largeValue = alloca i64, align 8
  %truncatedValue = alloca i8, align 1
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %largeValue, metadata !22, metadata !DIExpression()), !dbg !26
  store i64 256, ptr %largeValue, align 8, !dbg !26
  call void @llvm.dbg.declare(metadata ptr %truncatedValue, metadata !27, metadata !DIExpression()), !dbg !28
  %0 = load i64, ptr %largeValue, align 8, !dbg !29
  %conv = trunc i64 %0 to i8, !dbg !30
  store i8 %conv, ptr %truncatedValue, align 1, !dbg !28
  %1 = load i8, ptr %truncatedValue, align 1, !dbg !31
  %conv1 = sext i8 %1 to i32, !dbg !31
  %cmp = icmp eq i32 %conv1, 0, !dbg !32
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !33
  ret i32 0, !dbg !34
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9, !10, !11, !12, !13, !14}
!llvm.ident = !{!15}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/CAST_trunc.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "cf95474b31e6546b0cf82e7999d64a74")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !4, line: 24, baseType: !5)
!4 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "081edea97425b3437dded4a7fe223193")
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !6, line: 37, baseType: !7)
!6 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "f6304b1a6dcfc6bee76e9a51043b5090")
!7 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8 = !{i32 7, !"Dwarf Version", i32 5}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = !{i32 1, !"wchar_size", i32 4}
!11 = !{i32 8, !"PIC Level", i32 2}
!12 = !{i32 7, !"PIE Level", i32 2}
!13 = !{i32 7, !"uwtable", i32 2}
!14 = !{i32 7, !"frame-pointer", i32 2}
!15 = !{!"clang version 16.0.0"}
!16 = distinct !DISubprogram(name: "main", scope: !17, file: !17, line: 4, type: !18, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !21)
!17 = !DIFile(filename: "src/ae_assert_tests/CAST_trunc.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "cf95474b31e6546b0cf82e7999d64a74")
!18 = !DISubroutineType(types: !19)
!19 = !{!20}
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !{}
!22 = !DILocalVariable(name: "largeValue", scope: !16, file: !17, line: 5, type: !23)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !4, line: 27, baseType: !24)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !6, line: 44, baseType: !25)
!25 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!26 = !DILocation(line: 5, column: 13, scope: !16)
!27 = !DILocalVariable(name: "truncatedValue", scope: !16, file: !17, line: 6, type: !3)
!28 = !DILocation(line: 6, column: 12, scope: !16)
!29 = !DILocation(line: 6, column: 37, scope: !16)
!30 = !DILocation(line: 6, column: 29, scope: !16)
!31 = !DILocation(line: 8, column: 16, scope: !16)
!32 = !DILocation(line: 8, column: 31, scope: !16)
!33 = !DILocation(line: 8, column: 5, scope: !16)
!34 = !DILocation(line: 9, column: 5, scope: !16)
