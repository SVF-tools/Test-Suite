; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_37-0.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/INTERVAL_test_37-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.testStruct = type { i32 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  %call = call noalias ptr @malloc(i64 noundef 16) #3
  store ptr %call, ptr %i, align 8
  %0 = load ptr, ptr %i, align 8
  %arrayidx = getelementptr inbounds %struct.testStruct, ptr %0, i64 3
  %a = getelementptr inbounds %struct.testStruct, ptr %arrayidx, i32 0, i32 0
  %1 = load i32, ptr %a, align 4
  %cmp = icmp sgt i32 %1, 5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %i, align 8
  %arrayidx1 = getelementptr inbounds %struct.testStruct, ptr %2, i64 3
  %a2 = getelementptr inbounds %struct.testStruct, ptr %arrayidx1, i32 0, i32 0
  %3 = load i32, ptr %a2, align 4
  %cmp3 = icmp sgt i32 %3, 5
  call void @svf_assert(i1 noundef zeroext %cmp3)
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr %i, align 8
  %arrayidx4 = getelementptr inbounds %struct.testStruct, ptr %4, i64 3
  %a5 = getelementptr inbounds %struct.testStruct, ptr %arrayidx4, i32 0, i32 0
  %5 = load i32, ptr %a5, align 4
  %cmp6 = icmp sle i32 %5, 5
  call void @svf_assert(i1 noundef zeroext %cmp6)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #1

declare void @svf_assert(i1 noundef zeroext) #2

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
