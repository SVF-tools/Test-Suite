; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_ptr_func_0-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/BASIC_ptr_func_0-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @swap(ptr noundef %p, ptr noundef %q) #0 !dbg !10 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  %t = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
    #dbg_declare(ptr %p.addr, !18, !DIExpression(), !19)
  store ptr %q, ptr %q.addr, align 8
    #dbg_declare(ptr %q.addr, !20, !DIExpression(), !21)
    #dbg_declare(ptr %t, !22, !DIExpression(), !23)
  %0 = load ptr, ptr %p.addr, align 8, !dbg !24
  %1 = load ptr, ptr %0, align 8, !dbg !25
  store ptr %1, ptr %t, align 8, !dbg !23
  %2 = load ptr, ptr %q.addr, align 8, !dbg !26
  %3 = load ptr, ptr %2, align 8, !dbg !27
  %4 = load ptr, ptr %p.addr, align 8, !dbg !28
  store ptr %3, ptr %4, align 8, !dbg !29
  %5 = load ptr, ptr %t, align 8, !dbg !30
  %6 = load ptr, ptr %q.addr, align 8, !dbg !31
  store ptr %5, ptr %6, align 8, !dbg !32
  %7 = load ptr, ptr %q.addr, align 8, !dbg !33
  %8 = load ptr, ptr %7, align 8, !dbg !34
  %9 = load ptr, ptr %t, align 8, !dbg !35
  %cmp = icmp eq ptr %8, %9, !dbg !36
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !37
  ret void, !dbg !38
}

declare void @svf_assert(i1 noundef zeroext) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !39 {
entry:
  %a1 = alloca i8, align 1
  %b1 = alloca i8, align 1
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
    #dbg_declare(ptr %a1, !43, !DIExpression(), !44)
    #dbg_declare(ptr %b1, !45, !DIExpression(), !46)
    #dbg_declare(ptr %a, !47, !DIExpression(), !48)
  store ptr %a1, ptr %a, align 8, !dbg !48
    #dbg_declare(ptr %b, !49, !DIExpression(), !50)
  store ptr %b1, ptr %b, align 8, !dbg !50
  call void @swap(ptr noundef %a, ptr noundef %b), !dbg !51
  ret i32 0, !dbg !52
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/BASIC_ptr_func_0-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "c8b7df03c0d7b53bca2ab712150da941")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!10 = distinct !DISubprogram(name: "swap", scope: !11, file: !11, line: 3, type: !12, scopeLine: 3, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!11 = !DIFile(filename: "src/ae_assert_tests/BASIC_ptr_func_0-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "c8b7df03c0d7b53bca2ab712150da941")
!12 = !DISubroutineType(types: !13)
!13 = !{null, !14, !14}
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!17 = !{}
!18 = !DILocalVariable(name: "p", arg: 1, scope: !10, file: !11, line: 3, type: !14)
!19 = !DILocation(line: 3, column: 18, scope: !10)
!20 = !DILocalVariable(name: "q", arg: 2, scope: !10, file: !11, line: 3, type: !14)
!21 = !DILocation(line: 3, column: 28, scope: !10)
!22 = !DILocalVariable(name: "t", scope: !10, file: !11, line: 4, type: !15)
!23 = !DILocation(line: 4, column: 9, scope: !10)
!24 = !DILocation(line: 4, column: 14, scope: !10)
!25 = !DILocation(line: 4, column: 13, scope: !10)
!26 = !DILocation(line: 5, column: 14, scope: !10)
!27 = !DILocation(line: 5, column: 13, scope: !10)
!28 = !DILocation(line: 5, column: 9, scope: !10)
!29 = !DILocation(line: 5, column: 11, scope: !10)
!30 = !DILocation(line: 6, column: 13, scope: !10)
!31 = !DILocation(line: 6, column: 9, scope: !10)
!32 = !DILocation(line: 6, column: 11, scope: !10)
!33 = !DILocation(line: 7, column: 19, scope: !10)
!34 = !DILocation(line: 7, column: 18, scope: !10)
!35 = !DILocation(line: 7, column: 24, scope: !10)
!36 = !DILocation(line: 7, column: 21, scope: !10)
!37 = !DILocation(line: 7, column: 7, scope: !10)
!38 = !DILocation(line: 8, column: 1, scope: !10)
!39 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 9, type: !40, scopeLine: 9, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!40 = !DISubroutineType(types: !41)
!41 = !{!42}
!42 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!43 = !DILocalVariable(name: "a1", scope: !39, file: !11, line: 10, type: !16)
!44 = !DILocation(line: 10, column: 12, scope: !39)
!45 = !DILocalVariable(name: "b1", scope: !39, file: !11, line: 10, type: !16)
!46 = !DILocation(line: 10, column: 16, scope: !39)
!47 = !DILocalVariable(name: "a", scope: !39, file: !11, line: 11, type: !15)
!48 = !DILocation(line: 11, column: 13, scope: !39)
!49 = !DILocalVariable(name: "b", scope: !39, file: !11, line: 12, type: !15)
!50 = !DILocation(line: 12, column: 13, scope: !39)
!51 = !DILocation(line: 13, column: 7, scope: !39)
!52 = !DILocation(line: 14, column: 1, scope: !39)
