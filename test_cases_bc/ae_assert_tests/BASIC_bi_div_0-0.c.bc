; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_bi_div_0-0.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_bi_div_0-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"c\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [2 x i8] c"d\00", align 1, !dbg !7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !20 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %a, !25, !DIExpression(), !26)
  store i32 10, ptr %a, align 4, !dbg !26
    #dbg_declare(ptr %b, !27, !DIExpression(), !28)
  store i32 5, ptr %b, align 4, !dbg !28
    #dbg_declare(ptr %c, !29, !DIExpression(), !30)
  %0 = load i32, ptr %a, align 4, !dbg !31
  %1 = load i32, ptr %b, align 4, !dbg !32
  %div = sdiv i32 %0, %1, !dbg !33
  store i32 %div, ptr %c, align 4, !dbg !30
    #dbg_declare(ptr %d, !34, !DIExpression(), !35)
  %2 = load i32, ptr %a, align 4, !dbg !36
  %3 = load i32, ptr %b, align 4, !dbg !37
  %rem = srem i32 %2, %3, !dbg !38
  store i32 %rem, ptr %d, align 4, !dbg !35
  %4 = load i32, ptr %c, align 4, !dbg !39
  call void @svf_print(i32 noundef %4, ptr noundef @.str), !dbg !40
  %5 = load i32, ptr %d, align 4, !dbg !41
  call void @svf_print(i32 noundef %5, ptr noundef @.str.1), !dbg !42
  %6 = load i32, ptr %c, align 4, !dbg !43
  %cmp = icmp eq i32 %6, 2, !dbg !44
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !45

land.rhs:                                         ; preds = %entry
  %7 = load i32, ptr %d, align 4, !dbg !46
  %cmp1 = icmp eq i32 %7, 0, !dbg !47
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !48
  call void @svf_assert(i1 noundef zeroext %8), !dbg !49
  ret i32 0, !dbg !50
}

declare void @svf_print(i32 noundef, ptr noundef) #1

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!9}
!llvm.module.flags = !{!12, !13, !14, !15, !16, !17, !18}
!llvm.ident = !{!19}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 10, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_assert_tests/BASIC_bi_div_0-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "12648ff6157c37feda6c3ed320560cee")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 2)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 11, type: !3, isLocal: true, isDefinition: true)
!9 = distinct !DICompileUnit(language: DW_LANG_C11, file: !10, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !11, splitDebugInlining: false, nameTableKind: None)
!10 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_bi_div_0-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "12648ff6157c37feda6c3ed320560cee")
!11 = !{!0, !7}
!12 = !{i32 7, !"Dwarf Version", i32 5}
!13 = !{i32 2, !"Debug Info Version", i32 3}
!14 = !{i32 1, !"wchar_size", i32 4}
!15 = !{i32 8, !"PIC Level", i32 2}
!16 = !{i32 7, !"PIE Level", i32 2}
!17 = !{i32 7, !"uwtable", i32 2}
!18 = !{i32 7, !"frame-pointer", i32 2}
!19 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!20 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 5, type: !21, scopeLine: 5, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !24)
!21 = !DISubroutineType(types: !22)
!22 = !{!23}
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !{}
!25 = !DILocalVariable(name: "a", scope: !20, file: !2, line: 6, type: !23)
!26 = !DILocation(line: 6, column: 9, scope: !20)
!27 = !DILocalVariable(name: "b", scope: !20, file: !2, line: 7, type: !23)
!28 = !DILocation(line: 7, column: 9, scope: !20)
!29 = !DILocalVariable(name: "c", scope: !20, file: !2, line: 8, type: !23)
!30 = !DILocation(line: 8, column: 9, scope: !20)
!31 = !DILocation(line: 8, column: 13, scope: !20)
!32 = !DILocation(line: 8, column: 17, scope: !20)
!33 = !DILocation(line: 8, column: 15, scope: !20)
!34 = !DILocalVariable(name: "d", scope: !20, file: !2, line: 9, type: !23)
!35 = !DILocation(line: 9, column: 9, scope: !20)
!36 = !DILocation(line: 9, column: 13, scope: !20)
!37 = !DILocation(line: 9, column: 17, scope: !20)
!38 = !DILocation(line: 9, column: 15, scope: !20)
!39 = !DILocation(line: 10, column: 15, scope: !20)
!40 = !DILocation(line: 10, column: 5, scope: !20)
!41 = !DILocation(line: 11, column: 15, scope: !20)
!42 = !DILocation(line: 11, column: 5, scope: !20)
!43 = !DILocation(line: 12, column: 16, scope: !20)
!44 = !DILocation(line: 12, column: 18, scope: !20)
!45 = !DILocation(line: 12, column: 23, scope: !20)
!46 = !DILocation(line: 12, column: 26, scope: !20)
!47 = !DILocation(line: 12, column: 28, scope: !20)
!48 = !DILocation(line: 0, scope: !20)
!49 = !DILocation(line: 12, column: 5, scope: !20)
!50 = !DILocation(line: 13, column: 5, scope: !20)
