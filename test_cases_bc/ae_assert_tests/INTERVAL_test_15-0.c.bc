; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/INTERVAL_test_15-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_15-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !10 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %a, !16, !DIExpression(), !17)
  %0 = load i32, ptr %a, align 4, !dbg !18
  %rem = srem i32 %0, 5, !dbg !19
  store i32 %rem, ptr %a, align 4, !dbg !20
  %1 = load i32, ptr %a, align 4, !dbg !21
  %cmp = icmp sge i32 %1, 0, !dbg !23
  br i1 %cmp, label %if.then, label %if.end, !dbg !23

if.then:                                          ; preds = %entry
  %2 = load i32, ptr %a, align 4, !dbg !24
  %cmp1 = icmp sge i32 %2, 0, !dbg !26
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !27

land.rhs:                                         ; preds = %if.then
  %3 = load i32, ptr %a, align 4, !dbg !28
  %cmp2 = icmp slt i32 %3, 5, !dbg !29
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %4 = phi i1 [ false, %if.then ], [ %cmp2, %land.rhs ], !dbg !30
  call void @svf_assert(i1 noundef zeroext %4), !dbg !31
  br label %if.end, !dbg !32

if.end:                                           ; preds = %land.end, %entry
  %5 = load i32, ptr %retval, align 4, !dbg !33
  ret i32 %5, !dbg !33
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/INTERVAL_test_15-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "4c398f40db7ce5c4550842fc7798a36a")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!10 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 4, type: !12, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!11 = !DIFile(filename: "src/ae_assert_tests/INTERVAL_test_15-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "4c398f40db7ce5c4550842fc7798a36a")
!12 = !DISubroutineType(types: !13)
!13 = !{!14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{}
!16 = !DILocalVariable(name: "a", scope: !10, file: !11, line: 5, type: !14)
!17 = !DILocation(line: 5, column: 9, scope: !10)
!18 = !DILocation(line: 6, column: 9, scope: !10)
!19 = !DILocation(line: 6, column: 11, scope: !10)
!20 = !DILocation(line: 6, column: 7, scope: !10)
!21 = !DILocation(line: 7, column: 9, scope: !22)
!22 = distinct !DILexicalBlock(scope: !10, file: !11, line: 7, column: 9)
!23 = !DILocation(line: 7, column: 11, scope: !22)
!24 = !DILocation(line: 8, column: 20, scope: !25)
!25 = distinct !DILexicalBlock(scope: !22, file: !11, line: 7, column: 17)
!26 = !DILocation(line: 8, column: 22, scope: !25)
!27 = !DILocation(line: 8, column: 27, scope: !25)
!28 = !DILocation(line: 8, column: 30, scope: !25)
!29 = !DILocation(line: 8, column: 32, scope: !25)
!30 = !DILocation(line: 0, scope: !25)
!31 = !DILocation(line: 8, column: 9, scope: !25)
!32 = !DILocation(line: 9, column: 5, scope: !25)
!33 = !DILocation(line: 10, column: 1, scope: !10)
