; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_assert_tests/NULL_4.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/NULL_4.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !12 {
entry:
  %retval = alloca i32, align 4
  %a = alloca [3 x [3 x ptr]], align 16
  %isNull = alloca i8, align 1
  store i32 0, ptr %retval, align 4
  call void @llvm.dbg.declare(metadata ptr %a, metadata !18, metadata !DIExpression()), !dbg !23
  call void @llvm.memset.p0.i64(ptr align 16 %a, i8 0, i64 72, i1 false), !dbg !23
  call void @llvm.dbg.declare(metadata ptr %isNull, metadata !24, metadata !DIExpression()), !dbg !26
  %arrayidx = getelementptr inbounds [3 x [3 x ptr]], ptr %a, i64 0, i64 0, !dbg !27
  %arrayidx1 = getelementptr inbounds [3 x ptr], ptr %arrayidx, i64 0, i64 0, !dbg !27
  %0 = load ptr, ptr %arrayidx1, align 16, !dbg !27
  %cmp = icmp eq ptr %0, null, !dbg !28
  %frombool = zext i1 %cmp to i8, !dbg !26
  store i8 %frombool, ptr %isNull, align 1, !dbg !26
  %1 = load i8, ptr %isNull, align 1, !dbg !29
  %tobool = trunc i8 %1 to i1, !dbg !29
  call void @svf_assert(i1 noundef zeroext %tobool), !dbg !30
  ret i32 0, !dbg !31
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare void @svf_assert(i1 noundef zeroext) #3

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!4, !5, !6, !7, !8, !9, !10}
!llvm.ident = !{!11}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_assert_tests/NULL_4.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "1689cb57e4b5b96b758c3da9e45d4d66")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!4 = !{i32 7, !"Dwarf Version", i32 5}
!5 = !{i32 2, !"Debug Info Version", i32 3}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"PIE Level", i32 2}
!9 = !{i32 7, !"uwtable", i32 2}
!10 = !{i32 7, !"frame-pointer", i32 2}
!11 = !{!"clang version 16.0.0"}
!12 = distinct !DISubprogram(name: "main", scope: !13, file: !13, line: 5, type: !14, scopeLine: 5, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!13 = !DIFile(filename: "src/ae_assert_tests/NULL_4.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "1689cb57e4b5b96b758c3da9e45d4d66")
!14 = !DISubroutineType(types: !15)
!15 = !{!16}
!16 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!17 = !{}
!18 = !DILocalVariable(name: "a", scope: !12, file: !13, line: 6, type: !19)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 576, elements: !21)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!21 = !{!22, !22}
!22 = !DISubrange(count: 3)
!23 = !DILocation(line: 6, column: 10, scope: !12)
!24 = !DILocalVariable(name: "isNull", scope: !12, file: !13, line: 8, type: !25)
!25 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!26 = !DILocation(line: 8, column: 10, scope: !12)
!27 = !DILocation(line: 8, column: 20, scope: !12)
!28 = !DILocation(line: 8, column: 28, scope: !12)
!29 = !DILocation(line: 9, column: 16, scope: !12)
!30 = !DILocation(line: 9, column: 5, scope: !12)
!31 = !DILocation(line: 11, column: 5, scope: !12)
