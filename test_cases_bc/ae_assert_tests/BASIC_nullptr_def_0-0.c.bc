; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_nullptr_def_0-0.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_nullptr_def_0-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._twoIntsStruct = type { i32, i32 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !19 {
entry:
  %retval = alloca i32, align 4
  %twoIntsStructPointer = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %twoIntsStructPointer, !23, !DIExpression(), !24)
  %0 = alloca i8, i64 8, align 16, !dbg !25
  store ptr %0, ptr %twoIntsStructPointer, align 8, !dbg !24
  %1 = load ptr, ptr %twoIntsStructPointer, align 8, !dbg !26
  %intOne = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %1, i32 0, i32 0, !dbg !27
  store i32 5, ptr %intOne, align 4, !dbg !28
  %2 = load ptr, ptr %twoIntsStructPointer, align 8, !dbg !29
  %intTwo = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %2, i32 0, i32 1, !dbg !30
  store i32 3, ptr %intTwo, align 4, !dbg !31
  %3 = load ptr, ptr %twoIntsStructPointer, align 8, !dbg !32
  %intTwo1 = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %3, i32 0, i32 1, !dbg !34
  %4 = load i32, ptr %intTwo1, align 4, !dbg !34
  %cmp = icmp slt i32 %4, 0, !dbg !35
  br i1 %cmp, label %if.then, label %if.end, !dbg !35

if.then:                                          ; preds = %entry
  store ptr null, ptr %twoIntsStructPointer, align 8, !dbg !36
  br label %if.end, !dbg !38

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %twoIntsStructPointer, align 8, !dbg !39
  %intTwo2 = getelementptr inbounds nuw %struct._twoIntsStruct, ptr %5, i32 0, i32 1, !dbg !40
  %6 = load i32, ptr %intTwo2, align 4, !dbg !40
  %cmp3 = icmp eq i32 %6, 3, !dbg !41
  %conv = zext i1 %cmp3 to i32, !dbg !41
  %call = call i32 (i32, ...) @svf_assert(i32 noundef %conv), !dbg !42
  ret i32 0, !dbg !43
}

declare i32 @svf_assert(...) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!11, !12, !13, !14, !15, !16, !17}
!llvm.ident = !{!18}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/BASIC_nullptr_def_0-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "c9b714616143a75c636d37ced957d7ac")
!2 = !{!3}
!3 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "twoIntsStruct", file: !5, line: 18, baseType: !6)
!5 = !DIFile(filename: "src/ae_assert_tests/BASIC_nullptr_def_0-0.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "c9b714616143a75c636d37ced957d7ac")
!6 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_twoIntsStruct", file: !5, line: 15, size: 64, elements: !7)
!7 = !{!8, !10}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "intOne", scope: !6, file: !5, line: 16, baseType: !9, size: 32)
!9 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "intTwo", scope: !6, file: !5, line: 17, baseType: !9, size: 32, offset: 32)
!11 = !{i32 7, !"Dwarf Version", i32 5}
!12 = !{i32 2, !"Debug Info Version", i32 3}
!13 = !{i32 1, !"wchar_size", i32 4}
!14 = !{i32 8, !"PIC Level", i32 2}
!15 = !{i32 7, !"PIE Level", i32 2}
!16 = !{i32 7, !"uwtable", i32 2}
!17 = !{i32 7, !"frame-pointer", i32 2}
!18 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!19 = distinct !DISubprogram(name: "main", scope: !5, file: !5, line: 20, type: !20, scopeLine: 20, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !22)
!20 = !DISubroutineType(types: !21)
!21 = !{!9}
!22 = !{}
!23 = !DILocalVariable(name: "twoIntsStructPointer", scope: !19, file: !5, line: 21, type: !3)
!24 = !DILocation(line: 21, column: 18, scope: !19)
!25 = !DILocation(line: 21, column: 59, scope: !19)
!26 = !DILocation(line: 22, column: 2, scope: !19)
!27 = !DILocation(line: 22, column: 24, scope: !19)
!28 = !DILocation(line: 22, column: 31, scope: !19)
!29 = !DILocation(line: 23, column: 5, scope: !19)
!30 = !DILocation(line: 23, column: 27, scope: !19)
!31 = !DILocation(line: 23, column: 34, scope: !19)
!32 = !DILocation(line: 24, column: 9, scope: !33)
!33 = distinct !DILexicalBlock(scope: !19, file: !5, line: 24, column: 9)
!34 = !DILocation(line: 24, column: 31, scope: !33)
!35 = !DILocation(line: 24, column: 38, scope: !33)
!36 = !DILocation(line: 25, column: 30, scope: !37)
!37 = distinct !DILexicalBlock(scope: !33, file: !5, line: 24, column: 43)
!38 = !DILocation(line: 26, column: 5, scope: !37)
!39 = !DILocation(line: 27, column: 13, scope: !19)
!40 = !DILocation(line: 27, column: 35, scope: !19)
!41 = !DILocation(line: 27, column: 42, scope: !19)
!42 = !DILocation(line: 27, column: 2, scope: !19)
!43 = !DILocation(line: 29, column: 2, scope: !19)
