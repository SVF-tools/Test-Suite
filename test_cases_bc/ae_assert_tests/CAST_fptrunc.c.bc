; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_assert_tests/CAST_fptrunc.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/CAST_fptrunc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !12 {
entry:
  %retval = alloca i32, align 4
  %d = alloca double, align 8
  %f = alloca float, align 4
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %d, !18, !DIExpression(), !20)
  store double 1.000000e+00, ptr %d, align 8, !dbg !20
    #dbg_declare(ptr %f, !21, !DIExpression(), !22)
  %0 = load double, ptr %d, align 8, !dbg !23
  %conv = fptrunc double %0 to float, !dbg !24
  store float %conv, ptr %f, align 4, !dbg !22
  %1 = load float, ptr %f, align 4, !dbg !25
  %cmp = fcmp oeq float %1, 1.000000e+00, !dbg !26
  call void @svf_assert(i1 noundef zeroext %cmp), !dbg !27
  ret i32 0, !dbg !28
}

declare void @svf_assert(i1 noundef zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!4, !5, !6, !7, !8, !9, !10}
!llvm.ident = !{!11}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_assert_tests/CAST_fptrunc.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "2e88ac487de5d0c1c4be8578bacc0fcb")
!2 = !{!3}
!3 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!4 = !{i32 7, !"Dwarf Version", i32 5}
!5 = !{i32 2, !"Debug Info Version", i32 3}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 8, !"PIC Level", i32 2}
!8 = !{i32 7, !"PIE Level", i32 2}
!9 = !{i32 7, !"uwtable", i32 2}
!10 = !{i32 7, !"frame-pointer", i32 2}
!11 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!12 = distinct !DISubprogram(name: "main", scope: !13, file: !13, line: 3, type: !14, scopeLine: 3, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !17)
!13 = !DIFile(filename: "src/ae_assert_tests/CAST_fptrunc.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "2e88ac487de5d0c1c4be8578bacc0fcb")
!14 = !DISubroutineType(types: !15)
!15 = !{!16}
!16 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!17 = !{}
!18 = !DILocalVariable(name: "d", scope: !12, file: !13, line: 4, type: !19)
!19 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!20 = !DILocation(line: 4, column: 12, scope: !12)
!21 = !DILocalVariable(name: "f", scope: !12, file: !13, line: 5, type: !3)
!22 = !DILocation(line: 5, column: 11, scope: !12)
!23 = !DILocation(line: 5, column: 22, scope: !12)
!24 = !DILocation(line: 5, column: 15, scope: !12)
!25 = !DILocation(line: 6, column: 16, scope: !12)
!26 = !DILocation(line: 6, column: 18, scope: !12)
!27 = !DILocation(line: 6, column: 5, scope: !12)
!28 = !DILocation(line: 7, column: 5, scope: !12)
