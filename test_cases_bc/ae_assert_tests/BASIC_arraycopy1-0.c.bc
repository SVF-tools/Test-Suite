; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_assert_tests/BASIC_arraycopy1-0.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_assert_tests/BASIC_arraycopy1-0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !10 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %source = alloca [2 x ptr], align 16
  %x = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %a, !16, !DIExpression(), !17)
    #dbg_declare(ptr %b, !18, !DIExpression(), !19)
    #dbg_declare(ptr %source, !20, !DIExpression(), !25)
  store ptr %a, ptr %source, align 8, !dbg !26
  %arrayinit.element = getelementptr inbounds ptr, ptr %source, i64 1, !dbg !26
  store ptr %b, ptr %arrayinit.element, align 8, !dbg !26
    #dbg_declare(ptr %x, !27, !DIExpression(), !28)
  %arrayidx = getelementptr inbounds [2 x ptr], ptr %source, i64 0, i64 1, !dbg !29
  %0 = load ptr, ptr %arrayidx, align 8, !dbg !29
  store ptr %0, ptr %x, align 8, !dbg !28
  %1 = load ptr, ptr %x, align 8, !dbg !30
  %cmp = icmp eq ptr %1, %b, !dbg !31
  %conv = zext i1 %cmp to i32, !dbg !31
  %call = call i32 (i32, ...) @svf_assert(i32 noundef %conv), !dbg !32
  ret i32 0, !dbg !33
}

declare i32 @svf_assert(...) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_assert_tests/BASIC_arraycopy1-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "de146ffa0f16e9b76e273bb7984edb78")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"frame-pointer", i32 2}
!9 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!10 = distinct !DISubprogram(name: "main", scope: !11, file: !11, line: 1, type: !12, scopeLine: 1, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !15)
!11 = !DIFile(filename: "src/ae_assert_tests/BASIC_arraycopy1-0.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "de146ffa0f16e9b76e273bb7984edb78")
!12 = !DISubroutineType(types: !13)
!13 = !{!14}
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !{}
!16 = !DILocalVariable(name: "a", scope: !10, file: !11, line: 2, type: !14)
!17 = !DILocation(line: 2, column: 6, scope: !10)
!18 = !DILocalVariable(name: "b", scope: !10, file: !11, line: 2, type: !14)
!19 = !DILocation(line: 2, column: 9, scope: !10)
!20 = !DILocalVariable(name: "source", scope: !10, file: !11, line: 3, type: !21)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 128, elements: !23)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!23 = !{!24}
!24 = !DISubrange(count: 2)
!25 = !DILocation(line: 3, column: 7, scope: !10)
!26 = !DILocation(line: 3, column: 19, scope: !10)
!27 = !DILocalVariable(name: "x", scope: !10, file: !11, line: 4, type: !22)
!28 = !DILocation(line: 4, column: 7, scope: !10)
!29 = !DILocation(line: 4, column: 11, scope: !10)
!30 = !DILocation(line: 5, column: 13, scope: !10)
!31 = !DILocation(line: 5, column: 14, scope: !10)
!32 = !DILocation(line: 5, column: 2, scope: !10)
!33 = !DILocation(line: 6, column: 2, scope: !10)
