; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/basic_cpp_tests/func-ptr-in-class.cpp.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_cpp_tests/func-ptr-in-class.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.A = type { ptr, ptr, ptr }

$_ZN1AC2Ev = comdat any

$_ZN1A1fEPi = comdat any

$_ZN1A1gEPi = comdat any

$_ZTV1A = comdat any

$_ZTS1A = comdat any

$_ZTI1A = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@global_obj_f = dso_local global i32 0, align 4
@global_ptr_f = dso_local global ptr @global_obj_f, align 8
@global_obj_g = dso_local global i32 0, align 4
@global_ptr_g = dso_local global ptr @global_obj_g, align 8
@global_obj_f_v = dso_local global i32 0, align 4
@global_ptr_f_v = dso_local global ptr @global_obj_f_v, align 8
@global_obj_g_v = dso_local global i32 0, align 4
@global_ptr_g_v = dso_local global ptr @global_obj_g_v, align 8
@_ZTV1A = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTI1A, ptr @_ZN1A1fEPi, ptr @_ZN1A1gEPi] }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTS1A = linkonce_odr dso_local constant [3 x i8] c"1A\00", comdat, align 1
@_ZTI1A = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTS1A }, comdat, align 8

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z9MUSTALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

declare i32 @printf(ptr noundef, ...) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z12PARTIALALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z8MAYALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z7NOALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z21EXPECTEDFAIL_MAYALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z20EXPECTEDFAIL_NOALIASPvS_(ptr noundef %p, ptr noundef %q) #0 {
entry:
  %p.addr = alloca ptr, align 8
  %q.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8
  store ptr %q, ptr %q.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z9RC_ACCESSii(i32 noundef %id, i32 noundef %flags) #0 {
entry:
  %id.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %id, ptr %id.addr, align 4
  store i32 %flags, ptr %flags.addr, align 4
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_Z10CXT_THREADiPc(i32 noundef %thdid, ptr noundef %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  store ptr %cxt, ptr %cxt.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_Z10TCT_ACCESSiPc(i32 noundef %thdid, ptr noundef %cxt) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  store ptr %cxt, ptr %cxt.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_Z15INTERLEV_ACCESSiPcS_(i32 noundef %thdid, ptr noundef %cxt, ptr noundef %lev) #2 {
entry:
  %thdid.addr = alloca i32, align 4
  %cxt.addr = alloca ptr, align 8
  %lev.addr = alloca ptr, align 8
  store i32 %thdid, ptr %thdid.addr, align 4
  store ptr %cxt, ptr %cxt.addr, align 8
  store ptr %lev, ptr %lev.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_Z4LOCKPc(ptr noundef %lockname) #2 {
entry:
  %lockname.addr = alloca ptr, align 8
  store ptr %lockname, ptr %lockname.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z5PAUSEPc(ptr noundef %str) #0 {
entry:
  %str.addr = alloca ptr, align 8
  store ptr %str, ptr %str.addr, align 8
  %0 = load ptr, ptr %str.addr, align 8
  %call = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef %0)
  %call1 = call i32 (ptr, ...) @printf(ptr noundef @.str.2)
  %call2 = call i32 @getchar()
  ret void
}

declare i32 @getchar() #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z1fPi(ptr noundef %i) #0 {
entry:
  %i.addr = alloca ptr, align 8
  store ptr %i, ptr %i.addr, align 8
  %0 = load ptr, ptr @global_ptr_f, align 8
  %1 = load ptr, ptr %i.addr, align 8
  call void @_Z9MUSTALIASPvS_(ptr noundef %0, ptr noundef %1)
  %2 = load ptr, ptr @global_ptr_g, align 8
  %3 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %2, ptr noundef %3)
  %4 = load ptr, ptr @global_ptr_f_v, align 8
  %5 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %4, ptr noundef %5)
  %6 = load ptr, ptr @global_ptr_g_v, align 8
  %7 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %6, ptr noundef %7)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z1gPi(ptr noundef %i) #0 {
entry:
  %i.addr = alloca ptr, align 8
  store ptr %i, ptr %i.addr, align 8
  %0 = load ptr, ptr @global_ptr_f, align 8
  %1 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %0, ptr noundef %1)
  %2 = load ptr, ptr @global_ptr_g, align 8
  %3 = load ptr, ptr %i.addr, align 8
  call void @_Z9MUSTALIASPvS_(ptr noundef %2, ptr noundef %3)
  %4 = load ptr, ptr @global_ptr_f_v, align 8
  %5 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %4, ptr noundef %5)
  %6 = load ptr, ptr @global_ptr_g_v, align 8
  %7 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %6, ptr noundef %7)
  ret void
}

; Function Attrs: mustprogress noinline norecurse optnone uwtable
define dso_local noundef i32 @main() #3 {
entry:
  %retval = alloca i32, align 4
  %ptr_f = alloca ptr, align 8
  %ptr_g = alloca ptr, align 8
  %ptr_f_v = alloca ptr, align 8
  %ptr_g_v = alloca ptr, align 8
  %a = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store ptr @global_obj_f, ptr %ptr_f, align 8
  store ptr @global_obj_g, ptr %ptr_g, align 8
  store ptr @global_obj_f_v, ptr %ptr_f_v, align 8
  store ptr @global_obj_g_v, ptr %ptr_g_v, align 8
  %call = call noalias noundef nonnull ptr @_Znwm(i64 noundef 24) #6
  call void @_ZN1AC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %call) #7
  store ptr %call, ptr %a, align 8
  %0 = load ptr, ptr %a, align 8
  %pf = getelementptr inbounds %class.A, ptr %0, i32 0, i32 1
  store ptr @_Z1fPi, ptr %pf, align 8
  %1 = load ptr, ptr %a, align 8
  %pg = getelementptr inbounds %class.A, ptr %1, i32 0, i32 2
  store ptr @_Z1gPi, ptr %pg, align 8
  %2 = load ptr, ptr %a, align 8
  %pf1 = getelementptr inbounds %class.A, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %pf1, align 8
  %4 = load ptr, ptr %ptr_f, align 8
  call void %3(ptr noundef %4)
  %5 = load ptr, ptr %a, align 8
  %pg2 = getelementptr inbounds %class.A, ptr %5, i32 0, i32 2
  %6 = load ptr, ptr %pg2, align 8
  %7 = load ptr, ptr %ptr_g, align 8
  call void %6(ptr noundef %7)
  %8 = load ptr, ptr %a, align 8
  %9 = load ptr, ptr %ptr_f_v, align 8
  %vtable = load ptr, ptr %8, align 8
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 0
  %10 = load ptr, ptr %vfn, align 8
  call void %10(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %9)
  %11 = load ptr, ptr %a, align 8
  %12 = load ptr, ptr %ptr_g_v, align 8
  %vtable3 = load ptr, ptr %11, align 8
  %vfn4 = getelementptr inbounds ptr, ptr %vtable3, i64 1
  %13 = load ptr, ptr %vfn4, align 8
  call void %13(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr noundef %12)
  ret i32 0
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1AC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8
  %this1 = load ptr, ptr %this.addr, align 8
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTV1A, i32 0, inrange i32 0, i32 2), ptr %this1, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1A1fEPi(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8
  store ptr %i, ptr %i.addr, align 8
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr @global_ptr_f, align 8
  %1 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %0, ptr noundef %1)
  %2 = load ptr, ptr @global_ptr_g, align 8
  %3 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %2, ptr noundef %3)
  %4 = load ptr, ptr @global_ptr_f_v, align 8
  %5 = load ptr, ptr %i.addr, align 8
  call void @_Z9MUSTALIASPvS_(ptr noundef %4, ptr noundef %5)
  %6 = load ptr, ptr @global_ptr_g_v, align 8
  %7 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %6, ptr noundef %7)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1A1gEPi(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef %i) unnamed_addr #0 comdat align 2 {
entry:
  %this.addr = alloca ptr, align 8
  %i.addr = alloca ptr, align 8
  store ptr %this, ptr %this.addr, align 8
  store ptr %i, ptr %i.addr, align 8
  %this1 = load ptr, ptr %this.addr, align 8
  %0 = load ptr, ptr @global_ptr_f, align 8
  %1 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %0, ptr noundef %1)
  %2 = load ptr, ptr @global_ptr_g, align 8
  %3 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %2, ptr noundef %3)
  %4 = load ptr, ptr @global_ptr_f_v, align 8
  %5 = load ptr, ptr %i.addr, align 8
  call void @_Z7NOALIASPvS_(ptr noundef %4, ptr noundef %5)
  %6 = load ptr, ptr @global_ptr_g_v, align 8
  %7 = load ptr, ptr %i.addr, align 8
  call void @_Z9MUSTALIASPvS_(ptr noundef %6, ptr noundef %7)
  ret void
}

attributes #0 = { mustprogress noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress noinline norecurse optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { builtin allocsize(0) }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 16.0.0"}
