; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/ae_overflow_tests/CWE126_Buffer_Overread__malloc_wchar_t_memmove_01.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__malloc_wchar_t_memmove_01.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [18 x i8] c"Calling good()...\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [16 x i8] c"Finished good()\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1, !dbg !17

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_bad() #0 !dbg !40 {
entry:
  %data = alloca ptr, align 8
  %dest = alloca [100 x i32], align 16
  call void @llvm.dbg.declare(metadata ptr %data, metadata !44, metadata !DIExpression()), !dbg !45
  store ptr null, ptr %data, align 8, !dbg !46
  %call = call noalias ptr @malloc(i64 noundef 200) #8, !dbg !47
  store ptr %call, ptr %data, align 8, !dbg !48
  %0 = load ptr, ptr %data, align 8, !dbg !49
  %cmp = icmp eq ptr %0, null, !dbg !51
  br i1 %cmp, label %if.then, label %if.end, !dbg !52

if.then:                                          ; preds = %entry
  call void @exit(i32 noundef -1) #9, !dbg !53
  unreachable, !dbg !53

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %data, align 8, !dbg !55
  %call1 = call ptr @wmemset(ptr noundef %1, i32 noundef 65, i64 noundef 49) #10, !dbg !56
  %2 = load ptr, ptr %data, align 8, !dbg !57
  %arrayidx = getelementptr inbounds i32, ptr %2, i64 49, !dbg !57
  store i32 0, ptr %arrayidx, align 4, !dbg !58
  call void @llvm.dbg.declare(metadata ptr %dest, metadata !59, metadata !DIExpression()), !dbg !64
  %arraydecay = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !65
  %call2 = call ptr @wmemset(ptr noundef %arraydecay, i32 noundef 67, i64 noundef 99) #10, !dbg !66
  %arrayidx3 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !67
  store i32 0, ptr %arrayidx3, align 4, !dbg !68
  %arraydecay4 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !69
  %arraydecay5 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !70
  %call6 = call i64 @wcslen(ptr noundef %arraydecay5) #11, !dbg !71
  %mul = mul i64 %call6, 4, !dbg !72
  %sub = sub i64 %mul, 1, !dbg !73
  %call7 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %arraydecay4, i64 noundef %sub), !dbg !74
  %3 = load ptr, ptr %data, align 8, !dbg !75
  %arraydecay8 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !76
  %call9 = call i64 @wcslen(ptr noundef %arraydecay8) #11, !dbg !77
  %mul10 = mul i64 %call9, 4, !dbg !78
  %sub11 = sub i64 %mul10, 1, !dbg !79
  %call12 = call i32 (ptr, i64, ...) @UNSAFE_BUFACCESS(ptr noundef %3, i64 noundef %sub11), !dbg !80
  %arraydecay13 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !81
  %4 = load ptr, ptr %data, align 8, !dbg !82
  %arraydecay14 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !83
  %call15 = call i64 @wcslen(ptr noundef %arraydecay14) #11, !dbg !84
  %mul16 = mul i64 %call15, 4, !dbg !85
  call void @llvm.memmove.p0.p0.i64(ptr align 16 %arraydecay13, ptr align 4 %4, i64 %mul16, i1 false), !dbg !81
  %arrayidx17 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !86
  store i32 0, ptr %arrayidx17, align 4, !dbg !87
  %arraydecay18 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !88
  call void @printWLine(ptr noundef %arraydecay18), !dbg !89
  %5 = load ptr, ptr %data, align 8, !dbg !90
  call void @free(ptr noundef %5) #10, !dbg !91
  ret void, !dbg !92
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) #3

; Function Attrs: nounwind
declare ptr @wmemset(ptr noundef, i32 noundef, i64 noundef) #4

declare i32 @SAFE_BUFACCESS(...) #5

; Function Attrs: nounwind willreturn memory(read)
declare i64 @wcslen(ptr noundef) #6

declare i32 @UNSAFE_BUFACCESS(...) #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #7

declare void @printWLine(ptr noundef) #5

; Function Attrs: nounwind
declare void @free(ptr noundef) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_good() #0 !dbg !93 {
entry:
  call void @goodG2B(), !dbg !94
  ret void, !dbg !95
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) #0 !dbg !96 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store i32 %argc, ptr %argc.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %argc.addr, metadata !101, metadata !DIExpression()), !dbg !102
  store ptr %argv, ptr %argv.addr, align 8
  call void @llvm.dbg.declare(metadata ptr %argv.addr, metadata !103, metadata !DIExpression()), !dbg !104
  %call = call i64 @time(ptr noundef null) #10, !dbg !105
  %conv = trunc i64 %call to i32, !dbg !106
  call void @srand(i32 noundef %conv) #10, !dbg !107
  call void @printLine(ptr noundef @.str), !dbg !108
  call void @CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_good(), !dbg !109
  call void @printLine(ptr noundef @.str.1), !dbg !110
  call void @printLine(ptr noundef @.str.2), !dbg !111
  call void @CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_bad(), !dbg !112
  call void @printLine(ptr noundef @.str.3), !dbg !113
  ret i32 0, !dbg !114
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #4

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #4

declare void @printLine(ptr noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodG2B() #0 !dbg !115 {
entry:
  %data = alloca ptr, align 8
  %dest = alloca [100 x i32], align 16
  call void @llvm.dbg.declare(metadata ptr %data, metadata !116, metadata !DIExpression()), !dbg !117
  store ptr null, ptr %data, align 8, !dbg !118
  %call = call noalias ptr @malloc(i64 noundef 400) #8, !dbg !119
  store ptr %call, ptr %data, align 8, !dbg !120
  %0 = load ptr, ptr %data, align 8, !dbg !121
  %cmp = icmp eq ptr %0, null, !dbg !123
  br i1 %cmp, label %if.then, label %if.end, !dbg !124

if.then:                                          ; preds = %entry
  call void @exit(i32 noundef -1) #9, !dbg !125
  unreachable, !dbg !125

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %data, align 8, !dbg !127
  %call1 = call ptr @wmemset(ptr noundef %1, i32 noundef 65, i64 noundef 99) #10, !dbg !128
  %2 = load ptr, ptr %data, align 8, !dbg !129
  %arrayidx = getelementptr inbounds i32, ptr %2, i64 99, !dbg !129
  store i32 0, ptr %arrayidx, align 4, !dbg !130
  call void @llvm.dbg.declare(metadata ptr %dest, metadata !131, metadata !DIExpression()), !dbg !133
  %arraydecay = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !134
  %call2 = call ptr @wmemset(ptr noundef %arraydecay, i32 noundef 67, i64 noundef 99) #10, !dbg !135
  %arrayidx3 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !136
  store i32 0, ptr %arrayidx3, align 4, !dbg !137
  %arraydecay4 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !138
  %arraydecay5 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !139
  %call6 = call i64 @wcslen(ptr noundef %arraydecay5) #11, !dbg !140
  %mul = mul i64 %call6, 4, !dbg !141
  %sub = sub i64 %mul, 1, !dbg !142
  %call7 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %arraydecay4, i64 noundef %sub), !dbg !143
  %3 = load ptr, ptr %data, align 8, !dbg !144
  %arraydecay8 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !145
  %call9 = call i64 @wcslen(ptr noundef %arraydecay8) #11, !dbg !146
  %mul10 = mul i64 %call9, 4, !dbg !147
  %sub11 = sub i64 %mul10, 1, !dbg !148
  %call12 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %3, i64 noundef %sub11), !dbg !149
  %arraydecay13 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !150
  %4 = load ptr, ptr %data, align 8, !dbg !151
  %arraydecay14 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !152
  %call15 = call i64 @wcslen(ptr noundef %arraydecay14) #11, !dbg !153
  %mul16 = mul i64 %call15, 4, !dbg !154
  call void @llvm.memmove.p0.p0.i64(ptr align 16 %arraydecay13, ptr align 4 %4, i64 %mul16, i1 false), !dbg !150
  %arrayidx17 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !155
  store i32 0, ptr %arrayidx17, align 4, !dbg !156
  %arraydecay18 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !157
  call void @printWLine(ptr noundef %arraydecay18), !dbg !158
  %5 = load ptr, ptr %data, align 8, !dbg !159
  call void @free(ptr noundef %5) #10, !dbg !160
  ret void, !dbg !161
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!22}
!llvm.module.flags = !{!32, !33, !34, !35, !36, !37, !38}
!llvm.ident = !{!39}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 96, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_overflow_tests/CWE126_Buffer_Overread__malloc_wchar_t_memmove_01.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "8635215214eb5e3f64c9415242ab6099")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 18)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 98, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 16)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 101, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 17)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 103, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 15)
!22 = distinct !DICompileUnit(language: DW_LANG_C11, file: !23, producer: "clang version 16.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !24, globals: !31, splitDebugInlining: false, nameTableKind: None)
!23 = !DIFile(filename: "/home/runner/work/Test-Suite/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__malloc_wchar_t_memmove_01.c", directory: "/home/runner/work/Test-Suite/Test-Suite", checksumkind: CSK_MD5, checksum: "8635215214eb5e3f64c9415242ab6099")
!24 = !{!25, !29, !30}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !27, line: 74, baseType: !28)
!27 = !DIFile(filename: "/opt/llvm/lib/clang/16/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!28 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!0, !7, !12, !17}
!32 = !{i32 7, !"Dwarf Version", i32 5}
!33 = !{i32 2, !"Debug Info Version", i32 3}
!34 = !{i32 1, !"wchar_size", i32 4}
!35 = !{i32 8, !"PIC Level", i32 2}
!36 = !{i32 7, !"PIE Level", i32 2}
!37 = !{i32 7, !"uwtable", i32 2}
!38 = !{i32 7, !"frame-pointer", i32 2}
!39 = !{!"clang version 16.0.0"}
!40 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_bad", scope: !2, file: !2, line: 23, type: !41, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !22, retainedNodes: !43)
!41 = !DISubroutineType(types: !42)
!42 = !{null}
!43 = !{}
!44 = !DILocalVariable(name: "data", scope: !40, file: !2, line: 25, type: !25)
!45 = !DILocation(line: 25, column: 15, scope: !40)
!46 = !DILocation(line: 26, column: 10, scope: !40)
!47 = !DILocation(line: 28, column: 23, scope: !40)
!48 = !DILocation(line: 28, column: 10, scope: !40)
!49 = !DILocation(line: 29, column: 9, scope: !50)
!50 = distinct !DILexicalBlock(scope: !40, file: !2, line: 29, column: 9)
!51 = !DILocation(line: 29, column: 14, scope: !50)
!52 = !DILocation(line: 29, column: 9, scope: !40)
!53 = !DILocation(line: 29, column: 24, scope: !54)
!54 = distinct !DILexicalBlock(scope: !50, file: !2, line: 29, column: 23)
!55 = !DILocation(line: 30, column: 13, scope: !40)
!56 = !DILocation(line: 30, column: 5, scope: !40)
!57 = !DILocation(line: 31, column: 5, scope: !40)
!58 = !DILocation(line: 31, column: 16, scope: !40)
!59 = !DILocalVariable(name: "dest", scope: !60, file: !2, line: 33, type: !61)
!60 = distinct !DILexicalBlock(scope: !40, file: !2, line: 32, column: 5)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 3200, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 100)
!64 = !DILocation(line: 33, column: 17, scope: !60)
!65 = !DILocation(line: 34, column: 17, scope: !60)
!66 = !DILocation(line: 34, column: 9, scope: !60)
!67 = !DILocation(line: 35, column: 9, scope: !60)
!68 = !DILocation(line: 35, column: 21, scope: !60)
!69 = !DILocation(line: 38, column: 24, scope: !60)
!70 = !DILocation(line: 38, column: 37, scope: !60)
!71 = !DILocation(line: 38, column: 30, scope: !60)
!72 = !DILocation(line: 38, column: 42, scope: !60)
!73 = !DILocation(line: 38, column: 59, scope: !60)
!74 = !DILocation(line: 38, column: 9, scope: !60)
!75 = !DILocation(line: 39, column: 26, scope: !60)
!76 = !DILocation(line: 39, column: 39, scope: !60)
!77 = !DILocation(line: 39, column: 32, scope: !60)
!78 = !DILocation(line: 39, column: 44, scope: !60)
!79 = !DILocation(line: 39, column: 61, scope: !60)
!80 = !DILocation(line: 39, column: 9, scope: !60)
!81 = !DILocation(line: 40, column: 9, scope: !60)
!82 = !DILocation(line: 40, column: 23, scope: !60)
!83 = !DILocation(line: 40, column: 36, scope: !60)
!84 = !DILocation(line: 40, column: 29, scope: !60)
!85 = !DILocation(line: 40, column: 41, scope: !60)
!86 = !DILocation(line: 41, column: 9, scope: !60)
!87 = !DILocation(line: 41, column: 21, scope: !60)
!88 = !DILocation(line: 42, column: 20, scope: !60)
!89 = !DILocation(line: 42, column: 9, scope: !60)
!90 = !DILocation(line: 43, column: 14, scope: !60)
!91 = !DILocation(line: 43, column: 9, scope: !60)
!92 = !DILocation(line: 45, column: 1, scope: !40)
!93 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__malloc_wchar_t_memmove_01_good", scope: !2, file: !2, line: 76, type: !41, scopeLine: 77, spFlags: DISPFlagDefinition, unit: !22, retainedNodes: !43)
!94 = !DILocation(line: 78, column: 5, scope: !93)
!95 = !DILocation(line: 79, column: 1, scope: !93)
!96 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 91, type: !97, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !22, retainedNodes: !43)
!97 = !DISubroutineType(types: !98)
!98 = !{!28, !28, !99}
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!101 = !DILocalVariable(name: "argc", arg: 1, scope: !96, file: !2, line: 91, type: !28)
!102 = !DILocation(line: 91, column: 14, scope: !96)
!103 = !DILocalVariable(name: "argv", arg: 2, scope: !96, file: !2, line: 91, type: !99)
!104 = !DILocation(line: 91, column: 27, scope: !96)
!105 = !DILocation(line: 94, column: 22, scope: !96)
!106 = !DILocation(line: 94, column: 12, scope: !96)
!107 = !DILocation(line: 94, column: 5, scope: !96)
!108 = !DILocation(line: 96, column: 5, scope: !96)
!109 = !DILocation(line: 97, column: 5, scope: !96)
!110 = !DILocation(line: 98, column: 5, scope: !96)
!111 = !DILocation(line: 101, column: 5, scope: !96)
!112 = !DILocation(line: 102, column: 5, scope: !96)
!113 = !DILocation(line: 103, column: 5, scope: !96)
!114 = !DILocation(line: 105, column: 5, scope: !96)
!115 = distinct !DISubprogram(name: "goodG2B", scope: !2, file: !2, line: 52, type: !41, scopeLine: 53, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !22, retainedNodes: !43)
!116 = !DILocalVariable(name: "data", scope: !115, file: !2, line: 54, type: !25)
!117 = !DILocation(line: 54, column: 15, scope: !115)
!118 = !DILocation(line: 55, column: 10, scope: !115)
!119 = !DILocation(line: 57, column: 23, scope: !115)
!120 = !DILocation(line: 57, column: 10, scope: !115)
!121 = !DILocation(line: 58, column: 9, scope: !122)
!122 = distinct !DILexicalBlock(scope: !115, file: !2, line: 58, column: 9)
!123 = !DILocation(line: 58, column: 14, scope: !122)
!124 = !DILocation(line: 58, column: 9, scope: !115)
!125 = !DILocation(line: 58, column: 24, scope: !126)
!126 = distinct !DILexicalBlock(scope: !122, file: !2, line: 58, column: 23)
!127 = !DILocation(line: 59, column: 13, scope: !115)
!128 = !DILocation(line: 59, column: 5, scope: !115)
!129 = !DILocation(line: 60, column: 5, scope: !115)
!130 = !DILocation(line: 60, column: 17, scope: !115)
!131 = !DILocalVariable(name: "dest", scope: !132, file: !2, line: 62, type: !61)
!132 = distinct !DILexicalBlock(scope: !115, file: !2, line: 61, column: 5)
!133 = !DILocation(line: 62, column: 17, scope: !132)
!134 = !DILocation(line: 63, column: 17, scope: !132)
!135 = !DILocation(line: 63, column: 9, scope: !132)
!136 = !DILocation(line: 64, column: 9, scope: !132)
!137 = !DILocation(line: 64, column: 21, scope: !132)
!138 = !DILocation(line: 67, column: 24, scope: !132)
!139 = !DILocation(line: 67, column: 37, scope: !132)
!140 = !DILocation(line: 67, column: 30, scope: !132)
!141 = !DILocation(line: 67, column: 42, scope: !132)
!142 = !DILocation(line: 67, column: 59, scope: !132)
!143 = !DILocation(line: 67, column: 9, scope: !132)
!144 = !DILocation(line: 68, column: 24, scope: !132)
!145 = !DILocation(line: 68, column: 37, scope: !132)
!146 = !DILocation(line: 68, column: 30, scope: !132)
!147 = !DILocation(line: 68, column: 42, scope: !132)
!148 = !DILocation(line: 68, column: 59, scope: !132)
!149 = !DILocation(line: 68, column: 9, scope: !132)
!150 = !DILocation(line: 69, column: 9, scope: !132)
!151 = !DILocation(line: 69, column: 23, scope: !132)
!152 = !DILocation(line: 69, column: 36, scope: !132)
!153 = !DILocation(line: 69, column: 29, scope: !132)
!154 = !DILocation(line: 69, column: 41, scope: !132)
!155 = !DILocation(line: 70, column: 9, scope: !132)
!156 = !DILocation(line: 70, column: 21, scope: !132)
!157 = !DILocation(line: 71, column: 20, scope: !132)
!158 = !DILocation(line: 71, column: 9, scope: !132)
!159 = !DILocation(line: 72, column: 14, scope: !132)
!160 = !DILocation(line: 72, column: 9, scope: !132)
!161 = !DILocation(line: 74, column: 1, scope: !115)
