; ModuleID = '/root/testsss/Test-Suite/test_cases_bc/ae_overflow_tests/CWE126_Buffer_Overread__wchar_t_declare_memmove_01.c.bc'
source_filename = "/root/testsss/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__wchar_t_declare_memmove_01.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [18 x i8] c"Calling good()...\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [16 x i8] c"Finished good()\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1, !dbg !17

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__wchar_t_declare_memmove_01_bad() #0 !dbg !35 {
entry:
  %data = alloca ptr, align 8
  %dataBadBuffer = alloca [50 x i32], align 16
  %dataGoodBuffer = alloca [100 x i32], align 16
  %dest = alloca [100 x i32], align 16
    #dbg_declare(ptr %data, !39, !DIExpression(), !44)
    #dbg_declare(ptr %dataBadBuffer, !45, !DIExpression(), !49)
    #dbg_declare(ptr %dataGoodBuffer, !50, !DIExpression(), !54)
  %arraydecay = getelementptr inbounds [50 x i32], ptr %dataBadBuffer, i64 0, i64 0, !dbg !55
  %call = call ptr @wmemset(ptr noundef %arraydecay, i32 noundef 65, i64 noundef 49) #5, !dbg !56
  %arrayidx = getelementptr inbounds [50 x i32], ptr %dataBadBuffer, i64 0, i64 49, !dbg !57
  store i32 0, ptr %arrayidx, align 4, !dbg !58
  %arraydecay1 = getelementptr inbounds [100 x i32], ptr %dataGoodBuffer, i64 0, i64 0, !dbg !59
  %call2 = call ptr @wmemset(ptr noundef %arraydecay1, i32 noundef 65, i64 noundef 99) #5, !dbg !60
  %arrayidx3 = getelementptr inbounds [100 x i32], ptr %dataGoodBuffer, i64 0, i64 99, !dbg !61
  store i32 0, ptr %arrayidx3, align 4, !dbg !62
  %arraydecay4 = getelementptr inbounds [50 x i32], ptr %dataBadBuffer, i64 0, i64 0, !dbg !63
  store ptr %arraydecay4, ptr %data, align 8, !dbg !64
    #dbg_declare(ptr %dest, !65, !DIExpression(), !67)
  %arraydecay5 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !68
  %call6 = call ptr @wmemset(ptr noundef %arraydecay5, i32 noundef 67, i64 noundef 99) #5, !dbg !69
  %arrayidx7 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !70
  store i32 0, ptr %arrayidx7, align 4, !dbg !71
  %arraydecay8 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !72
  %arraydecay9 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !73
  %call10 = call i64 @wcslen(ptr noundef %arraydecay9) #6, !dbg !74
  %mul = mul i64 %call10, 4, !dbg !75
  %sub = sub i64 %mul, 1, !dbg !76
  %call11 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %arraydecay8, i64 noundef %sub), !dbg !77
  %0 = load ptr, ptr %data, align 8, !dbg !78
  %arraydecay12 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !79
  %call13 = call i64 @wcslen(ptr noundef %arraydecay12) #6, !dbg !80
  %mul14 = mul i64 %call13, 4, !dbg !81
  %sub15 = sub i64 %mul14, 1, !dbg !82
  %call16 = call i32 (ptr, i64, ...) @UNSAFE_BUFACCESS(ptr noundef %0, i64 noundef %sub15), !dbg !83
  %arraydecay17 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !84
  %1 = load ptr, ptr %data, align 8, !dbg !85
  %arraydecay18 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !86
  %call19 = call i64 @wcslen(ptr noundef %arraydecay18) #6, !dbg !87
  %mul20 = mul i64 %call19, 4, !dbg !88
  call void @llvm.memmove.p0.p0.i64(ptr align 16 %arraydecay17, ptr align 4 %1, i64 %mul20, i1 false), !dbg !84
  %arrayidx21 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !89
  store i32 0, ptr %arrayidx21, align 4, !dbg !90
  %arraydecay22 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !91
  call void @printWLine(ptr noundef %arraydecay22), !dbg !92
  ret void, !dbg !93
}

; Function Attrs: nounwind
declare ptr @wmemset(ptr noundef, i32 noundef, i64 noundef) #1

declare i32 @SAFE_BUFACCESS(...) #2

; Function Attrs: nounwind willreturn memory(read)
declare i64 @wcslen(ptr noundef) #3

declare i32 @UNSAFE_BUFACCESS(...) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #4

declare void @printWLine(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__wchar_t_declare_memmove_01_good() #0 !dbg !94 {
entry:
  call void @goodG2B(), !dbg !95
  ret void, !dbg !96
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) #0 !dbg !97 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store i32 %argc, ptr %argc.addr, align 4
    #dbg_declare(ptr %argc.addr, !102, !DIExpression(), !103)
  store ptr %argv, ptr %argv.addr, align 8
    #dbg_declare(ptr %argv.addr, !104, !DIExpression(), !105)
  %call = call i64 @time(ptr noundef null) #5, !dbg !106
  %conv = trunc i64 %call to i32, !dbg !107
  call void @srand(i32 noundef %conv) #5, !dbg !108
  call void @printLine(ptr noundef @.str), !dbg !109
  call void @CWE126_Buffer_Overread__wchar_t_declare_memmove_01_good(), !dbg !110
  call void @printLine(ptr noundef @.str.1), !dbg !111
  call void @printLine(ptr noundef @.str.2), !dbg !112
  call void @CWE126_Buffer_Overread__wchar_t_declare_memmove_01_bad(), !dbg !113
  call void @printLine(ptr noundef @.str.3), !dbg !114
  ret i32 0, !dbg !115
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #1

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #1

declare void @printLine(ptr noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodG2B() #0 !dbg !116 {
entry:
  %data = alloca ptr, align 8
  %dataBadBuffer = alloca [50 x i32], align 16
  %dataGoodBuffer = alloca [100 x i32], align 16
  %dest = alloca [100 x i32], align 16
    #dbg_declare(ptr %data, !117, !DIExpression(), !118)
    #dbg_declare(ptr %dataBadBuffer, !119, !DIExpression(), !120)
    #dbg_declare(ptr %dataGoodBuffer, !121, !DIExpression(), !122)
  %arraydecay = getelementptr inbounds [50 x i32], ptr %dataBadBuffer, i64 0, i64 0, !dbg !123
  %call = call ptr @wmemset(ptr noundef %arraydecay, i32 noundef 65, i64 noundef 49) #5, !dbg !124
  %arrayidx = getelementptr inbounds [50 x i32], ptr %dataBadBuffer, i64 0, i64 49, !dbg !125
  store i32 0, ptr %arrayidx, align 4, !dbg !126
  %arraydecay1 = getelementptr inbounds [100 x i32], ptr %dataGoodBuffer, i64 0, i64 0, !dbg !127
  %call2 = call ptr @wmemset(ptr noundef %arraydecay1, i32 noundef 65, i64 noundef 99) #5, !dbg !128
  %arrayidx3 = getelementptr inbounds [100 x i32], ptr %dataGoodBuffer, i64 0, i64 99, !dbg !129
  store i32 0, ptr %arrayidx3, align 4, !dbg !130
  %arraydecay4 = getelementptr inbounds [100 x i32], ptr %dataGoodBuffer, i64 0, i64 0, !dbg !131
  store ptr %arraydecay4, ptr %data, align 8, !dbg !132
    #dbg_declare(ptr %dest, !133, !DIExpression(), !135)
  %arraydecay5 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !136
  %call6 = call ptr @wmemset(ptr noundef %arraydecay5, i32 noundef 67, i64 noundef 99) #5, !dbg !137
  %arrayidx7 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !138
  store i32 0, ptr %arrayidx7, align 4, !dbg !139
  %arraydecay8 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !140
  %arraydecay9 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !141
  %call10 = call i64 @wcslen(ptr noundef %arraydecay9) #6, !dbg !142
  %mul = mul i64 %call10, 4, !dbg !143
  %sub = sub i64 %mul, 1, !dbg !144
  %call11 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %arraydecay8, i64 noundef %sub), !dbg !145
  %0 = load ptr, ptr %data, align 8, !dbg !146
  %arraydecay12 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !147
  %call13 = call i64 @wcslen(ptr noundef %arraydecay12) #6, !dbg !148
  %mul14 = mul i64 %call13, 4, !dbg !149
  %sub15 = sub i64 %mul14, 1, !dbg !150
  %call16 = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %0, i64 noundef %sub15), !dbg !151
  %arraydecay17 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !152
  %1 = load ptr, ptr %data, align 8, !dbg !153
  %arraydecay18 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !154
  %call19 = call i64 @wcslen(ptr noundef %arraydecay18) #6, !dbg !155
  %mul20 = mul i64 %call19, 4, !dbg !156
  call void @llvm.memmove.p0.p0.i64(ptr align 16 %arraydecay17, ptr align 4 %1, i64 %mul20, i1 false), !dbg !152
  %arrayidx21 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 99, !dbg !157
  store i32 0, ptr %arrayidx21, align 4, !dbg !158
  %arraydecay22 = getelementptr inbounds [100 x i32], ptr %dest, i64 0, i64 0, !dbg !159
  call void @printWLine(ptr noundef %arraydecay22), !dbg !160
  ret void, !dbg !161
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!22}
!llvm.module.flags = !{!27, !28, !29, !30, !31, !32, !33}
!llvm.ident = !{!34}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 99, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_overflow_tests/CWE126_Buffer_Overread__wchar_t_declare_memmove_01.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "422abfa59a070cda3ffbaffe16fff5a8")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 18)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 101, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 16)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 104, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 17)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 106, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 15)
!22 = distinct !DICompileUnit(language: DW_LANG_C11, file: !23, producer: "Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !24, globals: !26, splitDebugInlining: false, nameTableKind: None)
!23 = !DIFile(filename: "/root/testsss/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__wchar_t_declare_memmove_01.c", directory: "/root/testsss/Test-Suite", checksumkind: CSK_MD5, checksum: "422abfa59a070cda3ffbaffe16fff5a8")
!24 = !{!25}
!25 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!26 = !{!0, !7, !12, !17}
!27 = !{i32 7, !"Dwarf Version", i32 5}
!28 = !{i32 2, !"Debug Info Version", i32 3}
!29 = !{i32 1, !"wchar_size", i32 4}
!30 = !{i32 8, !"PIC Level", i32 2}
!31 = !{i32 7, !"PIE Level", i32 2}
!32 = !{i32 7, !"uwtable", i32 2}
!33 = !{i32 7, !"frame-pointer", i32 2}
!34 = !{!"Ubuntu clang version 20.1.2 (++20250402124932+58df0ef89dd6-1~exp1~20250402004952.98)"}
!35 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__wchar_t_declare_memmove_01_bad", scope: !2, file: !2, line: 23, type: !36, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !22, retainedNodes: !38)
!36 = !DISubroutineType(types: !37)
!37 = !{null}
!38 = !{}
!39 = !DILocalVariable(name: "data", scope: !35, file: !2, line: 25, type: !40)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !42, line: 24, baseType: !43)
!42 = !DIFile(filename: "/usr/lib/llvm-20/lib/clang/20/include/__stddef_wchar_t.h", directory: "", checksumkind: CSK_MD5, checksum: "1bf0c51e90dd5eb05cdcc01afdea587a")
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !DILocation(line: 25, column: 15, scope: !35)
!45 = !DILocalVariable(name: "dataBadBuffer", scope: !35, file: !2, line: 26, type: !46)
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 1600, elements: !47)
!47 = !{!48}
!48 = !DISubrange(count: 50)
!49 = !DILocation(line: 26, column: 13, scope: !35)
!50 = !DILocalVariable(name: "dataGoodBuffer", scope: !35, file: !2, line: 27, type: !51)
!51 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 3200, elements: !52)
!52 = !{!53}
!53 = !DISubrange(count: 100)
!54 = !DILocation(line: 27, column: 13, scope: !35)
!55 = !DILocation(line: 28, column: 13, scope: !35)
!56 = !DILocation(line: 28, column: 5, scope: !35)
!57 = !DILocation(line: 29, column: 5, scope: !35)
!58 = !DILocation(line: 29, column: 25, scope: !35)
!59 = !DILocation(line: 30, column: 13, scope: !35)
!60 = !DILocation(line: 30, column: 5, scope: !35)
!61 = !DILocation(line: 31, column: 5, scope: !35)
!62 = !DILocation(line: 31, column: 27, scope: !35)
!63 = !DILocation(line: 33, column: 12, scope: !35)
!64 = !DILocation(line: 33, column: 10, scope: !35)
!65 = !DILocalVariable(name: "dest", scope: !66, file: !2, line: 35, type: !51)
!66 = distinct !DILexicalBlock(scope: !35, file: !2, line: 34, column: 5)
!67 = !DILocation(line: 35, column: 17, scope: !66)
!68 = !DILocation(line: 36, column: 17, scope: !66)
!69 = !DILocation(line: 36, column: 9, scope: !66)
!70 = !DILocation(line: 37, column: 9, scope: !66)
!71 = !DILocation(line: 37, column: 21, scope: !66)
!72 = !DILocation(line: 40, column: 24, scope: !66)
!73 = !DILocation(line: 40, column: 37, scope: !66)
!74 = !DILocation(line: 40, column: 30, scope: !66)
!75 = !DILocation(line: 40, column: 42, scope: !66)
!76 = !DILocation(line: 40, column: 59, scope: !66)
!77 = !DILocation(line: 40, column: 9, scope: !66)
!78 = !DILocation(line: 41, column: 26, scope: !66)
!79 = !DILocation(line: 41, column: 39, scope: !66)
!80 = !DILocation(line: 41, column: 32, scope: !66)
!81 = !DILocation(line: 41, column: 44, scope: !66)
!82 = !DILocation(line: 41, column: 61, scope: !66)
!83 = !DILocation(line: 41, column: 9, scope: !66)
!84 = !DILocation(line: 42, column: 9, scope: !66)
!85 = !DILocation(line: 42, column: 23, scope: !66)
!86 = !DILocation(line: 42, column: 36, scope: !66)
!87 = !DILocation(line: 42, column: 29, scope: !66)
!88 = !DILocation(line: 42, column: 41, scope: !66)
!89 = !DILocation(line: 43, column: 9, scope: !66)
!90 = !DILocation(line: 43, column: 21, scope: !66)
!91 = !DILocation(line: 44, column: 20, scope: !66)
!92 = !DILocation(line: 44, column: 9, scope: !66)
!93 = !DILocation(line: 46, column: 1, scope: !35)
!94 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__wchar_t_declare_memmove_01_good", scope: !2, file: !2, line: 79, type: !36, scopeLine: 80, spFlags: DISPFlagDefinition, unit: !22)
!95 = !DILocation(line: 81, column: 5, scope: !94)
!96 = !DILocation(line: 82, column: 1, scope: !94)
!97 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 94, type: !98, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !22, retainedNodes: !38)
!98 = !DISubroutineType(types: !99)
!99 = !{!43, !43, !100}
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!102 = !DILocalVariable(name: "argc", arg: 1, scope: !97, file: !2, line: 94, type: !43)
!103 = !DILocation(line: 94, column: 14, scope: !97)
!104 = !DILocalVariable(name: "argv", arg: 2, scope: !97, file: !2, line: 94, type: !100)
!105 = !DILocation(line: 94, column: 27, scope: !97)
!106 = !DILocation(line: 97, column: 22, scope: !97)
!107 = !DILocation(line: 97, column: 12, scope: !97)
!108 = !DILocation(line: 97, column: 5, scope: !97)
!109 = !DILocation(line: 99, column: 5, scope: !97)
!110 = !DILocation(line: 100, column: 5, scope: !97)
!111 = !DILocation(line: 101, column: 5, scope: !97)
!112 = !DILocation(line: 104, column: 5, scope: !97)
!113 = !DILocation(line: 105, column: 5, scope: !97)
!114 = !DILocation(line: 106, column: 5, scope: !97)
!115 = !DILocation(line: 108, column: 5, scope: !97)
!116 = distinct !DISubprogram(name: "goodG2B", scope: !2, file: !2, line: 53, type: !36, scopeLine: 54, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !22, retainedNodes: !38)
!117 = !DILocalVariable(name: "data", scope: !116, file: !2, line: 55, type: !40)
!118 = !DILocation(line: 55, column: 15, scope: !116)
!119 = !DILocalVariable(name: "dataBadBuffer", scope: !116, file: !2, line: 56, type: !46)
!120 = !DILocation(line: 56, column: 13, scope: !116)
!121 = !DILocalVariable(name: "dataGoodBuffer", scope: !116, file: !2, line: 57, type: !51)
!122 = !DILocation(line: 57, column: 13, scope: !116)
!123 = !DILocation(line: 58, column: 13, scope: !116)
!124 = !DILocation(line: 58, column: 5, scope: !116)
!125 = !DILocation(line: 59, column: 5, scope: !116)
!126 = !DILocation(line: 59, column: 25, scope: !116)
!127 = !DILocation(line: 60, column: 13, scope: !116)
!128 = !DILocation(line: 60, column: 5, scope: !116)
!129 = !DILocation(line: 61, column: 5, scope: !116)
!130 = !DILocation(line: 61, column: 27, scope: !116)
!131 = !DILocation(line: 63, column: 12, scope: !116)
!132 = !DILocation(line: 63, column: 10, scope: !116)
!133 = !DILocalVariable(name: "dest", scope: !134, file: !2, line: 65, type: !51)
!134 = distinct !DILexicalBlock(scope: !116, file: !2, line: 64, column: 5)
!135 = !DILocation(line: 65, column: 17, scope: !134)
!136 = !DILocation(line: 66, column: 17, scope: !134)
!137 = !DILocation(line: 66, column: 9, scope: !134)
!138 = !DILocation(line: 67, column: 9, scope: !134)
!139 = !DILocation(line: 67, column: 21, scope: !134)
!140 = !DILocation(line: 70, column: 24, scope: !134)
!141 = !DILocation(line: 70, column: 37, scope: !134)
!142 = !DILocation(line: 70, column: 30, scope: !134)
!143 = !DILocation(line: 70, column: 42, scope: !134)
!144 = !DILocation(line: 70, column: 59, scope: !134)
!145 = !DILocation(line: 70, column: 9, scope: !134)
!146 = !DILocation(line: 71, column: 24, scope: !134)
!147 = !DILocation(line: 71, column: 37, scope: !134)
!148 = !DILocation(line: 71, column: 30, scope: !134)
!149 = !DILocation(line: 71, column: 42, scope: !134)
!150 = !DILocation(line: 71, column: 59, scope: !134)
!151 = !DILocation(line: 71, column: 9, scope: !134)
!152 = !DILocation(line: 72, column: 9, scope: !134)
!153 = !DILocation(line: 72, column: 23, scope: !134)
!154 = !DILocation(line: 72, column: 36, scope: !134)
!155 = !DILocation(line: 72, column: 29, scope: !134)
!156 = !DILocation(line: 72, column: 41, scope: !134)
!157 = !DILocation(line: 74, column: 9, scope: !134)
!158 = !DILocation(line: 74, column: 21, scope: !134)
!159 = !DILocation(line: 75, column: 20, scope: !134)
!160 = !DILocation(line: 75, column: 9, scope: !134)
!161 = !DILocation(line: 77, column: 1, scope: !116)
