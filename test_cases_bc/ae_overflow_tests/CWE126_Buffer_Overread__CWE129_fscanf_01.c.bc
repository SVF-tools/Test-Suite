; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_overflow_tests/CWE126_Buffer_Overread__CWE129_fscanf_01.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__CWE129_fscanf_01.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@stdin = external global ptr, align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [31 x i8] c"ERROR: Array index is negative\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [18 x i8] c"Calling good()...\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [16 x i8] c"Finished good()\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1, !dbg !22
@.str.5 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1, !dbg !27
@.str.6 = private unnamed_addr constant [36 x i8] c"ERROR: Array index is out-of-bounds\00", align 1, !dbg !32

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__CWE129_fscanf_01_bad() #0 !dbg !50 {
entry:
  %data = alloca i32, align 4
  %buffer = alloca [10 x i32], align 16
    #dbg_declare(ptr %data, !54, !DIExpression(), !56)
  store i32 -1, ptr %data, align 4, !dbg !57
  %0 = load ptr, ptr @stdin, align 8, !dbg !58
  %call = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %0, ptr noundef @.str, ptr noundef %data), !dbg !59
    #dbg_declare(ptr %buffer, !60, !DIExpression(), !65)
  call void @llvm.memset.p0.i64(ptr align 16 %buffer, i8 0, i64 40, i1 false), !dbg !65
  %1 = load i32, ptr %data, align 4, !dbg !66
  %cmp = icmp sge i32 %1, 0, !dbg !68
  br i1 %cmp, label %if.then, label %if.else, !dbg !68

if.then:                                          ; preds = %entry
  %2 = load i32, ptr %data, align 4, !dbg !69
  %idxprom = sext i32 %2 to i64, !dbg !71
  %arrayidx = getelementptr inbounds [10 x i32], ptr %buffer, i64 0, i64 %idxprom, !dbg !71
  %3 = load i32, ptr %arrayidx, align 4, !dbg !71
  call void @printIntLine(i32 noundef %3), !dbg !72
  %arraydecay = getelementptr inbounds [10 x i32], ptr %buffer, i64 0, i64 0, !dbg !73
  %4 = load i32, ptr %data, align 4, !dbg !74
  %conv = sext i32 %4 to i64, !dbg !74
  %mul = mul i64 %conv, 4, !dbg !75
  %call1 = call i32 (ptr, i64, ...) @UNSAFE_BUFACCESS(ptr noundef %arraydecay, i64 noundef %mul), !dbg !76
  br label %if.end, !dbg !77

if.else:                                          ; preds = %entry
  call void @printLine(ptr noundef @.str.1), !dbg !78
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !80
}

declare i32 @__isoc99_fscanf(ptr noundef, ptr noundef, ...) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

declare void @printIntLine(i32 noundef) #1

declare i32 @UNSAFE_BUFACCESS(...) #1

declare void @printLine(ptr noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CWE126_Buffer_Overread__CWE129_fscanf_01_good() #0 !dbg !81 {
entry:
  call void @goodG2B(), !dbg !82
  call void @goodB2G(), !dbg !83
  ret void, !dbg !84
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) #0 !dbg !85 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
  store i32 %argc, ptr %argc.addr, align 4
    #dbg_declare(ptr %argc.addr, !90, !DIExpression(), !91)
  store ptr %argv, ptr %argv.addr, align 8
    #dbg_declare(ptr %argv.addr, !92, !DIExpression(), !93)
  %call = call i64 @time(ptr noundef null) #4, !dbg !94
  %conv = trunc i64 %call to i32, !dbg !95
  call void @srand(i32 noundef %conv) #4, !dbg !96
  call void @printLine(ptr noundef @.str.2), !dbg !97
  call void @CWE126_Buffer_Overread__CWE129_fscanf_01_good(), !dbg !98
  call void @printLine(ptr noundef @.str.3), !dbg !99
  call void @printLine(ptr noundef @.str.4), !dbg !100
  call void @CWE126_Buffer_Overread__CWE129_fscanf_01_bad(), !dbg !101
  call void @printLine(ptr noundef @.str.5), !dbg !102
  ret i32 0, !dbg !103
}

; Function Attrs: nounwind
declare void @srand(i32 noundef) #3

; Function Attrs: nounwind
declare i64 @time(ptr noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodG2B() #0 !dbg !104 {
entry:
  %data = alloca i32, align 4
  %buffer = alloca [10 x i32], align 16
    #dbg_declare(ptr %data, !105, !DIExpression(), !106)
  store i32 -1, ptr %data, align 4, !dbg !107
  store i32 7, ptr %data, align 4, !dbg !108
    #dbg_declare(ptr %buffer, !109, !DIExpression(), !111)
  call void @llvm.memset.p0.i64(ptr align 16 %buffer, i8 0, i64 40, i1 false), !dbg !111
  %0 = load i32, ptr %data, align 4, !dbg !112
  %cmp = icmp sge i32 %0, 0, !dbg !114
  br i1 %cmp, label %if.then, label %if.else, !dbg !114

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %data, align 4, !dbg !115
  %idxprom = sext i32 %1 to i64, !dbg !117
  %arrayidx = getelementptr inbounds [10 x i32], ptr %buffer, i64 0, i64 %idxprom, !dbg !117
  %2 = load i32, ptr %arrayidx, align 4, !dbg !117
  call void @printIntLine(i32 noundef %2), !dbg !118
  %arraydecay = getelementptr inbounds [10 x i32], ptr %buffer, i64 0, i64 0, !dbg !119
  %3 = load i32, ptr %data, align 4, !dbg !120
  %conv = sext i32 %3 to i64, !dbg !120
  %mul = mul i64 %conv, 4, !dbg !121
  %call = call i32 (ptr, i64, ...) @SAFE_BUFACCESS(ptr noundef %arraydecay, i64 noundef %mul), !dbg !122
  br label %if.end, !dbg !123

if.else:                                          ; preds = %entry
  call void @printLine(ptr noundef @.str.1), !dbg !124
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !126
}

declare i32 @SAFE_BUFACCESS(...) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goodB2G() #0 !dbg !127 {
entry:
  %data = alloca i32, align 4
  %buffer = alloca [10 x i32], align 16
    #dbg_declare(ptr %data, !128, !DIExpression(), !129)
  store i32 -1, ptr %data, align 4, !dbg !130
  %0 = load ptr, ptr @stdin, align 8, !dbg !131
  %call = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %0, ptr noundef @.str, ptr noundef %data), !dbg !132
    #dbg_declare(ptr %buffer, !133, !DIExpression(), !135)
  call void @llvm.memset.p0.i64(ptr align 16 %buffer, i8 0, i64 40, i1 false), !dbg !135
  %1 = load i32, ptr %data, align 4, !dbg !136
  %cmp = icmp sge i32 %1, 0, !dbg !138
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !139

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %data, align 4, !dbg !140
  %cmp1 = icmp slt i32 %2, 10, !dbg !141
  br i1 %cmp1, label %if.then, label %if.else, !dbg !139

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, ptr %data, align 4, !dbg !142
  %idxprom = sext i32 %3 to i64, !dbg !144
  %arrayidx = getelementptr inbounds [10 x i32], ptr %buffer, i64 0, i64 %idxprom, !dbg !144
  %4 = load i32, ptr %arrayidx, align 4, !dbg !144
  call void @printIntLine(i32 noundef %4), !dbg !145
  br label %if.end, !dbg !146

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @printLine(ptr noundef @.str.6), !dbg !147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !149
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!37}
!llvm.module.flags = !{!42, !43, !44, !45, !46, !47, !48}
!llvm.ident = !{!49}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 28, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_overflow_tests/CWE126_Buffer_Overread__CWE129_fscanf_01.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "41aeea6fcf31b631ab24d92c7ac81d5a")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 3)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 40, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 248, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 31)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 116, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 18)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 118, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 16)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(scope: null, file: !2, line: 121, type: !24, isLocal: true, isDefinition: true)
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !25)
!25 = !{!26}
!26 = !DISubrange(count: 17)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(scope: null, file: !2, line: 123, type: !29, isLocal: true, isDefinition: true)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 15)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(scope: null, file: !2, line: 91, type: !34, isLocal: true, isDefinition: true)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, elements: !35)
!35 = !{!36}
!36 = !DISubrange(count: 36)
!37 = distinct !DICompileUnit(language: DW_LANG_C11, file: !38, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !39, globals: !41, splitDebugInlining: false, nameTableKind: None)
!38 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_overflow_tests/CWE126_Buffer_Overread__CWE129_fscanf_01.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "41aeea6fcf31b631ab24d92c7ac81d5a")
!39 = !{!40}
!40 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!41 = !{!0, !7, !12, !17, !22, !27, !32}
!42 = !{i32 7, !"Dwarf Version", i32 5}
!43 = !{i32 2, !"Debug Info Version", i32 3}
!44 = !{i32 1, !"wchar_size", i32 4}
!45 = !{i32 8, !"PIC Level", i32 2}
!46 = !{i32 7, !"PIE Level", i32 2}
!47 = !{i32 7, !"uwtable", i32 2}
!48 = !{i32 7, !"frame-pointer", i32 2}
!49 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!50 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__CWE129_fscanf_01_bad", scope: !2, file: !2, line: 22, type: !51, scopeLine: 23, spFlags: DISPFlagDefinition, unit: !37, retainedNodes: !53)
!51 = !DISubroutineType(types: !52)
!52 = !{null}
!53 = !{}
!54 = !DILocalVariable(name: "data", scope: !50, file: !2, line: 24, type: !55)
!55 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!56 = !DILocation(line: 24, column: 9, scope: !50)
!57 = !DILocation(line: 26, column: 10, scope: !50)
!58 = !DILocation(line: 28, column: 12, scope: !50)
!59 = !DILocation(line: 28, column: 5, scope: !50)
!60 = !DILocalVariable(name: "buffer", scope: !61, file: !2, line: 30, type: !62)
!61 = distinct !DILexicalBlock(scope: !50, file: !2, line: 29, column: 5)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 320, elements: !63)
!63 = !{!64}
!64 = !DISubrange(count: 10)
!65 = !DILocation(line: 30, column: 13, scope: !61)
!66 = !DILocation(line: 33, column: 13, scope: !67)
!67 = distinct !DILexicalBlock(scope: !61, file: !2, line: 33, column: 13)
!68 = !DILocation(line: 33, column: 18, scope: !67)
!69 = !DILocation(line: 35, column: 33, scope: !70)
!70 = distinct !DILexicalBlock(scope: !67, file: !2, line: 34, column: 9)
!71 = !DILocation(line: 35, column: 26, scope: !70)
!72 = !DILocation(line: 35, column: 13, scope: !70)
!73 = !DILocation(line: 36, column: 30, scope: !70)
!74 = !DILocation(line: 36, column: 38, scope: !70)
!75 = !DILocation(line: 36, column: 42, scope: !70)
!76 = !DILocation(line: 36, column: 13, scope: !70)
!77 = !DILocation(line: 37, column: 9, scope: !70)
!78 = !DILocation(line: 40, column: 13, scope: !79)
!79 = distinct !DILexicalBlock(scope: !67, file: !2, line: 39, column: 9)
!80 = !DILocation(line: 43, column: 1, scope: !50)
!81 = distinct !DISubprogram(name: "CWE126_Buffer_Overread__CWE129_fscanf_01_good", scope: !2, file: !2, line: 96, type: !51, scopeLine: 97, spFlags: DISPFlagDefinition, unit: !37)
!82 = !DILocation(line: 98, column: 5, scope: !81)
!83 = !DILocation(line: 99, column: 5, scope: !81)
!84 = !DILocation(line: 100, column: 1, scope: !81)
!85 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 111, type: !86, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !37, retainedNodes: !53)
!86 = !DISubroutineType(types: !87)
!87 = !{!55, !55, !88}
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!90 = !DILocalVariable(name: "argc", arg: 1, scope: !85, file: !2, line: 111, type: !55)
!91 = !DILocation(line: 111, column: 14, scope: !85)
!92 = !DILocalVariable(name: "argv", arg: 2, scope: !85, file: !2, line: 111, type: !88)
!93 = !DILocation(line: 111, column: 27, scope: !85)
!94 = !DILocation(line: 114, column: 22, scope: !85)
!95 = !DILocation(line: 114, column: 12, scope: !85)
!96 = !DILocation(line: 114, column: 5, scope: !85)
!97 = !DILocation(line: 116, column: 5, scope: !85)
!98 = !DILocation(line: 117, column: 5, scope: !85)
!99 = !DILocation(line: 118, column: 5, scope: !85)
!100 = !DILocation(line: 121, column: 5, scope: !85)
!101 = !DILocation(line: 122, column: 5, scope: !85)
!102 = !DILocation(line: 123, column: 5, scope: !85)
!103 = !DILocation(line: 125, column: 5, scope: !85)
!104 = distinct !DISubprogram(name: "goodG2B", scope: !2, file: !2, line: 50, type: !51, scopeLine: 51, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !37, retainedNodes: !53)
!105 = !DILocalVariable(name: "data", scope: !104, file: !2, line: 52, type: !55)
!106 = !DILocation(line: 52, column: 9, scope: !104)
!107 = !DILocation(line: 54, column: 10, scope: !104)
!108 = !DILocation(line: 57, column: 10, scope: !104)
!109 = !DILocalVariable(name: "buffer", scope: !110, file: !2, line: 59, type: !62)
!110 = distinct !DILexicalBlock(scope: !104, file: !2, line: 58, column: 5)
!111 = !DILocation(line: 59, column: 13, scope: !110)
!112 = !DILocation(line: 62, column: 13, scope: !113)
!113 = distinct !DILexicalBlock(scope: !110, file: !2, line: 62, column: 13)
!114 = !DILocation(line: 62, column: 18, scope: !113)
!115 = !DILocation(line: 64, column: 33, scope: !116)
!116 = distinct !DILexicalBlock(scope: !113, file: !2, line: 63, column: 9)
!117 = !DILocation(line: 64, column: 26, scope: !116)
!118 = !DILocation(line: 64, column: 13, scope: !116)
!119 = !DILocation(line: 65, column: 28, scope: !116)
!120 = !DILocation(line: 65, column: 36, scope: !116)
!121 = !DILocation(line: 65, column: 40, scope: !116)
!122 = !DILocation(line: 65, column: 13, scope: !116)
!123 = !DILocation(line: 66, column: 9, scope: !116)
!124 = !DILocation(line: 69, column: 13, scope: !125)
!125 = distinct !DILexicalBlock(scope: !113, file: !2, line: 68, column: 9)
!126 = !DILocation(line: 72, column: 1, scope: !104)
!127 = distinct !DISubprogram(name: "goodB2G", scope: !2, file: !2, line: 75, type: !51, scopeLine: 76, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !37, retainedNodes: !53)
!128 = !DILocalVariable(name: "data", scope: !127, file: !2, line: 77, type: !55)
!129 = !DILocation(line: 77, column: 9, scope: !127)
!130 = !DILocation(line: 79, column: 10, scope: !127)
!131 = !DILocation(line: 81, column: 12, scope: !127)
!132 = !DILocation(line: 81, column: 5, scope: !127)
!133 = !DILocalVariable(name: "buffer", scope: !134, file: !2, line: 83, type: !62)
!134 = distinct !DILexicalBlock(scope: !127, file: !2, line: 82, column: 5)
!135 = !DILocation(line: 83, column: 13, scope: !134)
!136 = !DILocation(line: 85, column: 13, scope: !137)
!137 = distinct !DILexicalBlock(scope: !134, file: !2, line: 85, column: 13)
!138 = !DILocation(line: 85, column: 18, scope: !137)
!139 = !DILocation(line: 85, column: 23, scope: !137)
!140 = !DILocation(line: 85, column: 26, scope: !137)
!141 = !DILocation(line: 85, column: 31, scope: !137)
!142 = !DILocation(line: 87, column: 33, scope: !143)
!143 = distinct !DILexicalBlock(scope: !137, file: !2, line: 86, column: 9)
!144 = !DILocation(line: 87, column: 26, scope: !143)
!145 = !DILocation(line: 87, column: 13, scope: !143)
!146 = !DILocation(line: 88, column: 9, scope: !143)
!147 = !DILocation(line: 91, column: 13, scope: !148)
!148 = distinct !DILexicalBlock(scope: !137, file: !2, line: 90, column: 9)
!149 = !DILocation(line: 94, column: 1, scope: !127)
