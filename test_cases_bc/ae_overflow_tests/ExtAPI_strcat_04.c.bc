; ModuleID = '/root/test/once_more/SVF/Test-Suite/test_cases_bc/ae_overflow_tests/ExtAPI_strcat_04.c.bc'
source_filename = "/root/test/once_more/SVF/Test-Suite/src/ae_overflow_tests/ExtAPI_strcat_04.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.buffer = private unnamed_addr constant [15 x i8] c"Start\00\00\00\00\00\00\00\00\00\00", align 1
@.str = private unnamed_addr constant [6 x i8] c"12345\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [6 x i8] c"67890\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [12 x i8] c"Buffer: %s\0A\00", align 1, !dbg !9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 !dbg !25 {
entry:
  %retval = alloca i32, align 4
  %buffer = alloca [15 x i8], align 1
  %string1 = alloca ptr, align 8
  %string2 = alloca ptr, align 8
  store i32 0, ptr %retval, align 4
    #dbg_declare(ptr %buffer, !30, !DIExpression(), !34)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %buffer, ptr align 1 @__const.main.buffer, i64 15, i1 false), !dbg !34
    #dbg_declare(ptr %string1, !35, !DIExpression(), !37)
  store ptr @.str, ptr %string1, align 8, !dbg !37
    #dbg_declare(ptr %string2, !38, !DIExpression(), !39)
  store ptr @.str.1, ptr %string2, align 8, !dbg !39
  %arraydecay = getelementptr inbounds [15 x i8], ptr %buffer, i64 0, i64 0, !dbg !40
  %0 = load ptr, ptr %string1, align 8, !dbg !41
  %call = call ptr @strcat(ptr noundef %arraydecay, ptr noundef %0) #5, !dbg !42
  %arraydecay1 = getelementptr inbounds [15 x i8], ptr %buffer, i64 0, i64 0, !dbg !43
  %1 = load ptr, ptr %string2, align 8, !dbg !44
  %call2 = call ptr @strcat(ptr noundef %arraydecay1, ptr noundef %1) #5, !dbg !45
  %arraydecay3 = getelementptr inbounds [15 x i8], ptr %buffer, i64 0, i64 0, !dbg !46
  %2 = load ptr, ptr %string1, align 8, !dbg !47
  %call4 = call i64 @strlen(ptr noundef %2) #6, !dbg !48
  %add = add i64 5, %call4, !dbg !49
  %3 = load ptr, ptr %string2, align 8, !dbg !50
  %call5 = call i64 @strlen(ptr noundef %3) #6, !dbg !51
  %add6 = add i64 %add, %call5, !dbg !52
  %conv = trunc i64 %add6 to i32, !dbg !53
  call void @UNSAFE_BUFACCESS(ptr noundef %arraydecay3, i32 noundef %conv), !dbg !54
  %arraydecay7 = getelementptr inbounds [15 x i8], ptr %buffer, i64 0, i64 0, !dbg !55
  %call8 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, ptr noundef %arraydecay7), !dbg !56
  ret i32 0, !dbg !57
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare ptr @strcat(ptr noundef, ptr noundef) #2

declare void @UNSAFE_BUFACCESS(ptr noundef, i32 noundef) #3

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #4

declare i32 @printf(ptr noundef, ...) #3

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind willreturn memory(read) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!14}
!llvm.module.flags = !{!17, !18, !19, !20, !21, !22, !23}
!llvm.ident = !{!24}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 6, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "src/ae_overflow_tests/ExtAPI_strcat_04.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "fd5da5948da61c478b63a4564f9e5cd6")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 6)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 7, type: !3, isLocal: true, isDefinition: true)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(scope: null, file: !2, line: 11, type: !11, isLocal: true, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !12)
!12 = !{!13}
!13 = !DISubrange(count: 12)
!14 = distinct !DICompileUnit(language: DW_LANG_C11, file: !15, producer: "Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !16, splitDebugInlining: false, nameTableKind: None)
!15 = !DIFile(filename: "/root/test/once_more/SVF/Test-Suite/src/ae_overflow_tests/ExtAPI_strcat_04.c", directory: "/root/test/once_more/SVF/Test-Suite", checksumkind: CSK_MD5, checksum: "fd5da5948da61c478b63a4564f9e5cd6")
!16 = !{!0, !7, !9}
!17 = !{i32 7, !"Dwarf Version", i32 5}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = !{i32 1, !"wchar_size", i32 4}
!20 = !{i32 8, !"PIC Level", i32 2}
!21 = !{i32 7, !"PIE Level", i32 2}
!22 = !{i32 7, !"uwtable", i32 2}
!23 = !{i32 7, !"frame-pointer", i32 2}
!24 = !{!"Ubuntu clang version 20.1.3 (++20250415115034+9420327ad768-1~exp1~20250415235124.105)"}
!25 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 4, type: !26, scopeLine: 4, spFlags: DISPFlagDefinition, unit: !14, retainedNodes: !29)
!26 = !DISubroutineType(types: !27)
!27 = !{!28}
!28 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!29 = !{}
!30 = !DILocalVariable(name: "buffer", scope: !25, file: !2, line: 5, type: !31)
!31 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !32)
!32 = !{!33}
!33 = !DISubrange(count: 15)
!34 = !DILocation(line: 5, column: 10, scope: !25)
!35 = !DILocalVariable(name: "string1", scope: !25, file: !2, line: 6, type: !36)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!37 = !DILocation(line: 6, column: 11, scope: !25)
!38 = !DILocalVariable(name: "string2", scope: !25, file: !2, line: 7, type: !36)
!39 = !DILocation(line: 7, column: 11, scope: !25)
!40 = !DILocation(line: 8, column: 12, scope: !25)
!41 = !DILocation(line: 8, column: 20, scope: !25)
!42 = !DILocation(line: 8, column: 5, scope: !25)
!43 = !DILocation(line: 9, column: 12, scope: !25)
!44 = !DILocation(line: 9, column: 20, scope: !25)
!45 = !DILocation(line: 9, column: 5, scope: !25)
!46 = !DILocation(line: 10, column: 22, scope: !25)
!47 = !DILocation(line: 10, column: 41, scope: !25)
!48 = !DILocation(line: 10, column: 34, scope: !25)
!49 = !DILocation(line: 10, column: 32, scope: !25)
!50 = !DILocation(line: 10, column: 59, scope: !25)
!51 = !DILocation(line: 10, column: 52, scope: !25)
!52 = !DILocation(line: 10, column: 50, scope: !25)
!53 = !DILocation(line: 10, column: 30, scope: !25)
!54 = !DILocation(line: 10, column: 5, scope: !25)
!55 = !DILocation(line: 11, column: 28, scope: !25)
!56 = !DILocation(line: 11, column: 5, scope: !25)
!57 = !DILocation(line: 12, column: 5, scope: !25)
